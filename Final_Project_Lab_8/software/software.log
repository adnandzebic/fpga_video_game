KCPSM6 Assembler log file for program 'F:\fpga_video_game\Final_Project_Lab_8\software\software.psm'.
Generated by KCPSM6 version v2.51
Ken Chapman - Xilinx Ltd - 29th May 2013

Assembly datestamp: 18 Nov 2015
Assembly timestamp: 04:44:48

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 050 hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 81
Memory locations available: 4015


Assembly listing

 Addr Code                        Instruction

 000                              ;;============================================================================
 000                              ;; File: software.psm
 000                              ;; This is the PicoBlaze program for EE178 Lab #7.
 000                              ;;============================================================================
 000                              ;;============================================================================
 000                              ;; Port address declarations.
 000                              ;;============================================================================
 000                              CONSTANT switches_lo, 00         ; port for 8-bit switch input
 000                              CONSTANT switches_hi, 01         ; port for 8-bit switch input
 000                              CONSTANT leds_lo, 02             ; port for 8-bit led data out
 000                              CONSTANT leds_hi, 03             ; port for 8-bit led data out
 000                              ;;============================================================================
 000                              ;; NEW STUFF
 000                              ;;============================================================================
 000                              CONSTANT buttons, 04             ; port for 2-bit button input
 000                              CONSTANT seven_segments, 05      ; port for 8-bit seven segment data out
 000                              CONSTANT anodes, 06              ; port for 4-bit seven segment anode data out
 000                              CONSTANT my_sid_lo, 46           ; lo byte of student id (put yours here)
 000                              CONSTANT my_sid_hi, 44           ; hi byte of student id (put yours here)
 000                              CONSTANT zero, 00                ; zero
 000                              CONSTANT one, 01                 ; one
 000                              CONSTANT two, 02                 ; two
 000                              CONSTANT three, 03               ; three
 000                              CONSTANT four, 04                ; four
 000                              CONSTANT five, 05                ; five
 000                              CONSTANT six, 06                 ; six
 000                              CONSTANT seven, 07               ; seven
 000                              CONSTANT eight, 08               ; eight
 000                              CONSTANT nine, 09                ; nine
 000                              ;;============================================================================
 000                              ;; Infinite loop.
 000                              ;;============================================================================
 000  09004                 main: INPUT s0, 04[buttons]            ; get button values
 001  2DC06                       OUTPUT sC, 06[anodes]            ;   NOTE: SC = zero (this turns on the display)
 002  2DB05                       OUTPUT sB, 05[seven_segments]    ;
 003            DEBOUNCING_WAIT1: 
 003  11501                       ADD s5, 01[one]                  ;
 004  1D5FF                       COMPARE s5, FF[11111111'b]       ;
 005  32007                       JUMP Z, 007[DEBOUNCING_WAIT2]    ;
 006  22003                       JUMP 003[DEBOUNCING_WAIT1]       ;
 007            DEBOUNCING_WAIT2: 
 007  01500                       LOAD s5, 00[00000000'b]          ;
 008  11601                       ADD s6, 01[one]                  ;
 009  1D6FF                       COMPARE s6, FF[11111111'b]       ;
 00A  3200C                       JUMP Z, 00C[DEBOUNCING_WAIT3]    ;
 00B  22003                       JUMP 003[DEBOUNCING_WAIT1]       ;
 00C            DEBOUNCING_WAIT3: 
 00C  01600                       LOAD s6, 00[00000000'b]          ;
 00D  11701                       ADD s7, 01[one]                  ;
 00E  1D70F                       COMPARE s7, 0F[00001111'b]       ;
 00F  32011                       JUMP Z, 011[compare1]            ;
 010  22007                       JUMP 007[DEBOUNCING_WAIT2]       ;
 011                    compare1: 
 011  1D001                       COMPARE s0, 01[00000001'b]       ;
 012  32017                       JUMP Z, 017[up_button_pressed]   ;
 013  22014                       JUMP 014[compare2]               ;
 014                    compare2: 
 014  1D002                       COMPARE s0, 02[00000010'b]       ;
 015  32019                       JUMP Z, 019[down_button_pressed] ;
 016  22000                       JUMP 000[main]                   ;
 017           up_button_pressed: 
 017  11A01                       ADD sA, 01[one]                  ;
 018  2201B                       JUMP 01B[display_number]         ;
 019         down_button_pressed: 
 019  19A01                       SUB sA, 01[one]                  ;
 01A  2201B                       JUMP 01B[display_number]         ;
 01B              display_number: 
 01B  1DA00                       COMPARE sA, 00[zero]             ;
 01C  32039                       JUMP Z, 039[display_zero]        ;
 01D  2201E                       JUMP 01E[display_number1]        ;
 01E             display_number1: 
 01E  1DA01                       COMPARE sA, 01[one]              ;
 01F  3203B                       JUMP Z, 03B[display_one]         ;
 020  22021                       JUMP 021[display_number2]        ;
 021             display_number2: 
 021  1DA02                       COMPARE sA, 02[two]              ;
 022  3203D                       JUMP Z, 03D[display_two]         ;
 023  22024                       JUMP 024[display_number3]        ;
 024             display_number3: 
 024  1DA03                       COMPARE sA, 03[three]            ;
 025  3203F                       JUMP Z, 03F[display_three]       ;
 026  22027                       JUMP 027[display_number4]        ;
 027             display_number4: 
 027  1DA04                       COMPARE sA, 04[four]             ;
 028  32041                       JUMP Z, 041[display_four]        ;
 029  2202A                       JUMP 02A[display_number5]        ;
 02A             display_number5: 
 02A  1DA05                       COMPARE sA, 05[five]             ;
 02B  32043                       JUMP Z, 043[display_five]        ;
 02C  2202D                       JUMP 02D[display_number6]        ;
 02D             display_number6: 
 02D  1DA06                       COMPARE sA, 06[six]              ;
 02E  32045                       JUMP Z, 045[display_six]         ;
 02F  22030                       JUMP 030[display_number7]        ;
 030             display_number7: 
 030  1DA07                       COMPARE sA, 07[seven]            ;
 031  32047                       JUMP Z, 047[display_seven]       ;
 032  22033                       JUMP 033[display_number8]        ;
 033             display_number8: 
 033  1DA08                       COMPARE sA, 08[eight]            ;
 034  32049                       JUMP Z, 049[display_eight]       ;
 035  22036                       JUMP 036[display_number9]        ;
 036             display_number9: 
 036  1DA09                       COMPARE sA, 09[nine]             ;
 037  3204B                       JUMP Z, 04B[display_nine]        ;
 038  2204D                       JUMP 04D[reset]                  ;
 039                display_zero: 
 039  01B03                       LOAD sB, 03[00000011'b]          ;
 03A  22000                       JUMP 000[main]                   ;
 03B                 display_one: 
 03B  01B9F                       LOAD sB, 9F[10011111'b]          ;
 03C  22000                       JUMP 000[main]                   ;
 03D                 display_two: 
 03D  01B25                       LOAD sB, 25[00100101'b]          ;
 03E  22000                       JUMP 000[main]                   ;
 03F               display_three: 
 03F  01B0D                       LOAD sB, 0D[00001101'b]          ;
 040  22000                       JUMP 000[main]                   ;
 041                display_four: 
 041  01B99                       LOAD sB, 99[10011001'b]          ;
 042  22000                       JUMP 000[main]                   ;
 043                display_five: 
 043  01B49                       LOAD sB, 49[01001001'b]          ;
 044  22000                       JUMP 000[main]                   ;
 045                 display_six: 
 045  01B41                       LOAD sB, 41[01000001'b]          ;
 046  22000                       JUMP 000[main]                   ;
 047               display_seven: 
 047  01B1F                       LOAD sB, 1F[00011111'b]          ;
 048  22000                       JUMP 000[main]                   ;
 049               display_eight: 
 049  01B01                       LOAD sB, 01[00000001'b]          ;
 04A  22000                       JUMP 000[main]                   ;
 04B                display_nine: 
 04B  01B09                       LOAD sB, 09[00001001'b]          ;
 04C  22000                       JUMP 000[main]                   ;
 04D                       reset: 
 04D  01B03                       LOAD sB, 03[00000011'b]          ; ZERO
 04E  01A00                       LOAD sA, 00[zero]                ;
 04F  22000                       JUMP 000[main]                   ;
 050  22000                       JUMP 000[main]                   ;
 051                              ;;============================================================================
 051                              ;;
 051                              ;;============================================================================
 051                              ; Currently, this program acts as a "virtual wire" by reading
 051                              ; the switch values and copying them to the leds.  You should
 051                              ; prove to yourself that this works.
 051                              ; Then, you need to modify this program.  If the 16-bit switch
 051                              ; value in {s1,s0} equals {my_sid_hi,my_sid_lo} then display it
 051                              ; on the leds.  Otherwise, count the number of "1's" in {s1,s0}
 051                              ; and display the result on the leds.



List of PSM files that have been assembled

F:\fpga_video_game\Final_Project_Lab_8\software\software.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   04'd         
 timestamp_minutes 44'd         
 timestamp_seconds 48'd         
 datestamp_year    15'd         
 datestamp_month   11'd         
 datestamp_day     18'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 switches_lo       00           software.psm
 switches_hi       01           software.psm
 leds_lo           02           software.psm
 leds_hi           03           software.psm
 buttons           04           software.psm
 seven_segments    05           software.psm
 anodes            06           software.psm
 my_sid_lo         46           software.psm
 my_sid_hi         44           software.psm
 zero              00           software.psm
 one               01           software.psm
 two               02           software.psm
 three             03           software.psm
 four              04           software.psm
 five              05           software.psm
 six               06           software.psm
 seven             07           software.psm
 eight             08           software.psm
 nine              09           software.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.51"        
 datestamp$        "18 Nov 2015"  
 timestamp$        "04:44:48"     



List of line labels

   Label                 Addr  Source PSM File

   main                  000   software.psm
   DEBOUNCING_WAIT1      003   software.psm
   DEBOUNCING_WAIT2      007   software.psm
   DEBOUNCING_WAIT3      00C   software.psm
   compare1              011   software.psm
   compare2              014   software.psm
   up_button_pressed     017   software.psm
   down_button_pressed   019   software.psm
   display_number        01B   software.psm
   display_number1       01E   software.psm
   display_number2       021   software.psm
   display_number3       024   software.psm
   display_number4       027   software.psm
   display_number5       02A   software.psm
   display_number6       02D   software.psm
   display_number7       030   software.psm
   display_number8       033   software.psm
   display_number9       036   software.psm
   display_zero          039   software.psm
   display_one           03B   software.psm
   display_two           03D   software.psm
   display_three         03F   software.psm
   display_four          041   software.psm
   display_five          043   software.psm
   display_six           045   software.psm
   display_seven         047   software.psm
   display_eight         049   software.psm
   display_nine          04B   software.psm
   reset                 04D   software.psm



Instruction usage statistics

 Instruction    Instances

 LOAD             14
 STAR              -

 AND               -
 OR                -
 XOR               -

 ADD               4
 ADDCY             -
 SUB               1
 SUBCY             -

 TEST              -
 TESTCY            -
 COMPARE          15
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT             1
 OUTPUT            2
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           -
 ENABLE            -
 RETURNI           -

 JUMP             44
 JUMP@             -
 CALL              -
 CALL@             -
 RETURN            -
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
