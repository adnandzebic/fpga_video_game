KCPSM6 Assembler log file for program 'F:\fpga_video_game\Final_Project_Lab_8\software\software.psm'.
Generated by KCPSM6 version v2.51
Ken Chapman - Xilinx Ltd - 29th May 2013

Assembly datestamp: 19 Nov 2015
Assembly timestamp: 21:51:41

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 051 hex
Nominal program memory size: 1K (1024)   address(9:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 82
Memory locations available: 4014


Assembly listing

 Addr Code                        Instruction

 000                              ;;============================================================================
 000                              ;; File: software.psm
 000                              ;; This is the PicoBlaze program for EE178 Lab #7.
 000                              ;;============================================================================
 000                              ;;============================================================================
 000                              ;; Port address declarations.
 000                              ;;============================================================================
 000                              CONSTANT switches_lo, 00         ; port for 8-bit switch input
 000                              CONSTANT switches_hi, 01         ; port for 8-bit switch input
 000                              CONSTANT leds_lo, 02             ; port for 8-bit led data out
 000                              CONSTANT leds_hi, 03             ; port for 8-bit led data out
 000                              ;;============================================================================
 000                              ;; NEW STUFF
 000                              ;;============================================================================
 000                              CONSTANT buttons, 04             ; port for 2-bit button input
 000                              CONSTANT seven_segments, 05      ; port for 8-bit seven segment data out
 000                              CONSTANT anodes, 06              ; port for 4-bit seven segment anode data out
 000                              CONSTANT my_sid_lo, 46           ; lo byte of student id (put yours here)
 000                              CONSTANT my_sid_hi, 44           ; hi byte of student id (put yours here)
 000                              ;;============================================================================
 000                              ;; ENABLE INTERRUPTS
 000                              ;;============================================================================
 000  28001                       ENABLE INTERRUPT
 001                              ;;============================================================================
 001                              ;; USEFUL CONSTANTS
 001                              ;;============================================================================
 001                              CONSTANT zero, 00                ; zero
 001                              CONSTANT one, 01                 ; one
 001                              CONSTANT two, 02                 ; two
 001                              CONSTANT three, 03               ; three
 001                              CONSTANT four, 04                ; four
 001                              CONSTANT five, 05                ; five
 001                              CONSTANT six, 06                 ; six
 001                              CONSTANT seven, 07               ; seven
 001                              CONSTANT eight, 08               ; eight
 001                              CONSTANT nine, 09                ; nine
 001                              ;;============================================================================
 001                              ;; Infinite loop.
 001                              ;;============================================================================
 001  09004                 main: INPUT s0, 04[buttons]            ; get button values
 002  2DC06                       OUTPUT sC, 06[anodes]            ;   NOTE: SC = zero (this turns on the display)
 003  2DB05                       OUTPUT sB, 05[seven_segments]    ;
 004                    compare1: 
 004  1D001                       COMPARE s0, 01[00000001'b]       ;
 005  3200A                       JUMP Z, 00A[up_button_pressed]   ;
 006  22007                       JUMP 007[compare2]               ;
 007                    compare2: 
 007  1D002                       COMPARE s0, 02[00000010'b]       ;
 008  3200C                       JUMP Z, 00C[down_button_pressed] ;
 009  22001                       JUMP 001[main]                   ;
 00A           up_button_pressed: 
 00A  11A01                       ADD sA, 01[one]                  ;
 00B  2200E                       JUMP 00E[display_number]         ;
 00C         down_button_pressed: 
 00C  19A01                       SUB sA, 01[one]                  ;
 00D  2200E                       JUMP 00E[display_number]         ;
 00E              display_number: 
 00E  1DA00                       COMPARE sA, 00[zero]             ;
 00F  3202C                       JUMP Z, 02C[display_zero]        ;
 010  22011                       JUMP 011[display_number1]        ;
 011             display_number1: 
 011  1DA01                       COMPARE sA, 01[one]              ;
 012  3202E                       JUMP Z, 02E[display_one]         ;
 013  22014                       JUMP 014[display_number2]        ;
 014             display_number2: 
 014  1DA02                       COMPARE sA, 02[two]              ;
 015  32030                       JUMP Z, 030[display_two]         ;
 016  22017                       JUMP 017[display_number3]        ;
 017             display_number3: 
 017  1DA03                       COMPARE sA, 03[three]            ;
 018  32032                       JUMP Z, 032[display_three]       ;
 019  2201A                       JUMP 01A[display_number4]        ;
 01A             display_number4: 
 01A  1DA04                       COMPARE sA, 04[four]             ;
 01B  32034                       JUMP Z, 034[display_four]        ;
 01C  2201D                       JUMP 01D[display_number5]        ;
 01D             display_number5: 
 01D  1DA05                       COMPARE sA, 05[five]             ;
 01E  32036                       JUMP Z, 036[display_five]        ;
 01F  22020                       JUMP 020[display_number6]        ;
 020             display_number6: 
 020  1DA06                       COMPARE sA, 06[six]              ;
 021  32038                       JUMP Z, 038[display_six]         ;
 022  22023                       JUMP 023[display_number7]        ;
 023             display_number7: 
 023  1DA07                       COMPARE sA, 07[seven]            ;
 024  3203A                       JUMP Z, 03A[display_seven]       ;
 025  22026                       JUMP 026[display_number8]        ;
 026             display_number8: 
 026  1DA08                       COMPARE sA, 08[eight]            ;
 027  3203C                       JUMP Z, 03C[display_eight]       ;
 028  22029                       JUMP 029[display_number9]        ;
 029             display_number9: 
 029  1DA09                       COMPARE sA, 09[nine]             ;
 02A  3203E                       JUMP Z, 03E[display_nine]        ;
 02B  22040                       JUMP 040[reset]                  ;
 02C                display_zero: 
 02C  01B03                       LOAD sB, 03[00000011'b]          ;
 02D  22043                       JUMP 043[WAIT1]                  ;
 02E                 display_one: 
 02E  01B9F                       LOAD sB, 9F[10011111'b]          ;
 02F  22043                       JUMP 043[WAIT1]                  ;
 030                 display_two: 
 030  01B25                       LOAD sB, 25[00100101'b]          ;
 031  22043                       JUMP 043[WAIT1]                  ;
 032               display_three: 
 032  01B0D                       LOAD sB, 0D[00001101'b]          ;
 033  22043                       JUMP 043[WAIT1]                  ;
 034                display_four: 
 034  01B99                       LOAD sB, 99[10011001'b]          ;
 035  22043                       JUMP 043[WAIT1]                  ;
 036                display_five: 
 036  01B49                       LOAD sB, 49[01001001'b]          ;
 037  22043                       JUMP 043[WAIT1]                  ;
 038                 display_six: 
 038  01B41                       LOAD sB, 41[01000001'b]          ;
 039  22043                       JUMP 043[WAIT1]                  ;
 03A               display_seven: 
 03A  01B1F                       LOAD sB, 1F[00011111'b]          ;
 03B  22043                       JUMP 043[WAIT1]                  ;
 03C               display_eight: 
 03C  01B01                       LOAD sB, 01[00000001'b]          ;
 03D  22043                       JUMP 043[WAIT1]                  ;
 03E                display_nine: 
 03E  01B09                       LOAD sB, 09[00001001'b]          ;
 03F  22043                       JUMP 043[WAIT1]                  ;
 040                       reset: 
 040  01B03                       LOAD sB, 03[00000011'b]          ; ZERO
 041  01A00                       LOAD sA, 00[zero]                ;
 042  22001                       JUMP 001[main]                   ;
 043                       WAIT1: 
 043  11501                       ADD s5, 01[one]                  ;
 044  1D5FF                       COMPARE s5, FF[11111111'b]       ;
 045  32047                       JUMP Z, 047[WAIT2]               ;
 046  22043                       JUMP 043[WAIT1]                  ;
 047                       WAIT2: 
 047  01500                       LOAD s5, 00[00000000'b]          ;
 048  11601                       ADD s6, 01[one]                  ;
 049  1D6FF                       COMPARE s6, FF[11111111'b]       ;
 04A  3204C                       JUMP Z, 04C[WAIT3]               ;
 04B  22043                       JUMP 043[WAIT1]                  ;
 04C                       WAIT3: 
 04C  01600                       LOAD s6, 00[00000000'b]          ;
 04D  11701                       ADD s7, 01[one]                  ;
 04E  1D703                       COMPARE s7, 03[00000011'b]       ;
 04F  32004                       JUMP Z, 004[compare1]            ;
 050  22047                       JUMP 047[WAIT2]                  ;
 051  22001                       JUMP 001[main]                   ;
 052                              ;;============================================================================
 052                              ;;
 052                              ;;============================================================================
 052                              ; Currently, this program acts as a "virtual wire" by reading
 052                              ; the switch values and copying them to the leds.  You should
 052                              ; prove to yourself that this works.
 052                              ; Then, you need to modify this program.  If the 16-bit switch
 052                              ; value in {s1,s0} equals {my_sid_hi,my_sid_lo} then display it
 052                              ; on the leds.  Otherwise, count the number of "1's" in {s1,s0}
 052                              ; and display the result on the leds.



List of PSM files that have been assembled

F:\fpga_video_game\Final_Project_Lab_8\software\software.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   21'd         
 timestamp_minutes 51'd         
 timestamp_seconds 41'd         
 datestamp_year    15'd         
 datestamp_month   11'd         
 datestamp_day     19'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 switches_lo       00           software.psm
 switches_hi       01           software.psm
 leds_lo           02           software.psm
 leds_hi           03           software.psm
 buttons           04           software.psm
 seven_segments    05           software.psm
 anodes            06           software.psm
 my_sid_lo         46           software.psm
 my_sid_hi         44           software.psm
 zero              00           software.psm
 one               01           software.psm
 two               02           software.psm
 three             03           software.psm
 four              04           software.psm
 five              05           software.psm
 six               06           software.psm
 seven             07           software.psm
 eight             08           software.psm
 nine              09           software.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.51"        
 datestamp$        "19 Nov 2015"  
 timestamp$        "21:51:41"     



List of line labels

   Label                 Addr  Source PSM File

   main                  001   software.psm
   compare1              004   software.psm
   compare2              007   software.psm
   up_button_pressed     00A   software.psm
   down_button_pressed   00C   software.psm
   display_number        00E   software.psm
   display_number1       011   software.psm
   display_number2       014   software.psm
   display_number3       017   software.psm
   display_number4       01A   software.psm
   display_number5       01D   software.psm
   display_number6       020   software.psm
   display_number7       023   software.psm
   display_number8       026   software.psm
   display_number9       029   software.psm
   display_zero          02C   software.psm
   display_one           02E   software.psm
   display_two           030   software.psm
   display_three         032   software.psm
   display_four          034   software.psm
   display_five          036   software.psm
   display_six           038   software.psm
   display_seven         03A   software.psm
   display_eight         03C   software.psm
   display_nine          03E   software.psm
   reset                 040   software.psm
   WAIT1                 043   software.psm
   WAIT2                 047   software.psm
   WAIT3                 04C   software.psm



Instruction usage statistics

 Instruction    Instances

 LOAD             14
 STAR              -

 AND               -
 OR                -
 XOR               -

 ADD               4
 ADDCY             -
 SUB               1
 SUBCY             -

 TEST              -
 TESTCY            -
 COMPARE          15
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT             1
 OUTPUT            2
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           -
 ENABLE            1
 RETURNI           -

 JUMP             44
 JUMP@             -
 CALL              -
 CALL@             -
 RETURN            -
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
