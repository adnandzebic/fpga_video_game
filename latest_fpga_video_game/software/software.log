Open Picoblaze Assembler log for program "software.psm"
Generated by opbasm v 1.2
  Assembled on 2015-12-02T17:51:23
  Picoblaze-6 mode

  Last occupied address: 7FF hex
  Nominal program memory size: 2K (2048)  address(10:0)
  Actual memory size: 4096
  Occupied memory locations: 1374
  Memory locations available: 2722
  Scratchpad size: 256


Assembly listing
----------------
000                             ;;============================================================================
000                             ;; File: software.psm
000                             ;; This is the PicoBlaze program for EE178 Lab #8.
000                             ;;============================================================================

000                             ;;============================================================================
000                             ;; Port address declarations.
000                             ;;============================================================================

000                             CONSTANT stax, 00              ; port for 8-bit start-x
000                             CONSTANT stay, 01              ; port for 8-bit start-y
000                             CONSTANT endx, 02              ; port for 8-bit end-x
000                             CONSTANT endy, 03              ; port for 8-bit end-y
000                             CONSTANT busy, 04              ; port for 8-bit busy
000                             CONSTANT beam, 05              ; port for 8-bit beam
000                             CONSTANT mode, 06              ; port for 8-bit mode
000                             CONSTANT prng, 07              ; port for 8-bit prng
000                             CONSTANT leds_lo, 08           ; port for 8-bit led data out
000                             CONSTANT leds_hi, 09           ; port for 8-bit led data out
000                             CONSTANT qssd_lo, 0a           ; port for 8-bit qssd data out
000                             CONSTANT qssd_hi, 0b           ; port for 8-bit qssd data out
000                             CONSTANT qssd_dp, 0c           ; port for 8-bit qssd data out
000                             CONSTANT switches_lo, 0d       ; port for 8-bit switch input
000                             CONSTANT switches_hi, 0e       ; port for 8-bit switch input
000                             CONSTANT buttons, 0f           ; port for 8-bit button input
000                             CONSTANT red, 10               ; port for 8-bit red value
000                             CONSTANT green, 11             ; port for 8-bit green value
000                             CONSTANT blue, 11              ; port for 8-bit green value

000                             CONSTANT zero, 00              ; zero
000                             CONSTANT one, 01               ; one

000                             CONSTANT busy_go, 01           ; go command and busy status

000                             CONSTANT beam_hi, 0f           ; beam high intensity
000                             CONSTANT beam_md, 07           ; beam med intensity
000                             CONSTANT beam_lo, 03           ; beam low intensity

000                             CONSTANT mode_hld, 00          ; mode hold framebuffer
000                             CONSTANT mode_clr, 01          ; mode clear framebuffer
000                             CONSTANT mode_lin, 02          ; mode linear decay
000                             CONSTANT mode_exp, 03          ; mode exponential decay

000                             CONSTANT buttons_ct, 10        ; center
000                             CONSTANT buttons_up, 08        ; up
000                             CONSTANT buttons_dn, 04        ; down
000                             CONSTANT buttons_lf, 02        ; left
000                             CONSTANT buttons_rt, 01        ; right

000                             CONSTANT start_menu_1, 00      ;
000                             CONSTANT start_menu_2, 3C      ;
000                             CONSTANT start_menu_3, 78      ;

000                             ;;============================================================================
000                             ;; Macro State declarations
000                             ;;============================================================================

000                             CONSTANT START_STATE, 00       ; start screen state
000                             CONSTANT PLAY_STATE, 01        ; play state
000                             CONSTANT GAMEOVER_STATE, 02    ; game over screen state
000                             CONSTANT CREDITS_STATE, 03     ; credits screen state (not used for now)

000                             ;;============================================================================
000                             ;; Boot.
000                             ;;============================================================================

000  01000                boot: LOAD s0, zero                  ; initialize
001  01100                      LOAD s1, zero                  ; initialize
002  01200                      LOAD s2, zero                  ; initialize
003  01300                      LOAD s3, zero                  ; initialize
004  01400                      LOAD s4, zero                  ; initialize
005  01900                      LOAD s9, START_STATE           ; initial state is to enter start screen
006  01A00                      LOAD sa, 00                    ; initial distance (score)
007  01B00                      LOAD sb, 00                    ; initial distance (score)
008  01C80                      LOAD sc, 80                    ; starting helicopter position
009  01D05                      LOAD sd, 05                    ; initialize (needed later)
00A  01EFF                      LOAD se, FF                    ; load 255 into sE (horizontal coordinate of block)
00B  01F62                      LOAD sf, 62                    ; load 108 into sF (vertical coordinate of block)
00C  01503                      LOAD s5, mode_exp              ; load desired mode
00D  2D506                      OUTPUT s5, mode                ; set desired mode
00E  0150F                      LOAD s5, beam_hi               ; load desired beam
00F  2D505                      OUTPUT s5, beam                ; set desired beam
010  015FF                      LOAD s5, FF                    ; load FF into s5 (red value)
011  2D510                      OUTPUT s5, red                 ; set desired red
012  28001                      ENABLE INTERRUPT               ; enable interrupts

013                             ;;============================================================================
013                             ;; Main.
013                             ;;============================================================================

013                       main:
013  22013                      JUMP main                      ; go back and repeat

014                             ;;============================================================================
014                             ;; Interrupt - Service Routine.
014                             ;;============================================================================

014                        isr:

014  1D900                      COMPARE s9, START_STATE        ; check if in the start state
015  3001D                      CALL Z, start                  ; call the start screen state
016  1D901                      COMPARE s9, PLAY_STATE         ; check if in the play state
017  30059                      CALL Z, play                   ; call play subroutine
018  1D902                      COMPARE s9, GAMEOVER_STATE     ; check if in the gameover state
019  3003E                      CALL Z, gameover               ; call the gameover subroutine
01A  1D903                      COMPARE s9, CREDITS_STATE      ; check if in the credits state
01B  3002F                      CALL Z, credits                ; call credits subroutine

01C  29001                      RETURNI ENABLE                 ; done with isr

01D                             ;;============================================================================
01D                             ;; Start - Start Subroutine
01D                             ;;============================================================================

01D  37000               start: REGBANK A
01E  0950F                      INPUT s5, buttons              ; get center button values
01F  2006E                      CALL start_screen              ; draw the map using map subroutine

020  0950F                      INPUT s5, buttons              ; get button values
021  1D510                      COMPARE s5, buttons_ct         ; check if center button is pressed
022  32029                      JUMP Z, enter_play_state       ; jump to enter_play_state
023  3602E                      JUMP NZ, stay_in_start_state   ; remain in current state with a jump to stay_in_start_state

024  37001                      REGBANK B
025  11001                      ADD s0, one                    ; counter for determining jump between credit/start
026  1D078                      COMPARE s0, 78                 ; check if 120 seconds
027  32039                      JUMP Z, enter_credit_state     ; if 2 seconds or 120 frames, jump to credit
028  3602E                      JUMP NZ, stay_in_start_state   ; if not 2 seconds or 120 frames, stay in start
029           enter_play_state:
029  37001                      REGBANK B                      ;
02A  01000                      LOAD s0, zero                  ;
02B  37000                      REGBANK A                      ;
02C  01901                      LOAD s9, PLAY_STATE            ; load play_state and enter play mode
02D  25000                      RETURN                         ; return from start subroutine

02E        stay_in_start_state:
02E  25000                      RETURN                         ; return from start subroutine


02F                             ;;============================================================================
02F                             ;; Credits - Credit Subroutine
02F                             ;;============================================================================
02F                    credits:
02F  37000                      REGBANK A                      ;
030  2034F                      CALL draw_credits              ; draw the credits screen

031  0950F                      INPUT s5, buttons              ; get button values
032  1D510                      COMPARE s5, buttons_ct         ; check if center button is pressed
033  32029                      JUMP Z, enter_play_state       ; jump to enter_play_state
034                             ;JUMP NZ, stay_in_credit_state        ; remain in current state with a jump to stay_in_start_state

034  37001                      REGBANK B                      ; Utilize REGBANK B for counter
035  11001                      ADD s0, one                    ; counter for determining when to jump between credit/start
036  1D078                      COMPARE s0, 78                 ; 2 seconds / 120 frames -> jump back to start
037  32029                      JUMP Z, enter_play_state       ; if 120 frames, jump back to start
038  3603D                      JUMP NZ, stay_in_credit_state  ;

039         enter_credit_state:
039  01000                      LOAD s0, zero                  ; if entering credit state, clear REGBANK B s0
03A  37000                      REGBANK A                      ;
03B  01903                      LOAD s9, CREDITS_STATE         ; set to credits state
03C  2202F                      JUMP credits                   ;

03D        stay_in_credit_state:
03D  2202F                      JUMP credits                   ;

03E                             ;;============================================================================
03E                             ;; Game Over - Game Over Subroutine
03E                             ;;============================================================================

03E                   gameover:
03E  20063                      CALL map                       ; draw the map using map subroutine
03F  203E5                      CALL draw_helicopter           ; draw the helicopter
040  203E9                      CALL draw_block                ; draw the obstacle (block)
041  202A9                      CALL draw_gameover             ; draw gameover message


042  01564                      LOAD s5, 64                    ; collision point (horizontal)
043  2D500                      OUTPUT s5, stax                ; set desired stax
044  2DC01                      OUTPUT sc, stay                ; set desired stay
045  09807                      INPUT s8, prng                 ; load random endx
046  2D802                      OUTPUT s8, endx                ; set random endx
047  09807                      INPUT s8, prng                 ; load random endy
048  2D803                      OUTPUT s8, endy                ; set random endy
049  204DA                      CALL old_draw_line             ; draw random line

04A  0950F                      INPUT s5, buttons              ; get button values
04B  1D508                      COMPARE s5, buttons_up         ; check if up button is pressed
04C  3204E                      JUMP Z, enter_play_state2      ; jump to enter_play_state2
04D  36058                      JUMP NZ, stay_in_gameover_state ; remain in current state with a jump to stay_in_gameover_state

04E          enter_play_state2:
04E  01901                      LOAD s9, PLAY_STATE            ; load play_state and enter play mode

04F                             ;; RESET EVERYTHING BEFORE RETURNING
04F  01A00                      LOAD sa, 00                    ; initial distance (score)
050  01B00                      LOAD sb, 00                    ; initial distance (score)
051  2DB0A                      OUTPUT sb, qssd_lo             ; reset qssd_lo
052  2DA0B                      OUTPUT sa, qssd_hi             ; reset qssd_hi
053  01C80                      LOAD sc, 80                    ; starting helicopter position
054  01D05                      LOAD sd, 05                    ; initialize (needed later)
055  01EFF                      LOAD se, FF                    ; load 255 into sE (horizontal coordinate of block)
056  01F62                      LOAD sf, 62                    ; load 108 into sF (vertical coordinate of block)
057  25000                      RETURN                         ; return from start subroutine

058        stay_in_gameover_state:
058  25000                      RETURN                         ; return from start subroutine

059                             ;;============================================================================
059                             ;; Play - Play Subroutine
059                             ;;============================================================================

059  0950F                play: INPUT s5, buttons              ; get center button values
05A  20063                      CALL map                       ; draw the map using map subroutine

05B  0950F                      INPUT s5, buttons              ; get button values
05C  1D510                      COMPARE s5, buttons_ct         ; check if center button is pressed
05D  30424                      CALL Z, move_heli_up           ; call subroutine that moves the helicopter up

05E  203E5                      CALL draw_helicopter           ; draw the helicopter
05F  20416                      CALL random_block_location     ; determines a random place for the block (y direction only)
060  203E9                      CALL draw_block                ; draw the block using draw_block subroutine
061  204E0                      CALL check_collision           ; check if any collisions happen

062  25000                      RETURN                         ; finished with play subroutine

063                             ;;============================================================================
063                             ;; Map - Draw Map Subroutine
063                             ;;============================================================================

063                        map:

063                             ;;============================================================================
063                             ;; Draws Top Line of Map (Line 1)
063                             ;;============================================================================

063  01000                      LOAD s0, 00                    ; load 00 into s0
064  0110F                      LOAD s1, 0F                    ; load 0F into s1
065  012FF                      LOAD s2, FF                    ; load FF into s2
066  0130F                      LOAD s3, 0F                    ; load 0F into s3
067  204D0                      CALL draw_line                 ; draws the line

068                             ;;============================================================================
068                             ;; Draws Bottom Line of Map (Line 2)
068                             ;;============================================================================

068  01000                      LOAD s0, 00                    ; load 00 into s0
069  011F0                      LOAD s1, F0                    ; load 0F into s1
06A  012FF                      LOAD s2, FF                    ; load FF into s2
06B  013F0                      LOAD s3, F0                    ; load F0 into s3
06C  204D0                      CALL draw_line                 ; draws the line

06D  25000                      RETURN                         ; go back from drawing map

06E                             ;;============================================================================
06E                             ;; Start Screen - Draw Start Screen Subroutine
06E                             ;;============================================================================

06E               start_screen:
06E                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
06E                             ;; Code for PRESS START [START MENU] ;;
06E                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

06E                             ;;;;;;;;;;;;;;;
06E                             ;;BEGIN PRESS;;
06E                             ;;;;;;;;;;;;;;;

06E                             ;; LINE 1 (LEFT) FOR P
06E  01041                      LOAD s0, 41                    ; stax 65
06F  011C8                      LOAD s1, C8                    ; stay 200
070  01241                      LOAD s2, 41                    ; endx 65
071  013D2                      LOAD s3, D2                    ; endy 210
072  204D0                      CALL draw_line                 ;

073                             ;; LINE 2 (TOP) FOR P
073  01041                      LOAD s0, 41                    ; stax 65
074  011C8                      LOAD s1, C8                    ; stay 200
075  01246                      LOAD s2, 46                    ; endx 70
076  013C8                      LOAD s3, C8                    ; endy 200
077  204D0                      CALL draw_line                 ;

078                             ;; LINE 3 (RIGHT) FOR P
078  01046                      LOAD s0, 46                    ; stax 70
079  011C8                      LOAD s1, C8                    ; stay 200
07A  01246                      LOAD s2, 46                    ; endx 70
07B  013CD                      LOAD s3, CD                    ; endy 205
07C  204D0                      CALL draw_line                 ;

07D                             ;; LINE 4 (MIDDLE) FOR P
07D  01041                      LOAD s0, 41                    ; stax 65
07E  011CD                      LOAD s1, CD                    ; stay 205
07F  01246                      LOAD s2, 46                    ; endx 70
080  013CD                      LOAD s3, CD                    ; endy 205
081  204D0                      CALL draw_line                 ;

082                             ;; LINE 1 (LEFT) FOR R
082  0104B                      LOAD s0, 4B                    ; stax 75
083  011C8                      LOAD s1, C8                    ; stay 200
084  0124B                      LOAD s2, 4B                    ; endx 75
085  013D2                      LOAD s3, D2                    ; endy 210
086  204D0                      CALL draw_line                 ;

087                             ;; LINE 2 (TOP) FOR R
087  0104B                      LOAD s0, 4B                    ; stax 75
088  011C8                      LOAD s1, C8                    ; stay 200
089  01250                      LOAD s2, 50                    ; endx 80
08A  013C8                      LOAD s3, C8                    ; endy 200
08B  204D0                      CALL draw_line                 ;

08C                             ;; LINE 3 (RIGHT) FOR R
08C  01050                      LOAD s0, 50                    ; stax 80
08D  011C8                      LOAD s1, C8                    ; stay 200
08E  01250                      LOAD s2, 50                    ; endx 80
08F  013CD                      LOAD s3, CD                    ; endy 205
090  204D0                      CALL draw_line                 ;

091                             ;; LINE 4 (MIDDLE) FOR R
091  0104B                      LOAD s0, 4B                    ; stax 75
092  011CD                      LOAD s1, CD                    ; stay 205
093  01250                      LOAD s2, 50                    ; endx 80
094  013CD                      LOAD s3, CD                    ; endy 205
095  204D0                      CALL draw_line                 ;

096                             ;; LINE 5 (ANGLED) FOR R
096  0104B                      LOAD s0, 4B                    ; stax 75
097  011CD                      LOAD s1, CD                    ; stay 205
098  01250                      LOAD s2, 50                    ; endx 80
099  013D2                      LOAD s3, D2                    ; endy 210
09A  204D0                      CALL draw_line                 ;


09B                             ;; LINE 6 (ANGLED2) FOR R
09B  0104B                      LOAD s0, 4B                    ; stax 75
09C  011CE                      LOAD s1, CE                    ; stay 204
09D  0124F                      LOAD s2, 4F                    ; endx 79
09E  013D2                      LOAD s3, D2                    ; endy 210
09F  204D0                      CALL draw_line                 ;

0A0                             ;; LINE 1 (LEFT) FOR E
0A0  01055                      LOAD s0, 55                    ; stax 85
0A1  011C8                      LOAD s1, C8                    ; stay 200
0A2  01255                      LOAD s2, 55                    ; endx 85
0A3  013D2                      LOAD s3, D2                    ; endy 210
0A4  204D0                      CALL draw_line                 ;

0A5                             ;; LINE 2 (TOP) FOR E
0A5  01055                      LOAD s0, 55                    ; stax 85
0A6  011C8                      LOAD s1, C8                    ; stay 200
0A7  0125A                      LOAD s2, 5A                    ; endx 90
0A8  013C8                      LOAD s3, C8                    ; endy 200
0A9  204D0                      CALL draw_line                 ;

0AA                             ;; LINE 3 (MIDDLE) FOR E
0AA  01055                      LOAD s0, 55                    ; stax 85
0AB  011CD                      LOAD s1, CD                    ; stay 205
0AC  0125A                      LOAD s2, 5A                    ; endx 90
0AD  013CD                      LOAD s3, CD                    ; endy 205
0AE  204D0                      CALL draw_line                 ;

0AF                             ;; LINE 4 (BOTTOM) FOR E
0AF  01055                      LOAD s0, 55                    ; stax 85
0B0  011D2                      LOAD s1, D2                    ; stay 210
0B1  0125A                      LOAD s2, 5A                    ; endx 90
0B2  013D2                      LOAD s3, D2                    ; endy 210
0B3  204D0                      CALL draw_line                 ;

0B4                             ;; LINE 1 (TOP) FOR S1
0B4  0105F                      LOAD s0, 5F                    ; stax 95
0B5  011C8                      LOAD s1, C8                    ; stay 200
0B6  01264                      LOAD s2, 64                    ; endx 100
0B7  013C8                      LOAD s3, C8                    ; endy 200
0B8  204D0                      CALL draw_line                 ;

0B9                             ;; LINE 2 (TOPLEFT) FOR S1
0B9  0105F                      LOAD s0, 5F                    ; stax 95
0BA  011C8                      LOAD s1, C8                    ; stay 200
0BB  0125F                      LOAD s2, 5F                    ; endx 95
0BC  013CD                      LOAD s3, CD                    ; endy 205
0BD  204D0                      CALL draw_line                 ;

0BE                             ;; LINE 3 (MIDDLE) FOR S1
0BE  0105F                      LOAD s0, 5F                    ; stax 95
0BF  011CD                      LOAD s1, CD                    ; stay 205
0C0  01264                      LOAD s2, 64                    ; endx 100
0C1  013CD                      LOAD s3, CD                    ; endy 205
0C2  204D0                      CALL draw_line                 ;

0C3                             ;; LINE 4 (BOTTOMRIGHT) FOR S1
0C3  01064                      LOAD s0, 64                    ; stax 100
0C4  011CD                      LOAD s1, CD                    ; stay 205
0C5  01264                      LOAD s2, 64                    ; endx 100
0C6  013D2                      LOAD s3, D2                    ; endy 210
0C7  204D0                      CALL draw_line                 ;

0C8                             ;; LINE 5 (BOTTOM) FOR S1
0C8  0105F                      LOAD s0, 5F                    ; stax 95
0C9  011D2                      LOAD s1, D2                    ; stay 210
0CA  01264                      LOAD s2, 64                    ; endx 100
0CB  013D2                      LOAD s3, D2                    ; endy 210
0CC  204D0                      CALL draw_line                 ;

0CD                             ;; LINE 1 (TOP) FOR S2
0CD  01069                      LOAD s0, 69                    ; stax 105
0CE  011C8                      LOAD s1, C8                    ; stay 200
0CF  0126E                      LOAD s2, 6E                    ; endx 110
0D0  013C8                      LOAD s3, C8                    ; endy 200
0D1  204D0                      CALL draw_line                 ;

0D2                             ;; LINE 2 (TOPLEFT) FOR S2
0D2  01069                      LOAD s0, 69                    ; stax 105
0D3  011C8                      LOAD s1, C8                    ; stay 200
0D4  01269                      LOAD s2, 69                    ; endx 105
0D5  013CD                      LOAD s3, CD                    ; endy 205
0D6  204D0                      CALL draw_line                 ;

0D7                             ;; LINE 3 (MIDDLE) FOR S2
0D7  01069                      LOAD s0, 69                    ; stax 105
0D8  011CD                      LOAD s1, CD                    ; stay 205
0D9  0126E                      LOAD s2, 6E                    ; endx 110
0DA  013CD                      LOAD s3, CD                    ; endy 205
0DB  204D0                      CALL draw_line                 ;

0DC                             ;; LINE 4 (BOTTOMRIGHT) FOR S2
0DC  0106E                      LOAD s0, 6E                    ; stax 110
0DD  011CD                      LOAD s1, CD                    ; stay 205
0DE  0126E                      LOAD s2, 6E                    ; endx 110
0DF  013D2                      LOAD s3, D2                    ; endy 210
0E0  204D0                      CALL draw_line                 ;

0E1                             ;; LINE 5 (BOTTOM) FOR S2
0E1  01069                      LOAD s0, 69                    ; stax 105
0E2  011D2                      LOAD s1, D2                    ; stay 210
0E3  0126E                      LOAD s2, 6E                    ; endx 110
0E4  013D2                      LOAD s3, D2                    ; endy 210
0E5  204D0                      CALL draw_line                 ;

0E6                             ;;;;;;;;;;;;;;;
0E6                             ;;BEGIN START;;
0E6                             ;;;;;;;;;;;;;;;

0E6                             ;; LINE 1 (TOP) FOR S
0E6  01082                      LOAD s0, 82                    ; stax 130
0E7  011C8                      LOAD s1, C8                    ; stay 200
0E8  01288                      LOAD s2, 88                    ; endx 135
0E9  013C8                      LOAD s3, C8                    ; endy 200
0EA  204D0                      CALL draw_line                 ;

0EB                             ;; LINE 2 (TOPLEFT) FOR S
0EB  01082                      LOAD s0, 82                    ; stax 130
0EC  011C8                      LOAD s1, C8                    ; stay 200
0ED  01282                      LOAD s2, 82                    ; endx 130
0EE  013CD                      LOAD s3, CD                    ; endy 205
0EF  204D0                      CALL draw_line                 ;

0F0                             ;; LINE 3 (MIDDLE) FOR S
0F0  01082                      LOAD s0, 82                    ; stax 130
0F1  011CD                      LOAD s1, CD                    ; stay 205
0F2  01287                      LOAD s2, 87                    ; endx 135
0F3  013CD                      LOAD s3, CD                    ; endy 205
0F4  204D0                      CALL draw_line                 ;

0F5                             ;; LINE 4 (BOTTOMRIGHT) FOR S
0F5  01087                      LOAD s0, 87                    ; stax 135
0F6  011CD                      LOAD s1, CD                    ; stay 205
0F7  01287                      LOAD s2, 87                    ; endx 135
0F8  013D2                      LOAD s3, D2                    ; endy 210
0F9  204D0                      CALL draw_line                 ;

0FA                             ;; LINE 5 (BOTTOM) FOR S
0FA  01082                      LOAD s0, 82                    ; stax 130
0FB  011D2                      LOAD s1, D2                    ; stay 210
0FC  01287                      LOAD s2, 87                    ; endx 135
0FD  013D2                      LOAD s3, D2                    ; endy 210
0FE  204D0                      CALL draw_line                 ;

0FF                             ;; LINE 1 (TOP) FOR T1
0FF  0108C                      LOAD s0, 8C                    ; stax 140
100  011C8                      LOAD s1, C8                    ; stay 200
101  01293                      LOAD s2, 93                    ; endx 147
102  013C8                      LOAD s3, C8                    ; endy 200
103  204D0                      CALL draw_line                 ;

104                             ;; LINE 2 (MIDDLE) FOR T1
104  0108F                      LOAD s0, 8F                    ; stax 143
105  011C8                      LOAD s1, C8                    ; stay 200
106  0128F                      LOAD s2, 8F                    ; endx 143
107  013D2                      LOAD s3, D2                    ; endy 210
108  204D0                      CALL draw_line                 ;

109                             ;; LINE 1 (LEFT) FOR A
109  01096                      LOAD s0, 96                    ; stax 150
10A  011C8                      LOAD s1, C8                    ; stay 200
10B  01296                      LOAD s2, 96                    ; endx 150
10C  013D2                      LOAD s3, D2                    ; endy 210
10D  204D0                      CALL draw_line                 ;

10E                             ;; LINE 2 (TOP) FOR A
10E  01096                      LOAD s0, 96                    ; stax 150
10F  011C8                      LOAD s1, C8                    ; stay 200
110  0129B                      LOAD s2, 9B                    ; endx 155
111  013C8                      LOAD s3, C8                    ; endy 200
112  204D0                      CALL draw_line                 ;

113                             ;; LINE 3 (MIDDLE) FOR A
113  01096                      LOAD s0, 96                    ; stax 150
114  011CD                      LOAD s1, CD                    ; stay 205
115  0129B                      LOAD s2, 9B                    ; endx 155
116  013CD                      LOAD s3, CD                    ; endy 205
117  204D0                      CALL draw_line                 ;

118                             ;; LINE 4 (RIGHT) FOR A
118  0109B                      LOAD s0, 9B                    ; stax 155
119  011C8                      LOAD s1, C8                    ; stay 200
11A  0129B                      LOAD s2, 9B                    ; endx 155
11B  013D2                      LOAD s3, D2                    ; endy 210
11C  204D0                      CALL draw_line                 ;

11D                             ;; LINE 1 (LEFT) FOR R
11D  010A0                      LOAD s0, A0                    ; stax 160
11E  011C8                      LOAD s1, C8                    ; stay 200
11F  012A0                      LOAD s2, A0                    ; endx 160
120  013D2                      LOAD s3, D2                    ; endy 210
121  204D0                      CALL draw_line                 ;

122                             ;; LINE 2 (TOP) FOR R
122  010A0                      LOAD s0, A0                    ; stax 160
123  011C8                      LOAD s1, C8                    ; stay 200
124  012A5                      LOAD s2, A5                    ; endx 165
125  013C8                      LOAD s3, C8                    ; endy 200
126  204D0                      CALL draw_line                 ;

127                             ;; LINE 3 (RIGHT) FOR R
127  010A5                      LOAD s0, A5                    ; stax 165
128  011C8                      LOAD s1, C8                    ; stay 200
129  012A5                      LOAD s2, A5                    ; endx 165
12A  013CD                      LOAD s3, CD                    ; endy 205
12B  204D0                      CALL draw_line                 ;

12C                             ;; LINE 4 (MIDDLE) FOR R
12C  010A0                      LOAD s0, A0                    ; stax 160
12D  011CD                      LOAD s1, CD                    ; stay 205
12E  012A5                      LOAD s2, A5                    ; endx 165
12F  013CD                      LOAD s3, CD                    ; endy 205
130  204D0                      CALL draw_line                 ;

131                             ;; LINE 5 (ANGLED) FOR R
131  010A0                      LOAD s0, A0                    ; stax 160
132  011CD                      LOAD s1, CD                    ; stay 205
133  012A5                      LOAD s2, A5                    ; endx 165
134  013D2                      LOAD s3, D2                    ; endy 210
135  204D0                      CALL draw_line                 ;

136                             ;; LINE 6 (ANGLED2) FOR R
136  010A0                      LOAD s0, A0                    ; stax 160
137  011CE                      LOAD s1, CE                    ; stay 206
138  012A4                      LOAD s2, A4                    ; endx 164
139  013D2                      LOAD s3, D2                    ; endy 210
13A  204D0                      CALL draw_line                 ;

13B                             ;; LINE 1 (TOP) FOR T2
13B  010AA                      LOAD s0, AA                    ; stax 170
13C  011C8                      LOAD s1, C8                    ; stay 200
13D  012B1                      LOAD s2, B1                    ; endx 177
13E  013C8                      LOAD s3, C8                    ; endy 200
13F  204D0                      CALL draw_line                 ;

140                             ;; LINE 2 (MIDDLE) FOR T2
140  010AD                      LOAD s0, AD                    ; stax 173
141  011C8                      LOAD s1, C8                    ; stay 200
142  012AD                      LOAD s2, AD                    ; endx 173
143  013D2                      LOAD s3, D2                    ; endy 210
144  204D0                      CALL draw_line                 ;



145                             ;;============================================================================
145                             ;; Draws Decoration (Line 1a)
145                             ;;============================================================================

145  01000                      LOAD s0, 00                    ; load 00 into s0
146  0110A                      LOAD s1, 0A                    ; load 0A into s1
147  012FF                      LOAD s2, FF                    ; load FF into s2
148  0130A                      LOAD s3, 0A                    ; load 0A into s3
149  204D0                      CALL draw_line                 ; draws the line

14A                             ;;===========================================================================
14A                             ;; Draws Decoration (Line 2a)
14A                             ;;============================================================================

14A  01000                      LOAD s0, 00                    ; load 00 into s0
14B  0110C                      LOAD s1, 0C                    ; load 0C into s1
14C  012FF                      LOAD s2, FF                    ; load FF into s2
14D  0130C                      LOAD s3, 0C                    ; load 0C into s3
14E  204D0                      CALL draw_line                 ; draws the line

14F                             ;;===========================================================================
14F                             ;; Draws Decoration (Line 3a)
14F                             ;;============================================================================

14F  01000                      LOAD s0, 00                    ; load 00 into s0
150  0110E                      LOAD s1, 0E                    ; load 0E into s1
151  012FF                      LOAD s2, FF                    ; load FF into s2
152  0130E                      LOAD s3, 0E                    ; load 0E into s3
153  204D0                      CALL draw_line                 ; draws the line

154                             ;;============================================================================
154                             ;; Draws Decoration (Line 1b)
154                             ;;============================================================================

154  01000                      LOAD s0, 00                    ; load 00 into s0
155  01188                      LOAD s1, 88                    ; load 88 into s1
156  012FF                      LOAD s2, FF                    ; load FF into s2
157  01388                      LOAD s3, 88                    ; load 88 into s3
158  204D0                      CALL draw_line                 ; draws the line

159                             ;;===========================================================================
159                             ;; Draws Decoration (Line 2b)
159                             ;;============================================================================

159  01000                      LOAD s0, 00                    ; load 00 into s0
15A  0118A                      LOAD s1, 8A                    ; load 8A into s1
15B  012FF                      LOAD s2, FF                    ; load FF into s2
15C  0138A                      LOAD s3, 8A                    ; load 8A into s3
15D  204D0                      CALL draw_line                 ; draws the line

15E                             ;;===========================================================================
15E                             ;; Draws Decoration (Line 3b)
15E                             ;;============================================================================

15E  01000                      LOAD s0, 00                    ; load 00 into s0
15F  0118C                      LOAD s1, 8C                    ; load 8A into s1
160  012FF                      LOAD s2, FF                    ; load FF into s2
161  0138C                      LOAD s3, 8C                    ; load 8C into s3
162  204D0                      CALL draw_line                 ; draws the line

163                             ;;============================================================================
163                             ;; Draws the letter H (Line 1)
163                             ;;============================================================================

163                             ;; STARTING POINT
163  0150A                      LOAD s5, 0A                    ; load 10 into s5
164  2D500                      OUTPUT s5, stax                ; set desired stax
165  0161E                      LOAD s6, 1E                    ; load 30 into s6
166  2D601                      OUTPUT s6, stay                ; set desired stay

167                             ;; ENDING POINT
167  2D502                      OUTPUT s5, endx                ; set desired endx
168  0163C                      LOAD s6, 3C                    ; load 60 into s6
169  2D603                      OUTPUT s6, endy                ; set desired endy
16A  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

16B                             ;;============================================================================
16B                             ;; Draws the letter H (Line 2)
16B                             ;;============================================================================

16B                             ;; STARTING POINT
16B  0150A                      LOAD s5, 0A                    ; load 10 into s5
16C  2D500                      OUTPUT s5, stax                ; set desired stax
16D  0162D                      LOAD s6, 2D                    ; load 45 into s6
16E  2D601                      OUTPUT s6, stay                ; set desired stay

16F                             ;; ENDING POINT
16F  0151E                      LOAD s5, 1E                    ; load 30 into s5
170  2D502                      OUTPUT s5, endx                ; set desired endx
171  2D603                      OUTPUT s6, endy                ; set desired endy
172  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

173                             ;;============================================================================
173                             ;; Draws the letter H (Line 3)
173                             ;;============================================================================

173                             ;; STARTING POINT
173  0151E                      LOAD s5, 1E                    ; load 30 into s5
174  2D500                      OUTPUT s5, stax                ; set desired stax
175  0161E                      LOAD s6, 1E                    ; load 30 into s6
176  2D601                      OUTPUT s6, stay                ; set desired stay

177                             ;; ENDING POINT
177  2D502                      OUTPUT s5, endx                ; set desired endx
178  0163C                      LOAD s6, 3C                    ; load 60 into s6
179  2D603                      OUTPUT s6, endy                ; set desired endy
17A  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

17B                             ;;============================================================================
17B                             ;; Draws the letter E (Line 1)
17B                             ;;============================================================================

17B                             ;; STARTING POINT
17B  01528                      LOAD s5, 28                    ; load 40 into s5
17C  2D500                      OUTPUT s5, stax                ; set desired stax
17D  0161E                      LOAD s6, 1E                    ; load 30 into s6
17E  2D601                      OUTPUT s6, stay                ; set desired stay

17F                             ;; ENDING POINT
17F  2D502                      OUTPUT s5, endx                ; set desired endx
180  0163C                      LOAD s6, 3C                    ; load 60 into s6
181  2D603                      OUTPUT s6, endy                ; set desired endy
182  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

183                             ;;============================================================================
183                             ;; Draws the letter E (Line 2)
183                             ;;============================================================================

183                             ;; STARTING POINT
183  01528                      LOAD s5, 28                    ; load 40 into s5
184  2D500                      OUTPUT s5, stax                ; set desired stax
185  0161E                      LOAD s6, 1E                    ; load 30 into s6
186  2D601                      OUTPUT s6, stay                ; set desired stay

187                             ;; ENDING POINT
187  0153C                      LOAD s5, 3C                    ; load 60 into s5
188  2D502                      OUTPUT s5, endx                ; set desired endx
189  2D603                      OUTPUT s6, endy                ; set desired endy
18A  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

18B                             ;;============================================================================
18B                             ;; Draws the letter E (Line 3)
18B                             ;;============================================================================

18B                             ;; STARTING POINT
18B  01528                      LOAD s5, 28                    ; load 40 into s5
18C  2D500                      OUTPUT s5, stax                ; set desired stax
18D  0162D                      LOAD s6, 2D                    ; load 45 into s6
18E  2D601                      OUTPUT s6, stay                ; set desired stay

18F                             ;; ENDING POINT
18F  0153C                      LOAD s5, 3C                    ; load 60 into s5
190  2D502                      OUTPUT s5, endx                ; set desired endx
191  2D603                      OUTPUT s6, endy                ; set desired endy
192  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

193                             ;;============================================================================
193                             ;; Draws the letter E (Line 3)
193                             ;;============================================================================

193                             ;; STARTING POINT
193  01528                      LOAD s5, 28                    ; load 40 into s5
194  2D500                      OUTPUT s5, stax                ; set desired stax
195  0163C                      LOAD s6, 3C                    ; load 45 into s6
196  2D601                      OUTPUT s6, stay                ; set desired stay

197                             ;; ENDING POINT
197  0153C                      LOAD s5, 3C                    ; load 60 into s5
198  2D502                      OUTPUT s5, endx                ; set desired endx
199  2D603                      OUTPUT s6, endy                ; set desired endy
19A  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

19B                             ;;============================================================================
19B                             ;; Draws the letter L (Line 1)
19B                             ;;============================================================================

19B                             ;; STARTING POINT
19B  01546                      LOAD s5, 46                    ; load 70 into s5
19C  2D500                      OUTPUT s5, stax                ; set desired stax
19D  0161E                      LOAD s6, 1E                    ; load 30 into s6
19E  2D601                      OUTPUT s6, stay                ; set desired stay

19F                             ;; ENDING POINT
19F  2D502                      OUTPUT s5, endx                ; set desired endx
1A0  0163C                      LOAD s6, 3C                    ; load 60 into s6
1A1  2D603                      OUTPUT s6, endy                ; set desired endy
1A2  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1A3                             ;;============================================================================
1A3                             ;; Draws the letter L (Line 2)
1A3                             ;;============================================================================

1A3                             ;; STARTING POINT
1A3  01546                      LOAD s5, 46                    ; load 70 into s5
1A4  2D500                      OUTPUT s5, stax                ; set desired stax
1A5  0163C                      LOAD s6, 3C                    ; load 45 into s6
1A6  2D601                      OUTPUT s6, stay                ; set desired stay

1A7                             ;; ENDING POINT
1A7  0155A                      LOAD s5, 5A                    ; load 90 into s5
1A8  2D502                      OUTPUT s5, endx                ; set desired endx
1A9  2D603                      OUTPUT s6, endy                ; set desired endy
1AA  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1AB                             ;;============================================================================
1AB                             ;; Draws the letter I (Line 1)
1AB                             ;;============================================================================

1AB                             ;; STARTING POINT
1AB  01564                      LOAD s5, 64                    ; load 70 into s5
1AC  2D500                      OUTPUT s5, stax                ; set desired stax
1AD  0161E                      LOAD s6, 1E                    ; load 30 into s6
1AE  2D601                      OUTPUT s6, stay                ; set desired stay

1AF                             ;; ENDING POINT
1AF  2D502                      OUTPUT s5, endx                ; set desired endx
1B0  0163C                      LOAD s6, 3C                    ; load 60 into s6
1B1  2D603                      OUTPUT s6, endy                ; set desired endy
1B2  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1B3                             ;;============================================================================
1B3                             ;; Draws the letter C (Line 1)
1B3                             ;;============================================================================

1B3                             ;; STARTING POINT
1B3  01582                      LOAD s5, 82                    ; load 130 into s5
1B4  2D500                      OUTPUT s5, stax                ; set desired stax
1B5  0161E                      LOAD s6, 1E                    ; load 45 into s6
1B6  2D601                      OUTPUT s6, stay                ; set desired stay

1B7                             ;; ENDING POINT
1B7  01573                      LOAD s5, 73                    ; load 115 into s5
1B8  2D502                      OUTPUT s5, endx                ; set desired endx
1B9  2D603                      OUTPUT s6, endy                ; set desired endy
1BA  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1BB                             ;;============================================================================
1BB                             ;; Draws the letter C (Line 2)
1BB                             ;;============================================================================

1BB                             ;; STARTING POINT
1BB  01573                      LOAD s5, 73                    ; load 115 into s5
1BC  2D500                      OUTPUT s5, stax                ; set desired stax
1BD  0161E                      LOAD s6, 1E                    ; load 45 into s6
1BE  2D601                      OUTPUT s6, stay                ; set desired stay

1BF                             ;; ENDING POINT
1BF  0156E                      LOAD s5, 6E                    ; load 110 into s5
1C0  2D502                      OUTPUT s5, endx                ; set desired endx
1C1  01623                      LOAD s6, 23                    ; load 35 into s6
1C2  2D603                      OUTPUT s6, endy                ; set desired endy
1C3  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1C4                             ;;============================================================================
1C4                             ;; Draws the letter C (Line 3)
1C4                             ;;============================================================================

1C4                             ;; STARTING POINT
1C4  0156E                      LOAD s5, 6E                    ; load 110 into s5
1C5  2D500                      OUTPUT s5, stax                ; set desired stax
1C6  01623                      LOAD s6, 23                    ; load 35 into s6
1C7  2D601                      OUTPUT s6, stay                ; set desired stay

1C8                             ;; ENDING POINT
1C8  2D502                      OUTPUT s5, endx                ; set desired endx
1C9  01637                      LOAD s6, 37                    ; load 55 into s6
1CA  2D603                      OUTPUT s6, endy                ; set desired endy
1CB  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1CC                             ;;============================================================================
1CC                             ;; Draws the letter C (Line 4)
1CC                             ;;============================================================================

1CC                             ;; STARTING POINT
1CC  0156E                      LOAD s5, 6E                    ; load 110 into s5
1CD  2D500                      OUTPUT s5, stax                ; set desired stax
1CE  01637                      LOAD s6, 37                    ; load 55 into s6
1CF  2D601                      OUTPUT s6, stay                ; set desired stay

1D0                             ;; ENDING POINT
1D0  01573                      LOAD s5, 73                    ; load 130 into s5
1D1  2D502                      OUTPUT s5, endx                ; set desired endx
1D2  0163B                      LOAD s6, 3B                    ; load 44 into s6
1D3  2D603                      OUTPUT s6, endy                ; set desired endy
1D4  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1D5                             ;;============================================================================
1D5                             ;; Draws the letter C (Line 5)
1D5                             ;;============================================================================

1D5                             ;; STARTING POINT
1D5  01582                      LOAD s5, 82                    ; load 130 into s5
1D6  2D500                      OUTPUT s5, stax                ; set desired stax
1D7  0163C                      LOAD s6, 3C                    ; load 45 into s6
1D8  2D601                      OUTPUT s6, stay                ; set desired stay

1D9                             ;; ENDING POINT
1D9  01573                      LOAD s5, 73                    ; load 115 into s5
1DA  2D502                      OUTPUT s5, endx                ; set desired endx
1DB  2D603                      OUTPUT s6, endy                ; set desired endy
1DC  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1DD                             ;;============================================================================
1DD                             ;; Draws the letter O (Line 1)
1DD                             ;;============================================================================

1DD                             ;; STARTING POINT
1DD  01591                      LOAD s5, 91                    ; load 145 into s5
1DE  2D500                      OUTPUT s5, stax                ; set desired stax
1DF  0161E                      LOAD s6, 1E                    ; load 30 into s6
1E0  2D601                      OUTPUT s6, stay                ; set desired stay

1E1                             ;; ENDING POINT
1E1  0159B                      LOAD s5, 9B                    ; load 155 into s5
1E2  2D502                      OUTPUT s5, endx                ; set desired endx
1E3  2D603                      OUTPUT s6, endy                ; set desired endy
1E4  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1E5                             ;;============================================================================
1E5                             ;; Draws the letter O (Line 2)
1E5                             ;;============================================================================

1E5                             ;; STARTING POINT
1E5  01591                      LOAD s5, 91                    ; load 145 into s5
1E6  2D500                      OUTPUT s5, stax                ; set desired stax
1E7  0161E                      LOAD s6, 1E                    ; load 45 into s6
1E8  2D601                      OUTPUT s6, stay                ; set desired stay

1E9                             ;; ENDING POINT
1E9  0158C                      LOAD s5, 8C                    ; load 110 into s5
1EA  2D502                      OUTPUT s5, endx                ; set desired endx
1EB  0161E                      LOAD s6, 1E                    ; load 35 into s6
1EC  2D603                      OUTPUT s6, endy                ; set desired endy
1ED  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1EE                             ;;============================================================================
1EE                             ;; Draws the letter O (Line 3)
1EE                             ;;============================================================================

1EE                             ;; STARTING POINT
1EE  0158C                      LOAD s5, 8C                    ; load 140 into s5
1EF  2D500                      OUTPUT s5, stax                ; set desired stax
1F0  0161E                      LOAD s6, 1E                    ; load 30 into s6
1F1  2D601                      OUTPUT s6, stay                ; set desired stay

1F2                             ;; ENDING POINT
1F2  2D502                      OUTPUT s5, endx                ; set desired endx
1F3  0163C                      LOAD s6, 3C                    ; load 60 into s6
1F4  2D603                      OUTPUT s6, endy                ; set desired endy
1F5  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1F6                             ;;============================================================================
1F6                             ;; Draws the letter O (Line 4)
1F6                             ;;============================================================================

1F6                             ;; STARTING POINT
1F6  0158C                      LOAD s5, 8C                    ; load 110 into s5
1F7  2D500                      OUTPUT s5, stax                ; set desired stax
1F8  0163C                      LOAD s6, 3C                    ; load 55 into s6
1F9  2D601                      OUTPUT s6, stay                ; set desired stay

1FA                             ;; ENDING POINT
1FA  01591                      LOAD s5, 91                    ; load 145 into s5
1FB  2D502                      OUTPUT s5, endx                ; set desired endx
1FC  0163C                      LOAD s6, 3C                    ; load 30 into s6
1FD  2D603                      OUTPUT s6, endy                ; set desired endy
1FE  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1FF                             ;;============================================================================
1FF                             ;; Draws the letter O (Line 5)
1FF                             ;;============================================================================

1FF                             ;; STARTING POINT
1FF  01591                      LOAD s5, 91                    ; load 145 into s5
200  2D500                      OUTPUT s5, stax                ; set desired stax
201  0163C                      LOAD s6, 3C                    ; load 30 into s6
202  2D601                      OUTPUT s6, stay                ; set desired stay

203                             ;; ENDING POINT
203  0159B                      LOAD s5, 9B                    ; load 155 into s5
204  2D502                      OUTPUT s5, endx                ; set desired endx
205  2D603                      OUTPUT s6, endy                ; set desired endy
206  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

207                             ;;============================================================================
207                             ;; Draws the letter O (Line 6)
207                             ;;============================================================================

207                             ;; STARTING POINT
207  0159B                      LOAD s5, 9B                    ; load 110 into s5
208  2D500                      OUTPUT s5, stax                ; set desired stax
209  0163C                      LOAD s6, 3C                    ; load 55 into s6
20A  2D601                      OUTPUT s6, stay                ; set desired stay

20B                             ;; ENDING POINT
20B  015A0                      LOAD s5, A0                    ; load 160 into s5
20C  2D502                      OUTPUT s5, endx                ; set desired endx
20D  0163C                      LOAD s6, 3C                    ; load 30 into s6
20E  2D603                      OUTPUT s6, endy                ; set desired endy
20F  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

210                             ;;============================================================================
210                             ;; Draws the letter O (Line 7)
210                             ;;============================================================================

210                             ;; STARTING POINT
210  015A0                      LOAD s5, A0                    ; load 160 into s5
211  2D500                      OUTPUT s5, stax                ; set desired stax
212  0161E                      LOAD s6, 1E                    ; load 30 into s6
213  2D601                      OUTPUT s6, stay                ; set desired stay

214                             ;; ENDING POINT
214  2D502                      OUTPUT s5, endx                ; set desired endx
215  0163C                      LOAD s6, 3C                    ; load 60 into s6
216  2D603                      OUTPUT s6, endy                ; set desired endy
217  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

218                             ;;============================================================================
218                             ;; Draws the letter O (Line 8)
218                             ;;============================================================================

218                             ;; STARTING POINT
218  015A0                      LOAD s5, A0                    ; load 160 into s5
219  2D500                      OUTPUT s5, stax                ; set desired stax
21A  0161E                      LOAD s6, 1E                    ; load 30 into s6
21B  2D601                      OUTPUT s6, stay                ; set desired stay

21C                             ;; ENDING POINT
21C  0159B                      LOAD s5, 9B                    ; load 155 into s5
21D  2D502                      OUTPUT s5, endx                ; set desired endx
21E  0161E                      LOAD s6, 1E                    ; load 30 into s6
21F  2D603                      OUTPUT s6, endy                ; set desired endy
220  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

221                             ;;============================================================================
221                             ;; Draws the letter P (Line 1)
221                             ;;============================================================================
221  010AA                      LOAD s0, AA                    ; load 170 into s0
222  0111E                      LOAD s1, 1E                    ; load 30 into s1
223  012BE                      LOAD s2, BE                    ; load 190 into s2
224  0131E                      LOAD s3, 1E                    ; keep s3 set at 30
225  204D0                      CALL draw_line                 ; call the draw_line subroutine

226                             ;;============================================================================
226                             ;; Draws the letter P (Line 2)
226                             ;;============================================================================
226  010AA                      LOAD s0, AA                    ; load 170 into s0
227  0111E                      LOAD s1, 1E                    ; load 30 into s1
228  012AA                      LOAD s2, AA                    ; load 170 into s2
229  0133C                      LOAD s3, 3C                    ; load 60 into s3
22A  204D0                      CALL draw_line                 ; call the draw_line subroutine

22B                             ;;============================================================================
22B                             ;; Draws the letter P (Line 3)
22B                             ;;============================================================================
22B  010AA                      LOAD s0, AA                    ; load 170 into s0
22C  0112D                      LOAD s1, 2D                    ; load 45 into s1
22D  012BE                      LOAD s2, BE                    ; load 190 into s2
22E  0132D                      LOAD s3, 2D                    ; keep s0 set at 45
22F  204D0                      CALL draw_line                 ; call the draw_line subroutine

230                             ;;============================================================================
230                             ;; Draws the letter P (Line 4)
230                             ;;============================================================================
230  010BE                      LOAD s0, BE                    ; load 190 into s0
231  0111E                      LOAD s1, 1E                    ; load 30 into s1
232  012BE                      LOAD s2, BE                    ; load 190 into s2
233  0132D                      LOAD s3, 2D                    ; load 45 to s3
234  204D0                      CALL draw_line                 ; call the draw_line subroutine

235                             ;;============================================================================
235                             ;; Draws the letter T (Line 1)
235                             ;;============================================================================
235  010C8                      LOAD s0, C8                    ; load 200 into s0
236  0111E                      LOAD s1, 1E                    ; load 30 into s1
237  012DC                      LOAD s2, DC                    ; load 220 into s2
238  0131E                      LOAD s3, 1E                    ; load 30 to s3
239  204D0                      CALL draw_line                 ; call the draw_line subroutine

23A                             ;;============================================================================
23A                             ;; Draws the letter T (Line 2)
23A                             ;;============================================================================
23A  010D2                      LOAD s0, D2                    ; load 200 into s0
23B  0111E                      LOAD s1, 1E                    ; load 30 into s1
23C  012D2                      LOAD s2, D2                    ; load 220 into s2
23D  0133C                      LOAD s3, 3C                    ; load 60 to s3
23E  204D0                      CALL draw_line                 ; call the draw_line subroutine

23F                             ;;============================================================================
23F                             ;; Draws the letter E (Line 1)
23F                             ;;============================================================================
23F  010E6                      LOAD s0, E6                    ; load 230 into s0
240  0111E                      LOAD s1, 1E                    ; load 30 into s1
241  012E6                      LOAD s2, E6                    ; load 230 into s2
242  0133C                      LOAD s3, 3C                    ; load 30 to s3
243  204D0                      CALL draw_line                 ; call the draw_line subroutine

244                             ;;============================================================================
244                             ;; Draws the letter E (Line 2)
244                             ;;============================================================================
244  010E6                      LOAD s0, E6                    ; load 230 into s0
245  0111E                      LOAD s1, 1E                    ; load 30 into s1
246  012FA                      LOAD s2, FA                    ; load 250 into s2
247  0131E                      LOAD s3, 1E                    ; load 30 to s3
248  204D0                      CALL draw_line                 ; call the draw_line subroutine

249                             ;;============================================================================
249                             ;; Draws the letter E (Line 3)
249                             ;;============================================================================
249  010E6                      LOAD s0, E6                    ; load 230 into s0
24A  0112D                      LOAD s1, 2D                    ; load 30 into s1
24B  012FA                      LOAD s2, FA                    ; load 250 into s2
24C  0132D                      LOAD s3, 2D                    ; load 30 to s3
24D  204D0                      CALL draw_line                 ; call the draw_line subroutine

24E                             ;;============================================================================
24E                             ;; Draws the letter E (Line 4)
24E                             ;;============================================================================
24E  010E6                      LOAD s0, E6                    ; load 230 into s0
24F  0113C                      LOAD s1, 3C                    ; load 30 into s1
250  012FA                      LOAD s2, FA                    ; load 250 into s2
251  0133C                      LOAD s3, 3C                    ; load 30 to s3
252  204D0                      CALL draw_line                 ; call the draw_line subroutine

253                             ;;============================================================================
253                             ;; NEW LINE STARTS HERE (GAME)
253                             ;;============================================================================

253                             ;;============================================================================
253                             ;; Draws the letter G (Line 1)
253                             ;;============================================================================
253  01046                      LOAD s0, 46                    ; load 70 into s0
254  0115A                      LOAD s1, 5A                    ; load 90 into s1
255  0125A                      LOAD s2, 5A                    ; load 90 into s2
256  0135A                      LOAD s3, 5A                    ; load 90 to s3
257  204D0                      CALL draw_line                 ; call the draw_line subroutine

258                             ;;============================================================================
258                             ;; Draws the letter G (Line 2)
258                             ;;============================================================================
258  01046                      LOAD s0, 46                    ; load 70 into s0
259  0115A                      LOAD s1, 5A                    ; load 90 into s1
25A  01246                      LOAD s2, 46                    ; load 90 into s2
25B  01378                      LOAD s3, 78                    ; load 90 to s3
25C  204D0                      CALL draw_line                 ; call the draw_line subroutine

25D                             ;;============================================================================
25D                             ;; Draws the letter G (Line 3)
25D                             ;;============================================================================
25D  01046                      LOAD s0, 46                    ; load 70 into s0
25E  01178                      LOAD s1, 78                    ; load 90 into s1
25F  0125A                      LOAD s2, 5A                    ; load 90 into s2
260  01378                      LOAD s3, 78                    ; load 90 to s3
261  204D0                      CALL draw_line                 ; call the draw_line subroutine

262                             ;;============================================================================
262                             ;; Draws the letter G (Line 4)
262                             ;;============================================================================
262  0105A                      LOAD s0, 5A                    ; load 70 into s0
263  01169                      LOAD s1, 69                    ; load 90 into s1
264  0125A                      LOAD s2, 5A                    ; load 90 into s2
265  01378                      LOAD s3, 78                    ; load 90 to s3
266  204D0                      CALL draw_line                 ; call the draw_line subroutine

267                             ;;============================================================================
267                             ;; Draws the letter G (Line 5)
267                             ;;============================================================================
267  0105A                      LOAD s0, 5A                    ; load 70 into s0
268  01169                      LOAD s1, 69                    ; load 90 into s1
269  01250                      LOAD s2, 50                    ; load 90 into s2
26A  01369                      LOAD s3, 69                    ; load 90 to s3
26B  204D0                      CALL draw_line                 ; call the draw_line subroutine

26C                             ;;============================================================================
26C                             ;; Draws the letter A (Line 1)
26C                             ;;============================================================================
26C  01064                      LOAD s0, 64                    ; 100
26D  0115A                      LOAD s1, 5A                    ; 90
26E  01278                      LOAD s2, 78                    ; 120
26F  0135A                      LOAD s3, 5A                    ; 90
270  204D0                      CALL draw_line                 ; call the draw_line subroutine

271                             ;;============================================================================
271                             ;; Draws the letter A (Line 2)
271                             ;;============================================================================
271  01064                      LOAD s0, 64                    ; 100
272  01169                      LOAD s1, 69                    ; 105
273  01278                      LOAD s2, 78                    ; 120
274  01369                      LOAD s3, 69                    ; 105
275  204D0                      CALL draw_line                 ; call the draw_line subroutine

276                             ;;============================================================================
276                             ;; Draws the letter A (Line 3)
276                             ;;============================================================================
276  01064                      LOAD s0, 64                    ; 100
277  0115A                      LOAD s1, 5A                    ; 90
278  01264                      LOAD s2, 64                    ; 100
279  01378                      LOAD s3, 78                    ; 120
27A  204D0                      CALL draw_line                 ; call the draw_line subroutine

27B                             ;;============================================================================
27B                             ;; Draws the letter A (Line 4)
27B                             ;;============================================================================
27B  01078                      LOAD s0, 78                    ; 120
27C  0115A                      LOAD s1, 5A                    ; 90
27D  01278                      LOAD s2, 78                    ; 120
27E  01378                      LOAD s3, 78                    ; 120
27F  204D0                      CALL draw_line                 ; call the draw_line subroutine

280                             ;;============================================================================
280                             ;; Draws the letter M (Line 1)
280                             ;;============================================================================
280  01082                      LOAD s0, 82                    ; 130
281  0115A                      LOAD s1, 5A                    ; 90
282  01282                      LOAD s2, 82                    ; 130
283  01378                      LOAD s3, 78                    ; 120
284  204D0                      CALL draw_line                 ; call the draw_line subroutine

285                             ;;============================================================================
285                             ;; Draws the letter M (Line 2)
285                             ;;============================================================================
285  01096                      LOAD s0, 96                    ; 150
286  0115A                      LOAD s1, 5A                    ; 90
287  01296                      LOAD s2, 96                    ; 150
288  01378                      LOAD s3, 78                    ; 120
289  204D0                      CALL draw_line                 ; call the draw_line subroutine

28A                             ;;============================================================================
28A                             ;; Draws the letter M (Line 3)
28A                             ;;============================================================================
28A  01096                      LOAD s0, 96                    ; 150
28B  0115A                      LOAD s1, 5A                    ; 90
28C  0128C                      LOAD s2, 8C                    ; 140
28D  01369                      LOAD s3, 69                    ; 105
28E  204D0                      CALL draw_line                 ; call the draw_line subroutine

28F                             ;;============================================================================
28F                             ;; Draws the letter M (Line 4)
28F                             ;;============================================================================
28F  01082                      LOAD s0, 82                    ; 130
290  0115A                      LOAD s1, 5A                    ; 90
291  0128C                      LOAD s2, 8C                    ; 140
292  01369                      LOAD s3, 69                    ; 105
293  204D0                      CALL draw_line                 ; call the draw_line subroutine

294                             ;;============================================================================
294                             ;; Draws the letter E (Line 1)
294                             ;;============================================================================
294  010A0                      LOAD s0, A0                    ; 160
295  0115A                      LOAD s1, 5A                    ; 90
296  012A0                      LOAD s2, A0                    ; 160
297  01378                      LOAD s3, 78                    ; 120
298  204D0                      CALL draw_line                 ; call the draw_line subroutine

299                             ;;============================================================================
299                             ;; Draws the letter E (Line 2)
299                             ;;============================================================================
299  010A0                      LOAD s0, A0                    ; 160
29A  0115A                      LOAD s1, 5A                    ; 90
29B  012B4                      LOAD s2, B4                    ; 180
29C  0135A                      LOAD s3, 5A                    ; 90
29D  204D0                      CALL draw_line                 ; call the draw_line subroutine

29E                             ;;============================================================================
29E                             ;; Draws the letter E (Line 3)
29E                             ;;============================================================================
29E  010A0                      LOAD s0, A0                    ; 160
29F  01169                      LOAD s1, 69                    ; 105
2A0  012B4                      LOAD s2, B4                    ; 180
2A1  01369                      LOAD s3, 69                    ; 105
2A2  204D0                      CALL draw_line                 ; call the draw_line subroutine

2A3                             ;;============================================================================
2A3                             ;; Draws the letter E (Line 4)
2A3                             ;;============================================================================
2A3  010A0                      LOAD s0, A0                    ; 160
2A4  01178                      LOAD s1, 78                    ; 120
2A5  012B4                      LOAD s2, B4                    ; 180
2A6  01378                      LOAD s3, 78                    ; 120
2A7  204D0                      CALL draw_line                 ; call the draw_line subroutine

2A8  25000                      RETURN                         ; leave start_screen subroutine


2A9                             ;;============================================================================
2A9                             ;; Game Over - Draw Game Over Screen Subroutine
2A9                             ;;============================================================================

2A9              draw_gameover:
2A9                             ;;;;;;;;;;;;;;;;;;;;;;;;
2A9                             ;; Code for Game Over ;;
2A9                             ;;;;;;;;;;;;;;;;;;;;;;;;

2A9                             ;;;;;;;;;;;;;;;
2A9                             ;;BEGIN GAME;;
2A9                             ;;;;;;;;;;;;;;;

2A9                             ;; LINE 1 (TOP) FOR G
2A9  0100A                      LOAD s0, 0A                    ; stax 10
2AA  0111E                      LOAD s1, 1E                    ; stay 30
2AB  0121E                      LOAD s2, 1E                    ; endx 30
2AC  0131E                      LOAD s3, 1E                    ; endy 30
2AD  204D0                      CALL draw_line                 ;

2AE                             ;; LINE 2 (LEFT) FOR G
2AE  0100A                      LOAD s0, 0A                    ; stax 10
2AF  0111E                      LOAD s1, 1E                    ; stay 30
2B0  0120A                      LOAD s2, 0A                    ; endx 10
2B1  0133C                      LOAD s3, 3C                    ; endy 60
2B2  204D0                      CALL draw_line                 ;

2B3                             ;; LINE 3 (BOTTOM) FOR G
2B3  0100A                      LOAD s0, 0A                    ; stax 10
2B4  0113C                      LOAD s1, 3C                    ; stay 60
2B5  0121E                      LOAD s2, 1E                    ; endx 30
2B6  0133C                      LOAD s3, 3C                    ; endy 60
2B7  204D0                      CALL draw_line                 ;

2B8                             ;; LINE 4 (RIGHT) FOR G
2B8  0101E                      LOAD s0, 1E                    ; stax 30
2B9  01132                      LOAD s1, 32                    ; stay 50
2BA  0121E                      LOAD s2, 1E                    ; endx 30
2BB  0133C                      LOAD s3, 3C                    ; endy 60
2BC  204D0                      CALL draw_line                 ;

2BD                             ;; LINE 5 (INNER MIDDLE) FOR G
2BD  01014                      LOAD s0, 14                    ; stax 20
2BE  01132                      LOAD s1, 32                    ; stay 50
2BF  0121E                      LOAD s2, 1E                    ; endx 30
2C0  01332                      LOAD s3, 32                    ; endy 50
2C1  204D0                      CALL draw_line                 ;

2C2                             ;; LINE 1 (LEFT) FOR A
2C2  01028                      LOAD s0, 28                    ; stax 40
2C3  0111E                      LOAD s1, 1E                    ; stay 30
2C4  01228                      LOAD s2, 28                    ; endx 40
2C5  0133C                      LOAD s3, 3C                    ; endy 60
2C6  204D0                      CALL draw_line                 ;

2C7                             ;; LINE 2 (TOP) FOR A
2C7  01028                      LOAD s0, 28                    ; stax 40
2C8  0111E                      LOAD s1, 1E                    ; stay 30
2C9  0123C                      LOAD s2, 3C                    ; endx 60
2CA  0131E                      LOAD s3, 1E                    ; endy 30
2CB  204D0                      CALL draw_line                 ;

2CC                             ;; LINE 3 (MIDDLE) FOR A
2CC  01028                      LOAD s0, 28                    ; stax 40
2CD  0112D                      LOAD s1, 2D                    ; stay 45
2CE  0123C                      LOAD s2, 3C                    ; endx 60
2CF  0132D                      LOAD s3, 2D                    ; endy 45
2D0  204D0                      CALL draw_line                 ;

2D1                             ;; LINE 4 (RIGHT) FOR A
2D1  0103C                      LOAD s0, 3C                    ; stax 60
2D2  0111E                      LOAD s1, 1E                    ; stay 30
2D3  0123C                      LOAD s2, 3C                    ; endx 60
2D4  0133C                      LOAD s3, 3C                    ; endy 60
2D5  204D0                      CALL draw_line                 ;

2D6                             ;; LINE 1 (LEFT) FOR M
2D6  01046                      LOAD s0, 46                    ; stax 70
2D7  0111E                      LOAD s1, 1E                    ; stay 30
2D8  01246                      LOAD s2, 46                    ; endx 70
2D9  0133C                      LOAD s3, 3C                    ; endy 60
2DA  204D0                      CALL draw_line                 ;

2DB                             ;; LINE 2 (LEFT ANGLED) FOR M
2DB  01046                      LOAD s0, 46                    ; stax 70
2DC  0111E                      LOAD s1, 1E                    ; stay 30
2DD  01250                      LOAD s2, 50                    ; endx 80
2DE  01332                      LOAD s3, 32                    ; endy 50
2DF  204D0                      CALL draw_line                 ;

2E0                             ;; LINE 3 (RIGHT ANGLED) FOR M
2E0  0105A                      LOAD s0, 5A                    ; stax 90
2E1  0111E                      LOAD s1, 1E                    ; stay 30
2E2  01250                      LOAD s2, 50                    ; endx 80
2E3  01332                      LOAD s3, 32                    ; endy 50
2E4  204D0                      CALL draw_line                 ;

2E5                             ;; LINE 4 (RIGHT) FOR M
2E5  0105A                      LOAD s0, 5A                    ; stax 90
2E6  0111E                      LOAD s1, 1E                    ; stay 30
2E7  0125A                      LOAD s2, 5A                    ; endx 90
2E8  0133C                      LOAD s3, 3C                    ; endy 60
2E9  204D0                      CALL draw_line                 ;

2EA                             ;; LINE 1 (LEFT) FOR E1
2EA  01064                      LOAD s0, 64                    ; stax 100
2EB  0111E                      LOAD s1, 1E                    ; stay 30
2EC  01264                      LOAD s2, 64                    ; endx 100
2ED  0133C                      LOAD s3, 3C                    ; endy 60
2EE  204D0                      CALL draw_line                 ;

2EF                             ;; LINE 2 (TOP) FOR E1
2EF  01064                      LOAD s0, 64                    ; stax 100
2F0  0111E                      LOAD s1, 1E                    ; stay 30
2F1  01278                      LOAD s2, 78                    ; endx 120
2F2  0131E                      LOAD s3, 1E                    ; endy 30
2F3  204D0                      CALL draw_line                 ;

2F4                             ;; LINE 3 (MIDDLE) FOR E1
2F4  01064                      LOAD s0, 64                    ; stax 100
2F5  0112D                      LOAD s1, 2D                    ; stay 45
2F6  01278                      LOAD s2, 78                    ; endx 120
2F7  0132D                      LOAD s3, 2D                    ; endy 45
2F8  204D0                      CALL draw_line                 ;

2F9                             ;; LINE 4 (BOTTOM) FOR E1
2F9  01064                      LOAD s0, 64                    ; stax 100
2FA  0113C                      LOAD s1, 3C                    ; stay 60
2FB  01278                      LOAD s2, 78                    ; endx 120
2FC  0133C                      LOAD s3, 3C                    ; endy 60
2FD  204D0                      CALL draw_line                 ;

2FE                             ;; LINE 1 (LEFT) FOR O
2FE  01082                      LOAD s0, 82                    ; stax 130
2FF  0111E                      LOAD s1, 1E                    ; stay 30
300  01282                      LOAD s2, 82                    ; endx 130
301  0133C                      LOAD s3, 3C                    ; endy 60
302  204D0                      CALL draw_line                 ;

303                             ;; LINE 2 (TOP) FOR O
303  01082                      LOAD s0, 82                    ; stax 130
304  0111E                      LOAD s1, 1E                    ; stay 30
305  01296                      LOAD s2, 96                    ; endx 150
306  0131E                      LOAD s3, 1E                    ; endy 30
307  204D0                      CALL draw_line                 ;

308                             ;; LINE 3 (RIGHT) FOR O
308  01096                      LOAD s0, 96                    ; stax 150
309  0111E                      LOAD s1, 1E                    ; stay 30
30A  01296                      LOAD s2, 96                    ; endx 150
30B  0133C                      LOAD s3, 3C                    ; endy 60
30C  204D0                      CALL draw_line                 ;

30D                             ;; LINE 4 (BOTTOM) FOR O
30D  01082                      LOAD s0, 82                    ; stax 130
30E  0113C                      LOAD s1, 3C                    ; stay 60
30F  01296                      LOAD s2, 96                    ; endx 150
310  0133C                      LOAD s3, 3C                    ; endy 60
311  204D0                      CALL draw_line                 ;

312                             ;; LINE 1 (LEFTANGLE) FOR V
312  010A0                      LOAD s0, A0                    ; stax 160
313  0111E                      LOAD s1, 1E                    ; stay 30
314  012AA                      LOAD s2, AA                    ; endx 170
315  0133C                      LOAD s3, 3C                    ; endy 60
316  204D0                      CALL draw_line                 ;

317                             ;; LINE 2 (RIGHTANGLE) FOR V
317  010B4                      LOAD s0, B4                    ; stax 180
318  0111E                      LOAD s1, 1E                    ; stay 30
319  012AA                      LOAD s2, AA                    ; endx 170
31A  0133C                      LOAD s3, 3C                    ; endy 60
31B  204D0                      CALL draw_line                 ;

31C                             ;; LINE 1 (LEFT) FOR E
31C  010BE                      LOAD s0, BE                    ; stax 190
31D  0111E                      LOAD s1, 1E                    ; stay 30
31E  012BE                      LOAD s2, BE                    ; endx 190
31F  0133C                      LOAD s3, 3C                    ; endy 60
320  204D0                      CALL draw_line                 ;

321                             ;; LINE 2 (TOP) FOR E
321  010BE                      LOAD s0, BE                    ; stax 190
322  0111E                      LOAD s1, 1E                    ; stay 30
323  012D2                      LOAD s2, D2                    ; endx 210
324  0131E                      LOAD s3, 1E                    ; endy 30
325  204D0                      CALL draw_line                 ;

326                             ;; LINE 3 (MIDDLE) FOR E
326  010BE                      LOAD s0, BE                    ; stax 190
327  0112D                      LOAD s1, 2D                    ; stay 45
328  012D2                      LOAD s2, D2                    ; endx 210
329  0132D                      LOAD s3, 2D                    ; endy 45
32A  204D0                      CALL draw_line                 ;

32B                             ;; LINE 4 (BOTTOM) FOR E
32B  010BE                      LOAD s0, BE                    ; stax 190
32C  0113C                      LOAD s1, 3C                    ; stay 60
32D  012D2                      LOAD s2, D2                    ; endx 210
32E  0133C                      LOAD s3, 3C                    ; endy 60
32F  204D0                      CALL draw_line                 ;

330                             ;; LINE 1 (LEFT) FOR R
330  010DC                      LOAD s0, DC                    ; stax 220
331  0111E                      LOAD s1, 1E                    ; stay 30
332  012DC                      LOAD s2, DC                    ; endx 220
333  0133C                      LOAD s3, 3C                    ; endy 60
334  204D0                      CALL draw_line                 ;

335                             ;; LINE 2 (TOP) FOR R
335  010DC                      LOAD s0, DC                    ; stax 220
336  0111E                      LOAD s1, 1E                    ; stay 30
337  012F0                      LOAD s2, F0                    ; endx 240
338  0131E                      LOAD s3, 1E                    ; endy 30
339  204D0                      CALL draw_line                 ;

33A                             ;; LINE 3 (RIGHT) FOR R
33A  010F0                      LOAD s0, F0                    ; stax 240
33B  0111E                      LOAD s1, 1E                    ; stay 30
33C  012F0                      LOAD s2, F0                    ; endx 240
33D  0132D                      LOAD s3, 2D                    ; endy 45
33E  204D0                      CALL draw_line                 ;

33F                             ;; LINE 4 (MIDDLE) FOR R
33F  010DC                      LOAD s0, DC                    ; stax 220
340  0112D                      LOAD s1, 2D                    ; stay 45
341  012F0                      LOAD s2, F0                    ; endx 240
342  0132D                      LOAD s3, 2D                    ; endy 45
343  204D0                      CALL draw_line                 ;

344                             ;; LINE 5 (ANGLED1) FOR R
344  010DC                      LOAD s0, DC                    ; stax 220
345  0112D                      LOAD s1, 2D                    ; stay 45
346  012F0                      LOAD s2, F0                    ; endx 240
347  0133C                      LOAD s3, 3C                    ; endy 60
348  204D0                      CALL draw_line                 ;

349                             ;; LINE 6 (ANGLED2) FOR R
349  010DC                      LOAD s0, DC                    ; stax 220
34A  0112E                      LOAD s1, 2E                    ; stay 46
34B  012EF                      LOAD s2, EF                    ; endx 239
34C  0133C                      LOAD s3, 3C                    ; endy 60
34D  204D0                      CALL draw_line                 ;


34E  25000                      RETURN                         ;
34F                             ;;============================================================================
34F                             ;; Credits - Draw Credits Screen Subroutine
34F                             ;;============================================================================

34F               draw_credits:
34F                             ;; LINE 1 (TOP) FOR C
34F  01023                      LOAD s0, 23                    ; stax 35
350  0111E                      LOAD s1, 1E                    ; stay 30
351  0122D                      LOAD s2, 2D                    ; endx 45
352  0131E                      LOAD s3, 1E                    ; endy 30
353  204D0                      CALL draw_line                 ;

354                             ;; LINE 2 (TOPLEFT ANGLED) FOR C
354  01023                      LOAD s0, 23                    ; stax 35
355  0111E                      LOAD s1, 1E                    ; stay 30
356  01219                      LOAD s2, 19                    ; endx 25
357  01328                      LOAD s3, 28                    ; endy 40
358  204D0                      CALL draw_line                 ;

359                             ;; LINE 3 (LEFT) FOR C
359  01019                      LOAD s0, 19                    ; stax 25
35A  01128                      LOAD s1, 28                    ; stay 40
35B  01219                      LOAD s2, 19                    ; endx 25
35C  01332                      LOAD s3, 32                    ; endy 50
35D  204D0                      CALL draw_line                 ;

35E                             ;; LINE 4 (BOTTOMLEFT ANGLED) FOR C
35E  01019                      LOAD s0, 19                    ; stax 25
35F  01132                      LOAD s1, 32                    ; stay 50
360  01223                      LOAD s2, 23                    ; endx 35
361  0133C                      LOAD s3, 3C                    ; endy 60
362  204D0                      CALL draw_line                 ;

363                             ;; LINE 5 (BOTTOM) FOR C
363  01023                      LOAD s0, 23                    ; stax 35
364  0113C                      LOAD s1, 3C                    ; stay 60
365  0122D                      LOAD s2, 2D                    ; endx 45
366  0133C                      LOAD s3, 3C                    ; endy 60
367  204D0                      CALL draw_line                 ;

368                             ;; LINE 1 (LEFT) FOR R
368  01037                      LOAD s0, 37                    ; stax 55
369  0111E                      LOAD s1, 1E                    ; stay 30
36A  01237                      LOAD s2, 37                    ; endx 55
36B  0133C                      LOAD s3, 3C                    ; endy 60
36C  204D0                      CALL draw_line                 ;

36D                             ;; LINE 2 (TOP) FOR R
36D  01037                      LOAD s0, 37                    ; stax 55
36E  0111E                      LOAD s1, 1E                    ; stay 30
36F  0124B                      LOAD s2, 4B                    ; endx 75
370  0131E                      LOAD s3, 1E                    ; endy 30
371  204D0                      CALL draw_line                 ;

372                             ;; LINE 3 (RIGHT) FOR R
372  0104B                      LOAD s0, 4B                    ; stax 75
373  0111E                      LOAD s1, 1E                    ; stay 30
374  0124B                      LOAD s2, 4B                    ; endx 75
375  0132D                      LOAD s3, 2D                    ; endy 45
376  204D0                      CALL draw_line                 ;

377                             ;; LINE 4 (MIDDLE) FOR R
377  01037                      LOAD s0, 37                    ; stax 55
378  0112D                      LOAD s1, 2D                    ; stay 45
379  0124B                      LOAD s2, 4B                    ; endx 75
37A  0132D                      LOAD s3, 2D                    ; endy 45
37B  204D0                      CALL draw_line                 ;

37C                             ;; LINE 5 (ANGLED) FOR R
37C  01037                      LOAD s0, 37                    ; stax 55
37D  0112D                      LOAD s1, 2D                    ; stay 45
37E  0124B                      LOAD s2, 4B                    ; endx 75
37F  0133C                      LOAD s3, 3C                    ; endy 60
380  204D0                      CALL draw_line                 ;

381                             ;; LINE 6 (ANGLED2) FOR R
381  01037                      LOAD s0, 37                    ; stax 55
382  0112E                      LOAD s1, 2E                    ; stay 46
383  0124A                      LOAD s2, 4A                    ; endx 74
384  0133C                      LOAD s3, 3C                    ; endy 60
385  204D0                      CALL draw_line                 ;

386                             ;; LINE 1 (LEFT) FOR E
386  01055                      LOAD s0, 55                    ; stax 85
387  0111E                      LOAD s1, 1E                    ; stay 30
388  01255                      LOAD s2, 55                    ; endx 85
389  0133C                      LOAD s3, 3C                    ; endy 60
38A  204D0                      CALL draw_line                 ;

38B                             ;; LINE 2 (TOP) FOR E
38B  01055                      LOAD s0, 55                    ; stax 85
38C  0111E                      LOAD s1, 1E                    ; stay 30
38D  01269                      LOAD s2, 69                    ; endx 105
38E  0131E                      LOAD s3, 1E                    ; endy 30
38F  204D0                      CALL draw_line                 ;

390                             ;; LINE 3 (MIDDLE) FOR E
390  01055                      LOAD s0, 55                    ; stax 85
391  0112D                      LOAD s1, 2D                    ; stay 45
392  01269                      LOAD s2, 69                    ; endx 105
393  0132D                      LOAD s3, 2D                    ; endy 45
394  204D0                      CALL draw_line                 ;

395                             ;; LINE 4 (BOTTOM) FOR E
395  01055                      LOAD s0, 55                    ; stax 85
396  0113C                      LOAD s1, 3C                    ; stay 60
397  01269                      LOAD s2, 69                    ; endx 105
398  0133C                      LOAD s3, 3C                    ; endy 60
399  204D0                      CALL draw_line                 ;

39A                             ;; LINE 1 (LEFT) FOR D
39A  01073                      LOAD s0, 73                    ; stax 115
39B  0111E                      LOAD s1, 1E                    ; stay 30
39C  01273                      LOAD s2, 73                    ; endx 115
39D  0133C                      LOAD s3, 3C                    ; endy 60
39E  204D0                      CALL draw_line                 ;

39F                             ;; LINE 2 (TOP) FOR D
39F  01073                      LOAD s0, 73                    ; stax 115
3A0  0111E                      LOAD s1, 1E                    ; stay 30
3A1  01282                      LOAD s2, 82                    ; endx 130
3A2  0131E                      LOAD s3, 1E                    ; endy 30
3A3  204D0                      CALL draw_line                 ;

3A4                             ;; LINE 2 (TOPRIGHT ANGLED) FOR D
3A4  01082                      LOAD s0, 82                    ; stax 130
3A5  0111E                      LOAD s1, 1E                    ; stay 30
3A6  01287                      LOAD s2, 87                    ; endx 135
3A7  01323                      LOAD s3, 23                    ; endy 35
3A8  204D0                      CALL draw_line                 ;

3A9                             ;; LINE 3 (RIGHT) FOR D
3A9  01087                      LOAD s0, 87                    ; stax 135
3AA  01123                      LOAD s1, 23                    ; stay 35
3AB  01287                      LOAD s2, 87                    ; endx 135
3AC  01337                      LOAD s3, 37                    ; endy 55
3AD  204D0                      CALL draw_line                 ;

3AE                             ;; LINE 4 (BOTTOMRIGHT ANGLED) FOR D
3AE  01073                      LOAD s0, 73                    ; stax 115
3AF  0113C                      LOAD s1, 3C                    ; stay 60
3B0  01282                      LOAD s2, 82                    ; endx 130
3B1  0133C                      LOAD s3, 3C                    ; endy 60
3B2  204D0                      CALL draw_line                 ;

3B3                             ;; LINE 1 (TOP) FOR I
3B3  01091                      LOAD s0, 91                    ; stax 145
3B4  0111E                      LOAD s1, 1E                    ; stay 30
3B5  012A5                      LOAD s2, A5                    ; endx 165
3B6  0131E                      LOAD s3, 1E                    ; endy 30
3B7  204D0                      CALL draw_line                 ;

3B8                             ;; LINE 2 (MIDDLE) FOR I
3B8  0109B                      LOAD s0, 9B                    ; stax 155
3B9  0111E                      LOAD s1, 1E                    ; stay 30
3BA  0129B                      LOAD s2, 9B                    ; endx 155
3BB  0133C                      LOAD s3, 3C                    ; endy 60
3BC  204D0                      CALL draw_line                 ;

3BD                             ;; LINE 3 (BOTTOM) FOR I
3BD  01091                      LOAD s0, 91                    ; stax 145
3BE  0113C                      LOAD s1, 3C                    ; stay 60
3BF  012A5                      LOAD s2, A5                    ; endx 165
3C0  0133C                      LOAD s3, 3C                    ; endy 60
3C1  204D0                      CALL draw_line                 ;

3C2                             ;; LINE 1 (TOP) FOR T
3C2  010AF                      LOAD s0, AF                    ; stax 175
3C3  0111E                      LOAD s1, 1E                    ; stay 30
3C4  012C3                      LOAD s2, C3                    ; endx 195
3C5  0131E                      LOAD s3, 1E                    ; endy 30
3C6  204D0                      CALL draw_line                 ;

3C7                             ;; LINE 2 (MIDDLE) FOR T
3C7  010B9                      LOAD s0, B9                    ; stax 185
3C8  0111E                      LOAD s1, 1E                    ; stay 30
3C9  012B9                      LOAD s2, B9                    ; endx 185
3CA  0133C                      LOAD s3, 3C                    ; endy 60
3CB  204D0                      CALL draw_line                 ;

3CC                             ;; LINE 1 (TOP) FOR S
3CC  010CD                      LOAD s0, CD                    ; stax 205
3CD  0111E                      LOAD s1, 1E                    ; stay 30
3CE  012E1                      LOAD s2, E1                    ; endx 225
3CF  0131E                      LOAD s3, 1E                    ; endy 30
3D0  204D0                      CALL draw_line                 ;

3D1                             ;; LINE 2 (LEFT) FOR S
3D1  010CD                      LOAD s0, CD                    ; stax 205
3D2  0111E                      LOAD s1, 1E                    ; stay 30
3D3  012CD                      LOAD s2, CD                    ; endx 205
3D4  0132D                      LOAD s3, 2D                    ; endy 45
3D5  204D0                      CALL draw_line                 ;

3D6                             ;; LINE 3 (MIDDLE) FOR S
3D6  010CD                      LOAD s0, CD                    ; stax 205
3D7  0112D                      LOAD s1, 2D                    ; stay 45
3D8  012E1                      LOAD s2, E1                    ; endx 225
3D9  0132D                      LOAD s3, 2D                    ; endy 45
3DA  204D0                      CALL draw_line                 ;

3DB                             ;; LINE 4 (RIGHT) FOR S
3DB  010E1                      LOAD s0, E1                    ; stax 225
3DC  0112D                      LOAD s1, 2D                    ; stay 45
3DD  012E1                      LOAD s2, E1                    ; endx 225
3DE  0133C                      LOAD s3, 3C                    ; endy 60
3DF  204D0                      CALL draw_line                 ;

3E0                             ;; LINE 5 (BOTTOM) FOR S
3E0  010CD                      LOAD s0, CD                    ; stax 205
3E1  0113C                      LOAD s1, 3C                    ; stay 60
3E2  012E1                      LOAD s2, E1                    ; endx 225
3E3  0133C                      LOAD s3, 3C                    ; endy 60
3E4  204D0                      CALL draw_line                 ;


3E5                             ;			  RETURN				  ;
3E5                             ;;============================================================================
3E5                             ;; Draw Helicopter - Draw Helicopter Subroutine
3E5                             ;;============================================================================

3E5            draw_helicopter:

3E5  2042A                      CALL draw_helicopter_cockpit   ; call the subroutine to draw the cockpit
3E6  2049E                      CALL draw_helicopter_blades    ; call the subroutine to draw the blades
3E7  20469                      CALL draw_helicopter_tail      ; call the subroutine to draw the tail
3E8                             ;CALL draw_helicopter_smoke         ; call the subroutine to draw the smoke

3E8  25000                      RETURN                         ; go back from drawing helicopter


3E9                             ;;============================================================================
3E9                             ;; Draw Block - Draw Block Subroutine
3E9                             ;;============================================================================

3E9                 draw_block:

3E9                             ;;============================================================================
3E9                             ;; Draws Top Line of Block
3E9                             ;;============================================================================

3E9  005E0                      LOAD s5, se                    ; load 255 into s5 (horizontal center of block)
3EA  016E1                      LOAD s6, E1                    ; load 245 into s6
3EB  1C650                      COMPARE s6, s5                 ; checking if the block is done "peaking out" from the right (initial compare: 245 ? 255)
3EC  3A3F2                      JUMP C, right_edge             ; jump to right_edge
3ED  0160A                      LOAD s6, 0A                    ; load 10 into s6
3EE  1C560                      COMPARE s5, s6                 ; comparing s5 and s6
3EF  3A3F6                      JUMP C, left_edge              ; jump to left_edge
3F0  323F6                      JUMP Z, left_edge              ; jump to left_edge
3F1  223FA                      JUMP in_middle                 ; jump to in_middle

3F2  2D500          right_edge: OUTPUT s5, stax                ; set desired stax
3F3  1950A                      SUB s5, 0A                     ;
3F4  2D502                      OUTPUT s5, endx                ; set desired stax
3F5  223FD                      JUMP finished1                 ; jump to draw_ys

3F6  2D500           left_edge: OUTPUT s5, stax                ; set desired stax
3F7  01600                      LOAD s6, 00                    ; put 255 into s5
3F8  2D602                      OUTPUT s6, endx                ; set desired stax
3F9  223FD                      JUMP finished1                 ; jump to draw_ys

3FA                  in_middle:
3FA  2D500                      OUTPUT s5, stax                ; set desired stax
3FB  1950A                      SUB s5, 0A                     ; subtract the width of block to get the other x coordinate
3FC  2D502                      OUTPUT s5, endx                ; set desired endx

3FD  2DF01           finished1: OUTPUT sf, stay                ; set desired stay
3FE  2DF03                      OUTPUT sf, endy                ; set desired endy
3FF  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

400                             ;;============================================================================
400                             ;; Draws Bottom Line of Block
400                             ;;============================================================================

400  005F0                      LOAD s5, sf                    ; load sF into s5
401  1153C                      ADD s5, 3C                     ; add 40 to s5
402  2D501                      OUTPUT s5, stay                ; set desired stay
403  2D503                      OUTPUT s5, endy                ; set desired endy
404  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

405                             ;;============================================================================
405                             ;; Draws Right Vertical Line of Block
405                             ;;============================================================================

405  2DE00                      OUTPUT se, stax                ; set desired stax
406  2DE02                      OUTPUT se, endx                ; set desired endx
407  2DF01                      OUTPUT sf, stay                ; set desired stay
408  005F0                      LOAD s5, sf                    ; load sF into s5
409  1153C                      ADD s5, 3C                     ; add 60 to y coordinate
40A  2D503                      OUTPUT s5, endy                ; set desired endy
40B  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

40C                             ;;============================================================================
40C                             ;; Draws Left Vertical Line of Block
40C                             ;;============================================================================

40C  005E0                      LOAD s5, se                    ; load sE into s5
40D  1950A                      SUB s5, 0A                     ; subtract 10 from s5
40E  2D500                      OUTPUT s5, stax                ; set desired stax
40F  2D502                      OUTPUT s5, endx                ; set desired endx
410  2DF01                      OUTPUT sf, stay                ; set desired stay
411  005F0                      LOAD s5, sf                    ; load sF into s5
412  1153C                      ADD s5, 3C                     ; add 60 to y coordinate
413  2D503                      OUTPUT s5, endy                ; set desired endy
414  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)
415  25000                      RETURN                         ; finished with draw_block subroutine



416                             ;;============================================================================
416                             ;; Random Block Location - Random Block Location Subroutine
416                             ;;============================================================================

416        random_block_location:
416  1DE00                      COMPARE se, 00                 ; is it time to create a new variable?
417  3241C                      JUMP Z, new_random             ; jump to new random creator
418  1DEFF                      COMPARE se, FF                 ; is it time to create a new variable?
419  3241C                      JUMP Z, new_random             ; jump to new random creator
41A  3641B                      JUMP NZ, skip_everything       ; goes back

41B  25000     skip_everything: RETURN                         ; returns back (no new rand. number)

41C  09507          new_random: INPUT s5, prng                 ; create to new random number
41D  1D50F                      COMPARE s5, 0F                 ; check if it's in range
41E  3E420                      JUMP NC, check_other_bound_range ; check lower bound of map
41F  3A41C                      JUMP C, new_random             ; get new variable

420        check_other_bound_range:
420  1D5B4                      COMPARE s5, B4                 ; compare s5 to 180
421  3E41C                      JUMP NC, new_random            ; get a new random number
422  00F50                      LOAD sf, s5                    ; a new y coordinate generated
423  25000                      RETURN                         ; get out of subroutine

424                             ;;============================================================================
424                             ;; Move Helicopter Up - Move Helicopter Up Subroutine
424                             ;;============================================================================

424               move_heli_up:
424  1DC15                      COMPARE sc, 15                 ; check if the helicopter is colliding with top wall
425  36428                      JUMP NZ, decrement             ; if not colliding, then move helicopter appropriately
426  3E428                      JUMP NC, decrement             ; necessary as well
427  25000                      RETURN                         ; do not increment if colliding with top wall
428                  decrement:
428  19C04                      SUB sc, 04                     ; move the helicopter up
429  25000                      RETURN                         ; get out of subroutine

42A                             ;;============================================================================
42A                             ;; Draw Helicopter Cockpit - Draw Helicopter Cockpit Subroutine
42A                             ;;============================================================================

42A        draw_helicopter_cockpit:

42A                             ;;============================================================================
42A                             ;; Draws Cockpit of Helicopter (Line 1a)
42A                             ;;============================================================================

42A                             ;; STARTING POINT
42A  01564                      LOAD s5, 64                    ; load 100 into s5
42B  2D500                      OUTPUT s5, stax                ; set desired stax
42C  006C0                      LOAD s6, sc                    ; load sC into s5
42D  2D601                      OUTPUT s6, stay                ; set desired stay

42E                             ;; ENDING POINT
42E  19501                      SUB s5, 01                     ; subtract 7 from s5
42F  2D502                      OUTPUT s5, endx                ; set desired endx
430  19603                      SUB s6, 03                     ; go up by 5
431  2D603                      OUTPUT s6, endy                ; set desired endy
432  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

433                             ;;============================================================================
433                             ;; Draws Cockpit of Helicopter (Line 1b)
433                             ;;============================================================================

433                             ;; STARTING POINT
433  01564                      LOAD s5, 64                    ; load 100 into s5
434  19501                      SUB s5, 01                     ; subtract 7 from s5
435  2D500                      OUTPUT s5, stax                ; set desired stax
436  006C0                      LOAD s6, sc                    ; load sC into s5
437  19603                      SUB s6, 03                     ; go up by 5
438  2D601                      OUTPUT s6, stay                ; set desired stay

439                             ;; ENDING POINT
439  19504                      SUB s5, 04                     ; subtract 7 from s5
43A  2D502                      OUTPUT s5, endx                ; set desired endx
43B  19602                      SUB s6, 02                     ; go up by 5
43C  2D603                      OUTPUT s6, endy                ; set desired endy
43D  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)


43E                             ;;============================================================================
43E                             ;; Draws Cockpit of Helicopter (Line 2a)
43E                             ;;============================================================================

43E                             ;; STARTING POINT
43E  01564                      LOAD s5, 64                    ; load 100 into s5
43F  2D500                      OUTPUT s5, stax                ; set desired stax
440  006C0                      LOAD s6, sc                    ; load sC into s5
441  2D601                      OUTPUT s6, stay                ; set desired stay

442                             ;; ENDING POINT
442  19501                      SUB s5, 01                     ; subtract 1 from s5
443  2D502                      OUTPUT s5, endx                ; set desired endx
444  11603                      ADD s6, 03                     ; go down by 3
445  2D603                      OUTPUT s6, endy                ; set desired endy
446  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

447                             ;;============================================================================
447                             ;; Draws Cockpit of Helicopter (Line 2b)
447                             ;;============================================================================

447                             ;; STARTING POINT
447  01564                      LOAD s5, 64                    ; load 100 into s5
448  19501                      SUB s5, 01                     ; subtract 1 from s5
449  2D500                      OUTPUT s5, stax                ; set desired stax
44A  006C0                      LOAD s6, sc                    ; load sC into s5
44B  11603                      ADD s6, 03                     ; go down by 3
44C  2D601                      OUTPUT s6, stay                ; set desired stay

44D                             ;; ENDING POINT
44D  19504                      SUB s5, 04                     ; subtract 7 from s5
44E  2D502                      OUTPUT s5, endx                ; set desired endx
44F  11602                      ADD s6, 02                     ; go down by 5
450  2D603                      OUTPUT s6, endy                ; set desired endy
451  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

452                             ;;============================================================================
452                             ;; Draws Cockpit of Helicopter (Line 3)
452                             ;;============================================================================

452                             ;; STARTING POINT
452  01564                      LOAD s5, 64                    ; load 100 into s5
453  19505                      SUB s5, 05                     ; load 7 into s5
454  2D500                      OUTPUT s5, stax                ; set desired stax
455  006C0                      LOAD s6, sc                    ; load sC into s5
456  19605                      SUB s6, 05                     ; go up by 5 using subtraction
457  2D601                      OUTPUT s6, stay                ; set desired stay

458                             ;; ENDING POINT
458  19507                      SUB s5, 07                     ; subtract 5 from s5
459  2D502                      OUTPUT s5, endx                ; set desired endx
45A  11605                      ADD s6, 05                     ; go down by 5
45B  2D603                      OUTPUT s6, endy                ; set desired endy
45C  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

45D                             ;;============================================================================
45D                             ;; Draws Cockpit of Helicopter (Line 4)
45D                             ;;============================================================================

45D                             ;; STARTING POINT
45D  01564                      LOAD s5, 64                    ; load 100 into s5
45E  19505                      SUB s5, 05                     ; load 7 into s5
45F  2D500                      OUTPUT s5, stax                ; set desired stax
460  006C0                      LOAD s6, sc                    ; load sC into s5
461  11605                      ADD s6, 05                     ; go down by 5 using addition
462  2D601                      OUTPUT s6, stay                ; set desired stay

463                             ;; ENDING POINT
463  19507                      SUB s5, 07                     ; subtract 5 from s5
464  2D502                      OUTPUT s5, endx                ; set desired endx
465  19605                      SUB s6, 05                     ; go back up by 5
466  2D603                      OUTPUT s6, endy                ; set desired endy
467  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

468  25000                      RETURN                         ; go back from subroutine

469                             ;;============================================================================
469                             ;; Draw Helicopter Tail - Draw Helicopter Tail Subroutine
469                             ;;============================================================================

469        draw_helicopter_tail:

469                             ;;============================================================================
469                             ;; Draws Tail of Helicopter (Line 1)
469                             ;;============================================================================

469                             ;; STARTING POINT
469  01564                      LOAD s5, 64                    ; load 100 into s5
46A  1950A                      SUB s5, 0A                     ; subtract 0xA from s5
46B  2D500                      OUTPUT s5, stax                ; set desired stax
46C  006C0                      LOAD s6, sc                    ; load sC into s5
46D  19602                      SUB s6, 02                     ; subtract 2 from s6
46E  2D601                      OUTPUT s6, stay                ; set desired stay

46F                             ;; ENDING POINT
46F  19507                      SUB s5, 07                     ; subtract 7 from s5
470  2D502                      OUTPUT s5, endx                ; set desired endx
471  2D603                      OUTPUT s6, endy                ; set desired endy
472  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

473                             ;;============================================================================
473                             ;; Draws Tail of Helicopter (Line 2)
473                             ;;============================================================================

473                             ;; STARTING POINT
473  01564                      LOAD s5, 64                    ; load 100 into s5
474  1950C                      SUB s5, 0C                     ; subtract 0xC from s5
475  2D500                      OUTPUT s5, stax                ; set desired stax
476  006C0                      LOAD s6, sc                    ; load sC into s5
477  2D601                      OUTPUT s6, stay                ; set desired stay

478                             ;; ENDING POINT
478  19508                      SUB s5, 08                     ; subtract 7 from s5
479  2D502                      OUTPUT s5, endx                ; set desired endx
47A  2D603                      OUTPUT s6, endy                ; set desired endy
47B  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

47C                             ;;============================================================================
47C                             ;; Draws Tail of Helicopter (Line 3)
47C                             ;;============================================================================

47C                             ;; STARTING POINT
47C  01564                      LOAD s5, 64                    ; load 100 into s5
47D  1950A                      SUB s5, 0A                     ; subtract 0x0A from s5
47E  19508                      SUB s5, 08                     ; subtract 0x10 from s5
47F  2D500                      OUTPUT s5, stax                ; set desired stax
480  006C0                      LOAD s6, sc                    ; load sC into s5
481  19602                      SUB s6, 02                     ; subtract 2 from s6
482  2D601                      OUTPUT s6, stay                ; set desired stay

483                             ;; ENDING POINT
483  19502                      SUB s5, 02                     ; subtract 2 from s5
484  2D502                      OUTPUT s5, endx                ; set desired endx
485  19602                      SUB s6, 02                     ; subtract 2 from s6
486  2D603                      OUTPUT s6, endy                ; set desired endy
487  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

488                             ;;============================================================================
488                             ;; Draws Tail of Helicopter (Line 4)
488                             ;;============================================================================

488                             ;; STARTING POINT
488  01564                      LOAD s5, 64                    ; load 100 into s5
489  1950C                      SUB s5, 0C                     ; subtract 0x0C from s5
48A  19509                      SUB s5, 09                     ; subtract 0x09 from s5
48B  2D500                      OUTPUT s5, stax                ; set desired stax
48C  006C0                      LOAD s6, sc                    ; load sC into s5
48D  2D601                      OUTPUT s6, stay                ; set desired stay

48E                             ;; ENDING POINT
48E                             ;SUB s5, 01                          ; subtract 2 from s5
48E  2D502                      OUTPUT s5, endx                ; set desired endx
48F  11601                      ADD s6, 01                     ; add 1 to s6
490  2D603                      OUTPUT s6, endy                ; set desired endy
491  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

492                             ;;============================================================================
492                             ;; Draws Tail of Helicopter (Line 5)
492                             ;;============================================================================

492                             ;; STARTING POINT
492  01564                      LOAD s5, 64                    ; load 100 into s5
493  1950A                      SUB s5, 0A                     ; subtract 0x0A from s5
494  1950A                      SUB s5, 0A                     ; subtract 0x0A from s5
495  2D500                      OUTPUT s5, stax                ; set desired stax
496  006C0                      LOAD s6, sc                    ; load sC into s5
497  19604                      SUB s6, 04                     ; subtract 4 from s6
498  2D601                      OUTPUT s6, stay                ; set desired stay

499                             ;; ENDING POINT
499  2D502                      OUTPUT s5, endx                ; set desired endx
49A  11605                      ADD s6, 05                     ; add 1 to s6
49B  2D603                      OUTPUT s6, endy                ; set desired endy
49C  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

49D  25000                      RETURN                         ; go back from subroutine

49E                             ;;============================================================================
49E                             ;; Draw Helicopter Blades - Draw Helicopter Blades Subroutine
49E                             ;;============================================================================

49E        draw_helicopter_blades:

49E                             ;;============================================================================
49E                             ;; Draws Blades of Helicopter (Line 1)
49E                             ;;============================================================================

49E                             ;; STARTING POINT
49E  01564                      LOAD s5, 64                    ; load 100 into s5
49F  19505                      SUB s5, 05                     ; subtract 0xA from s5
4A0  2D500                      OUTPUT s5, stax                ; set desired stax
4A1  006C0                      LOAD s6, sc                    ; load sC into s5
4A2  19605                      SUB s6, 05                     ; subtract 2 from s6
4A3  2D601                      OUTPUT s6, stay                ; set desired stay

4A4                             ;; ENDING POINT
4A4  2D502                      OUTPUT s5, endx                ; set desired endx
4A5  19602                      SUB s6, 02                     ; subtract 2 from s6
4A6  2D603                      OUTPUT s6, endy                ; set desired endy
4A7  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

4A8                             ;;============================================================================
4A8                             ;; Draws Blades of Helicopter (Line 2)
4A8                             ;;============================================================================

4A8                             ;; STARTING POINT
4A8  01564                      LOAD s5, 64                    ; load 100 into s5
4A9  2D500                      OUTPUT s5, stax                ; set desired stax
4AA  006C0                      LOAD s6, sc                    ; load sC into s5
4AB  19607                      SUB s6, 07                     ; subtract 2 from s6
4AC  2D601                      OUTPUT s6, stay                ; set desired stay

4AD                             ;; ENDING POINT
4AD  1950A                      SUB s5, 0A                     ; subtract 10 from s5
4AE  2D502                      OUTPUT s5, endx                ; set desired endx
4AF  2D603                      OUTPUT s6, endy                ; set desired endy
4B0  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

4B1  25000                      RETURN                         ; go back from subroutine

4B2                             ;;============================================================================
4B2                             ;; Draw Helicopter Smoke - Draw Helicopter Smoke Subroutine
4B2                             ;;============================================================================

4B2        draw_helicopter_smoke:

4B2                             ;;============================================================================
4B2                             ;; Draws Smoke of Helicopter (Line 1)
4B2                             ;;============================================================================

4B2                             ;; Start Point
4B2  01564                      LOAD s5, 64                    ; load 100 into s5
4B3  19528                      SUB s5, 28                     ; position starting smoke right point of line 1
4B4  2D500                      OUTPUT s5, stax                ; output to starting x position of line 1

4B5  006C0                      LOAD s6, sc                    ; load helicopter smoke vertical position for line 1
4B6  2D601                      OUTPUT s6, stay                ; output to starting y position of line 1
4B7                             ;;

4B7                             ;; End Point
4B7  19504                      SUB s5, 04                     ; position starting smoke left point of line 1
4B8  2D502                      OUTPUT s5, endx                ; output to starting y position of line 1

4B9  2D603                      OUTPUT s6, endy                ; output to ending y position of line 1, matching helicopter
4BA  204DA                      CALL old_draw_line             ;draws a line (careful: this subroutine overwrites s5)
4BB                             ;;

4BB                             ;;============================================================================
4BB                             ;; Draws Smoke of Helicopter (Line 2)
4BB                             ;;============================================================================

4BB                             ;; Start Point
4BB  01564                      LOAD s5, 64                    ; load 100 into s5
4BC  19534                      SUB s5, 34                     ; position starting smoke right point of line 2
4BD  2D500                      OUTPUT s5, stax                ; output to starting x position of line 2

4BE  006C0                      LOAD s6, sc                    ; load starting smoke vertical position for line 2
4BF  11604                      ADD s6, 04                     ; add 4 to s6 (shift down by 4)
4C0  2D601                      OUTPUT s6, stay                ; output to starting y position of line 2
4C1                             ;;

4C1                             ;; End Point
4C1  19504                      SUB s5, 04                     ; subtract s5 by 4 for length of line
4C2  2D502                      OUTPUT s5, endx                ; output to endx

4C3  2D603                      OUTPUT s6, endy                ; outputs vertical locaton of smoke line 2
4C4  204DA                      CALL old_draw_line             ;draws a line (careful: this subroutine overwrites s5)
4C5                             ;;

4C5                             ;;============================================================================
4C5                             ;; Draws Smoke of Helicopter (Line 3)
4C5                             ;;============================================================================

4C5                             ;; Start Point
4C5  01564                      LOAD s5, 64                    ; load 100 into s5
4C6  19540                      SUB s5, 40                     ; position starting smoke right point of line 3
4C7  2D500                      OUTPUT s5, stax                ; output to starting x position of line 3

4C8  006C0                      LOAD s6, sc                    ; load starting smoke vertical position for line 3
4C9  19604                      SUB s6, 04                     ; add 4 to s6 (shift down by 4)
4CA  2D601                      OUTPUT s6, stay                ; output to starting y position of line 3
4CB                             ;;

4CB                             ;; End Point
4CB  19504                      SUB s5, 04                     ; subtract s5 by 4 for length of line
4CC  2D502                      OUTPUT s5, endx                ; output to endx

4CD  2D603                      OUTPUT s6, endy                ; output same y position of line 3
4CE  204DA                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)
4CF                             ;;

4CF  25000                      RETURN                         ; go back to subroutine



4D0                             ;;============================================================================
4D0                             ;; Draw Line - Draw Line Subroutine
4D0                             ;;============================================================================

4D0  2D000           draw_line: OUTPUT s0, stax                ; write stax
4D1  2D101                      OUTPUT s1, stay                ; write stay
4D2  2D202                      OUTPUT s2, endx                ; write endx
4D3  2D303                      OUTPUT s3, endy                ; write endy
4D4  01501                      LOAD s5, busy_go               ; load go command
4D5  2D504                      OUTPUT s5, busy                ; send go command
4D6  09504                wait: INPUT s5, busy                 ; read busy status
4D7  1D501                      COMPARE s5, busy_go            ; check busy status
4D8  324D6                      JUMP Z, wait                   ; if busy, wait more
4D9  25000                      RETURN                         ; leave line drawing subroutine

4DA                             ;;============================================================================
4DA                             ;; Old Draw Line - Old Draw Line Subroutine (WILL DELETE LATER)
4DA                             ;;============================================================================

4DA              old_draw_line:
4DA  01501                      LOAD s5, busy_go               ; load go command
4DB  2D504                      OUTPUT s5, busy                ; send go command
4DC  09504               wait0: INPUT s5, busy                 ; read busy status
4DD  1D501                      COMPARE s5, busy_go            ; check busy status
4DE  324DC                      JUMP Z, wait0                  ; if busy, wait more
4DF  25000                      RETURN                         ; leave line drawing subroutine

4E0                             ;;============================================================================
4E0                             ;; Check Collisions - Check Collisions Subroutine
4E0                             ;;============================================================================

4E0            check_collision:
4E0                             ;;============================================================================
4E0                             ;; Check Collisions with Map (top wall)
4E0                             ;;============================================================================
4E0  01560                      LOAD s5, 60                    ; position of heli/wall collision
4E1  0180F                      LOAD s8, 0F                    ; top wall vertical coordinate (15)
4E2  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
4E3  1960A                      SUB s6, 0A                     ; the helicopter's blades 10 pixels higher
4E4  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
4E5  1C860                      COMPARE s8, s6                 ; check if the two intersect
4E6  3254A                      JUMP Z, collision_occurred     ; jump to collision occurred
4E7  3E54A                      JUMP NC, collision_occurred    ; jump to collision occurred (necessary)

4E8                             ;;============================================================================
4E8                             ;; Check Collisions with Map (bottom wall)
4E8                             ;;============================================================================
4E8  018F0                      LOAD s8, F0                    ; bottom wall vertical coordinate (240)
4E9  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
4EA  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
4EB  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
4EC  1C860                      COMPARE s8, s6                 ; check if the two intersect
4ED  3254A                      JUMP Z, collision_occurred     ; jump to collision occurred

4EE  018F1                      LOAD s8, F1                    ; bottom wall vertical coordinate (241)
4EF  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
4F0  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
4F1  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
4F2  1C860                      COMPARE s8, s6                 ; check if the two intersect
4F3  3254A                      JUMP Z, collision_occurred     ; jump to collision occurred

4F4  018F2                      LOAD s8, F2                    ; bottom wall vertical coordinate (242)
4F5  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
4F6  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
4F7  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
4F8  1C860                      COMPARE s8, s6                 ; check if the two intersect
4F9  3254A                      JUMP Z, collision_occurred     ; jump to collision occurred

4FA  018F3                      LOAD s8, F3                    ; bottom wall vertical coordinate (243)
4FB  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
4FC  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
4FD  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
4FE  1C860                      COMPARE s8, s6                 ; check if the two intersect
4FF  3254A                      JUMP Z, collision_occurred     ; jump to collision occurred

500  018F4                      LOAD s8, F4                    ; bottom wall vertical coordinate (244)
501  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
502  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
503  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
504  1C860                      COMPARE s8, s6                 ; check if the two intersect
505  3254A                      JUMP Z, collision_occurred     ; jump to collision occurred

506  018F5                      LOAD s8, F5                    ; bottom wall vertical coordinate (245)
507  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
508  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
509  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
50A  1C860                      COMPARE s8, s6                 ; check if the two intersect
50B  3254A                      JUMP Z, collision_occurred     ; jump to collision occurred

50C  018F6                      LOAD s8, F6                    ; bottom wall vertical coordinate (246)
50D  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
50E  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
50F  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
510  1C860                      COMPARE s8, s6                 ; check if the two intersect
511  3254A                      JUMP Z, collision_occurred     ; jump to collision occurred

512                             ;;============================================================================
512                             ;; Check Collisions with Block
512                             ;;============================================================================

512  005E0                      LOAD s5, se                    ; get current horizontal position of block
513  1950A                      SUB s5, 0A                     ; actual block is 10 pixels back
514  1D564                      COMPARE s5, 64                 ; check if s5 coincides with heli (horizontal check)
515  3252B                      JUMP Z, check_vertical         ; jump to check vertical positioning
516  1D563                      COMPARE s5, 63                 ; check if s5 coincides with heli (horizontal check)
517  3252B                      JUMP Z, check_vertical         ; jump to check vertical positioning
518  1D562                      COMPARE s5, 62                 ; check if s5 coincides with heli (horizontal check)
519  3252B                      JUMP Z, check_vertical         ; jump to check vertical positioning
51A  1D561                      COMPARE s5, 61                 ; check if s5 coincides with heli (horizontal check)
51B  3252B                      JUMP Z, check_vertical         ; jump to check vertical positioning
51C  1D560                      COMPARE s5, 60                 ; check if s5 coincides with heli (horizontal check)
51D  3252B                      JUMP Z, check_vertical         ; jump to check vertical positioning
51E  1D559                      COMPARE s5, 59                 ; check if s5 coincides with heli (horizontal check)
51F  3252B                      JUMP Z, check_vertical         ; jump to check vertical positioning
520  1D558                      COMPARE s5, 58                 ; check if s5 coincides with heli (horizontal check)
521  3252B                      JUMP Z, check_vertical         ; jump to check vertical positioning
522  1D557                      COMPARE s5, 57                 ; check if s5 coincides with heli (horizontal check)
523  3252B                      JUMP Z, check_vertical         ; jump to check vertical positioning
524  1D556                      COMPARE s5, 56                 ; check if s5 coincides with heli (horizontal check)
525  3252B                      JUMP Z, check_vertical         ; jump to check vertical positioning
526  1D555                      COMPARE s5, 55                 ; check if s5 coincides with heli (horizontal check)
527  3252B                      JUMP Z, check_vertical         ; jump to check vertical positioning
528  1D554                      COMPARE s5, 54                 ; check if s5 coincides with heli (horizontal check)
529  3252B                      JUMP Z, check_vertical         ; jump to check vertical positioning
52A  36535                      JUMP NZ, no_collision          ; jump to no_collision routine

52B             check_vertical:
52B  006F0                      LOAD s6, sf                    ; get current vertical position of block
52C  007C0                      LOAD s7, sc                    ; load helicopter front position
52D  1C760                loop: COMPARE s7, s6                 ; compare s7 and s6
52E  3254A                      JUMP Z, collision_occurred     ; jump to collision_occured
52F  11601                      ADD s6, 01                     ; add one to s6
530  008F0                      LOAD s8, sf                    ; load original value for reference only
531  1183C                      ADD s8, 3c                     ; add 60 to s8
532  1C680                      COMPARE s6, s8                 ; compare s6 to bottom of block (s8)
533  32535                      JUMP Z, no_collision           ; jump to no_collision routine
534  3652D                      JUMP NZ, loop                  ; keep looping

535  19E01        no_collision: SUB se, 01                     ; move block forwards
536  1DA01                      COMPARE sa, 01                 ; check if score is above 500
537  3C53B                      CALL NC, stage2_check          ; call second stage check

538  11C02                      ADD sc, 02                     ; increment sC
539  20553                      CALL distance                  ; used for keeping the score (increments distance)
53A  25000                      RETURN                         ; leave, since no collisions occurred

53B               stage2_check:
53B  19E01                      SUB se, 01                     ; subtract 1 from sE
53C  1DA05                      COMPARE sa, 05                 ; check if score is above 1000
53D  3C540                      CALL NC, stage3_check          ; call speed2
53E  25000                      RETURN                         ; leave routine

53F                     speed2:
53F                             ;SUB sE, 01                          ; decrement by 2
53F  25000                      RETURN                         ; go back

540               stage3_check:
540  19E01                      SUB se, 01                     ; decrement by 3
541  1DA08                      COMPARE sa, 08                 ; check if score is above 1000
542  3C544                      CALL NC, stage4_check          ; call speed2
543  25000                      RETURN                         ; go back

544               stage4_check:
544  19E01                      SUB se, 01                     ; decrement by 3
545  1DA10                      COMPARE sa, 10                 ; check if score is above 1000
546  3C548                      CALL NC, stage5_check          ; call speed2
547  25000                      RETURN

548               stage5_check:
548  19E01                      SUB se, 01                     ; decrement by 3
549  25000                      RETURN

54A         collision_occurred:
54A  2D500                      OUTPUT s5, stax                ; set desired stax
54B  2D701                      OUTPUT s7, stay                ; set desired stay
54C  09807                      INPUT s8, prng                 ; load random endx
54D  2D802                      OUTPUT s8, endx                ; set random endx
54E  09807                      INPUT s8, prng                 ; load random endy
54F  2D803                      OUTPUT s8, endy                ; set random endy
550  204D0                      CALL draw_line                 ; draw random line

551  01902                      LOAD s9, GAMEOVER_STATE        ; should go to gameover state instead
552  25000                      RETURN                         ; return from routine without any increments

553                             ;;============================================================================
553                             ;; Distance - Distance Subroutine
553                             ;;============================================================================

553  2DB0A            distance: OUTPUT sb, qssd_lo             ; put distance value to qssd
554  1DBFF                      COMPARE sb, FF                 ; check if max (FF) was reached
555  32558                      JUMP Z, distance2              ; jump to distance2
556  11B01                      ADD sb, one                    ; increment distance value
557  25000                      RETURN                         ; finished with distance subroutine

558  11A01           distance2: ADD sa, one                    ; add one to the next degree
559  01B00                      LOAD sb, zero                  ; reset sB
55A  2DB0A                      OUTPUT sb, qssd_lo             ; put distance value to qssd
55B  2DA0B                      OUTPUT sa, qssd_hi             ; put distance value to qssd
55C  25000                      RETURN                         ; finished with distance subroutine

7FF                             ;;============================================================================
7FF                             ;; Interrupt - Vector.
7FF                             ;;============================================================================

7FF                             ADDRESS 7FF                    ; must be located here
7FF  22014          isr_vector: JUMP isr                       ; always jump to isr

800                             ;;============================================================================
800                             ;;
800                             ;;============================================================================



PSM files that have been assembled
----------------------------------
    /home/adnan/Documents/School/EE178/fpga_video_game/latest_fpga_video_game/software/software.psm


List of defined constants
-------------------------
   CONSTANT name      Value  Source PSM file
   -------------      -----  ---------------
   BEL                07
   BS                 08
   CR                 0D
   CREDITS_STATE      03     software.psm
   DCS                90
   DEL                7F
   ESC                1B
   GAMEOVER_STATE     02     software.psm
   HT                 09
   LF                 0A
   NUL                00
   PLAY_STATE         01     software.psm
   ST                 9C
   START_STATE        00     software.psm
   VT                 0B
   beam               05     software.psm
   beam_hi            0f     software.psm
   beam_lo            03     software.psm
   beam_md            07     software.psm
   blue               11     software.psm
   busy               04     software.psm
   busy_go            01     software.psm
   buttons            0f     software.psm
   buttons_ct         10     software.psm
   buttons_dn         04     software.psm
   buttons_lf         02     software.psm
   buttons_rt         01     software.psm
   buttons_up         08     software.psm
   datestamp_day      02
   datestamp_month    0C
   datestamp_year     0F
   endx               02     software.psm
   endy               03     software.psm
   green              11     software.psm
   leds_hi            09     software.psm
   leds_lo            08     software.psm
   mode               06     software.psm
   mode_clr           01     software.psm
   mode_exp           03     software.psm
   mode_hld           00     software.psm
   mode_lin           02     software.psm
   one                01     software.psm
   prng               07     software.psm
   qssd_dp            0c     software.psm
   qssd_hi            0b     software.psm
   qssd_lo            0a     software.psm
   red                10     software.psm
   start_menu_1       00     software.psm
   start_menu_2       3C     software.psm
   start_menu_3       78     software.psm
   stax               00     software.psm
   stay               01     software.psm
   switches_hi        0e     software.psm
   switches_lo        0d     software.psm
   timestamp_hours    11
   timestamp_minutes  33
   timestamp_seconds  17
   zero               00     software.psm


  No tables defined


List of text strings
--------------------
   STRING name  Value          Source PSM file
   -----------  -----          ---------------
   datestamp$   "02 Dec 2015"
   timestamp$   "17:51:23"


List of line labels
-------------------
    Label                    Addr  Source PSM file
 --------                    ----  ---------------
 *  boot                     000   software.psm
    check_collision          4E0   software.psm
    check_other_bound_range  420   software.psm
    check_vertical           52B   software.psm
    collision_occurred       54A   software.psm
    credits                  02F   software.psm
    decrement                428   software.psm
    distance                 553   software.psm
    distance2                558   software.psm
    draw_block               3E9   software.psm
    draw_credits             34F   software.psm
    draw_gameover            2A9   software.psm
    draw_helicopter          3E5   software.psm
    draw_helicopter_blades   49E   software.psm
    draw_helicopter_cockpit  42A   software.psm
 *  draw_helicopter_smoke    4B2   software.psm
    draw_helicopter_tail     469   software.psm
    draw_line                4D0   software.psm
    enter_credit_state       039   software.psm
    enter_play_state         029   software.psm
    enter_play_state2        04E   software.psm
    finished1                3FD   software.psm
    gameover                 03E   software.psm
    in_middle                3FA   software.psm
    isr                      014   software.psm
 *  isr_vector               7FF   software.psm
    left_edge                3F6   software.psm
    loop                     52D   software.psm
    main                     013   software.psm
    map                      063   software.psm
    move_heli_up             424   software.psm
    new_random               41C   software.psm
    no_collision             535   software.psm
    old_draw_line            4DA   software.psm
    play                     059   software.psm
    random_block_location    416   software.psm
    right_edge               3F2   software.psm
    skip_everything          41B   software.psm
 *  speed2                   53F   software.psm
    stage2_check             53B   software.psm
    stage3_check             540   software.psm
    stage4_check             544   software.psm
    stage5_check             548   software.psm
    start                    01D   software.psm
    start_screen             06E   software.psm
    stay_in_credit_state     03D   software.psm
    stay_in_gameover_state   058   software.psm
    stay_in_start_state      02E   software.psm
    wait                     4D6   software.psm
    wait0                    4DC   software.psm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          25
   ADDCY        -
   AND          -
   CALL         210
   CALL@        -
   COMPARE      45
   COMPARECY    -
   DISABLE      -
   ENABLE       1
   FETCH        -
   HWBUILD      -
   INPUT        13
   JUMP         54
   JUMP@        -
   LOAD         740
   LOAD&RETURN  -
   OR           -
   OUTPUT       196
   OUTPUTK      -
   REGBANK      7
   RETURN       29
   RETURNI      1
   RL           -
   RR           -
   SL0          -
   SL1          -
   SLA          -
   SLX          -
   SR0          -
   SR1          -
   SRA          -
   SRX          -
   STAR         -
   STORE        -
   SUB          53
   SUBCY        -
   TEST         -
   TESTCY       -
   XOR          -
