Open Picoblaze Assembler log for program "software.psm"
Generated by opbasm v 1.2
  Assembled on 2015-11-30T21:23:33
  Picoblaze-6 mode

  Last occupied address: 7FF hex
  Nominal program memory size: 2K (2048)  address(10:0)
  Actual memory size: 4096
  Occupied memory locations: 875
  Memory locations available: 3221
  Scratchpad size: 256


Assembly listing
----------------
000                             ;;============================================================================
000                             ;; File: software.psm
000                             ;; This is the PicoBlaze program for EE178 Lab #8.
000                             ;;============================================================================

000                             ;;============================================================================
000                             ;; Port address declarations.
000                             ;;============================================================================

000                             CONSTANT stax, 00              ; port for 8-bit start-x
000                             CONSTANT stay, 01              ; port for 8-bit start-y
000                             CONSTANT endx, 02              ; port for 8-bit end-x
000                             CONSTANT endy, 03              ; port for 8-bit end-y
000                             CONSTANT busy, 04              ; port for 8-bit busy
000                             CONSTANT beam, 05              ; port for 8-bit beam
000                             CONSTANT mode, 06              ; port for 8-bit mode
000                             CONSTANT prng, 07              ; port for 8-bit prng
000                             CONSTANT leds_lo, 08           ; port for 8-bit led data out
000                             CONSTANT leds_hi, 09           ; port for 8-bit led data out
000                             CONSTANT qssd_lo, 0a           ; port for 8-bit qssd data out
000                             CONSTANT qssd_hi, 0b           ; port for 8-bit qssd data out
000                             CONSTANT qssd_dp, 0c           ; port for 8-bit qssd data out
000                             CONSTANT switches_lo, 0d       ; port for 8-bit switch input
000                             CONSTANT switches_hi, 0e       ; port for 8-bit switch input
000                             CONSTANT buttons, 0f           ; port for 8-bit button input

000                             CONSTANT zero, 00              ; zero
000                             CONSTANT one, 01               ; one

000                             CONSTANT busy_go, 01           ; go command and busy status

000                             CONSTANT beam_hi, 0f           ; beam high intensity
000                             CONSTANT beam_md, 07           ; beam med intensity
000                             CONSTANT beam_lo, 03           ; beam low intensity

000                             CONSTANT mode_hld, 00          ; mode hold framebuffer
000                             CONSTANT mode_clr, 01          ; mode clear framebuffer
000                             CONSTANT mode_lin, 02          ; mode linear decay
000                             CONSTANT mode_exp, 03          ; mode exponential decay

000                             CONSTANT buttons_ct, 10        ; center
000                             CONSTANT buttons_up, 08        ; up
000                             CONSTANT buttons_dn, 04        ; down
000                             CONSTANT buttons_lf, 02        ; left
000                             CONSTANT buttons_rt, 01        ; right

000                             ;;============================================================================
000                             ;; Macro State declarations
000                             ;;============================================================================

000                             CONSTANT START_STATE, 00       ; start screen state
000                             CONSTANT PLAY_STATE, 01        ; play state
000                             CONSTANT GAMEOVER_STATE, 02    ; game over screen state
000                             CONSTANT CREDITS_STATE, 03     ; credits screen state (not used for now)

000                             ;;============================================================================
000                             ;; Boot.
000                             ;;============================================================================

000  01000                boot: LOAD s0, zero                  ; initialize
001  01100                      LOAD s1, zero                  ; initialize
002  01200                      LOAD s2, zero                  ; initialize
003  01300                      LOAD s3, zero                  ; initialize
004  01400                      LOAD s4, zero                  ; initialize
005  01900                      LOAD s9, START_STATE           ; initial state is to enter start screen
006  01A00                      LOAD sa, 00                    ; initial distance (score)
007  01B00                      LOAD sb, 00                    ; initial distance (score)
008  01C80                      LOAD sc, 80                    ; starting helicopter position
009  01D05                      LOAD sd, 05                    ; initialize (needed later)
00A  01EFF                      LOAD se, FF                    ; load 255 into sE (horizontal coordinate of block)
00B  01F62                      LOAD sf, 62                    ; load 108 into sF (vertical coordinate of block)
00C  01503                      LOAD s5, mode_exp              ; load desired mode
00D  2D506                      OUTPUT s5, mode                ; set desired mode
00E  0150F                      LOAD s5, beam_hi               ; load desired beam
00F  2D505                      OUTPUT s5, beam                ; set desired beam
010  28001                      ENABLE INTERRUPT               ; enable interrupts

011                             ;;============================================================================
011                             ;; Main.
011                             ;;============================================================================

011                       main:
011  22011                      JUMP main                      ; go back and repeat

012                             ;;============================================================================
012                             ;; Interrupt - Service Routine.
012                             ;;============================================================================

012  1D900                 isr: COMPARE s9, START_STATE        ; check if in the start state
013  30019                      CALL Z, start                  ; call the start screen state
014  1D901                      COMPARE s9, PLAY_STATE         ; check if in the play state
015  30032                      CALL Z, play                   ; call play subroutine
016  1D902                      COMPARE s9, GAMEOVER_STATE     ; check if in the gameover state
017  30022                      CALL Z, gameover               ; call the gameover subroutine

018  29001                      RETURNI ENABLE                 ; done with isr

019                             ;;============================================================================
019                             ;; Start - Start Subroutine
019                             ;;============================================================================

019  0950F               start: INPUT s5, buttons              ; get center button values
01A  20047                      CALL start_screen              ; draw the map using map subroutine

01B  0950F                      INPUT s5, buttons              ; get button values
01C  1D510                      COMPARE s5, buttons_ct         ; check if center button is pressed
01D  3201F                      JUMP Z, enter_play_state       ; jump to enter_play_state
01E  36021                      JUMP NZ, stay_in_start_state   ; remain in current state with a jump to stay_in_start_state

01F           enter_play_state:
01F  01901                      LOAD s9, PLAY_STATE            ; load play_state and enter play mode
020  25000                      RETURN                         ; return from start subroutine

021        stay_in_start_state:
021  25000                      RETURN                         ; return from start subroutine

022                             ;;============================================================================
022                             ;; Game Over - Game Over Subroutine
022                             ;;============================================================================

022  0950F            gameover: INPUT s5, buttons              ; get center button values
023                             ;CALL map                            ; draw the map using map subroutine

023  0950F                      INPUT s5, buttons              ; get button values
024  1D510                      COMPARE s5, buttons_ct         ; check if center button is pressed
025  32027                      JUMP Z, enter_play_state2      ; jump to enter_play_state2
026  36031                      JUMP NZ, stay_in_gameover_state ; remain in current state with a jump to stay_in_gameover_state

027          enter_play_state2:
027  01901                      LOAD s9, PLAY_STATE            ; load play_state and enter play mode

028                             ;; RESET EVERYTHING BEFORE RETURNING
028  01A00                      LOAD sa, 00                    ; initial distance (score)
029  01B00                      LOAD sb, 00                    ; initial distance (score)
02A  2DB0A                      OUTPUT sb, qssd_lo             ; reset qssd_lo
02B  2DA0B                      OUTPUT sa, qssd_hi             ; reset qssd_hi
02C  01C80                      LOAD sc, 80                    ; starting helicopter position
02D  01D05                      LOAD sd, 05                    ; initialize (needed later)
02E  01EFF                      LOAD se, FF                    ; load 255 into sE (horizontal coordinate of block)
02F  01F62                      LOAD sf, 62                    ; load 108 into sF (vertical coordinate of block)
030  25000                      RETURN                         ; return from start subroutine

031        stay_in_gameover_state:
031  25000                      RETURN                         ; return from start subroutine

032                             ;;============================================================================
032                             ;; Play - Play Subroutine
032                             ;;============================================================================

032  0950F                play: INPUT s5, buttons              ; get center button values
033  2003C                      CALL map                       ; draw the map using map subroutine

034  0950F                      INPUT s5, buttons              ; get button values
035  1D510                      COMPARE s5, buttons_ct         ; check if center button is pressed
036  3027A                      CALL Z, move_heli_up           ; call subroutine that moves the helicopter up

037  2023C                      CALL draw_helicopter           ; draw the helicopter
038  2026E                      CALL random_block_location     ; determines a random place for the block (y direction only)
039  20241                      CALL draw_block                ; draw the block using draw_block subroutine
03A  20336                      CALL check_collision           ; check if any collisions happen

03B  25000                      RETURN                         ; finished with play subroutine

03C                             ;;============================================================================
03C                             ;; Map - Draw Map Subroutine
03C                             ;;============================================================================

03C                        map:

03C                             ;;============================================================================
03C                             ;; Draws Top Line of Map (Line 1)
03C                             ;;============================================================================

03C  01000                      LOAD s0, 00                    ; load 00 into s0
03D  0110F                      LOAD s1, 0F                    ; load 0F into s1
03E  012FF                      LOAD s2, FF                    ; load FF into s2
03F  0130F                      LOAD s3, 0F                    ; load 0F into s3
040  20326                      CALL draw_line                 ; draws the line

041                             ;;============================================================================
041                             ;; Draws Bottom Line of Map (Line 2)
041                             ;;============================================================================

041  01000                      LOAD s0, 00                    ; load 00 into s0
042  011F0                      LOAD s1, F0                    ; load 0F into s1
043  012FF                      LOAD s2, FF                    ; load FF into s2
044  013F0                      LOAD s3, F0                    ; load F0 into s3
045  20326                      CALL draw_line                 ; draws the line

046  25000                      RETURN                         ; go back from drawing map

047                             ;;============================================================================
047                             ;; Start Screen - Draw Start Screen Subroutine
047                             ;;============================================================================

047               start_screen:
047                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
047                             ;; Code for PRESS START [START MENU] ;;
047                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

047                             ;;;;;;;;;;;;;;;
047                             ;;BEGIN PRESS;;
047                             ;;;;;;;;;;;;;;;

047                             ;; LINE 1 (LEFT) FOR P
047  01041                      LOAD s0, 41                    ; stax 65
048  011C8                      LOAD s1, C8                    ; stay 200
049  01241                      LOAD s2, 41                    ; endx 65
04A  013D2                      LOAD s3, D2                    ; endy 210
04B  20326                      CALL draw_line                 ;

04C                             ;; LINE 2 (TOP) FOR P
04C  01041                      LOAD s0, 41                    ; stax 65
04D  011C8                      LOAD s1, C8                    ; stay 200
04E  01246                      LOAD s2, 46                    ; endx 70
04F  013C8                      LOAD s3, C8                    ; endy 200
050  20326                      CALL draw_line                 ;

051                             ;; LINE 3 (RIGHT) FOR P
051  01046                      LOAD s0, 46                    ; stax 70
052  011C8                      LOAD s1, C8                    ; stay 200
053  01246                      LOAD s2, 46                    ; endx 70
054  013CD                      LOAD s3, CD                    ; endy 205
055  20326                      CALL draw_line                 ;

056                             ;; LINE 4 (MIDDLE) FOR P
056  01041                      LOAD s0, 41                    ; stax 65
057  011CD                      LOAD s1, CD                    ; stay 205
058  01246                      LOAD s2, 46                    ; endx 70
059  013CD                      LOAD s3, CD                    ; endy 205
05A  20326                      CALL draw_line                 ;

05B                             ;; LINE 1 (LEFT) FOR R
05B  0104B                      LOAD s0, 4B                    ; stax 75
05C  011C8                      LOAD s1, C8                    ; stay 200
05D  0124B                      LOAD s2, 4B                    ; endx 75
05E  013D2                      LOAD s3, D2                    ; endy 210
05F  20326                      CALL draw_line                 ;

060                             ;; LINE 2 (TOP) FOR R
060  0104B                      LOAD s0, 4B                    ; stax 75
061  011C8                      LOAD s1, C8                    ; stay 200
062  01250                      LOAD s2, 50                    ; endx 80
063  013C8                      LOAD s3, C8                    ; endy 200
064  20326                      CALL draw_line                 ;

065                             ;; LINE 3 (RIGHT) FOR R
065  01050                      LOAD s0, 50                    ; stax 80
066  011C8                      LOAD s1, C8                    ; stay 200
067  01250                      LOAD s2, 50                    ; endx 80
068  013CD                      LOAD s3, CD                    ; endy 205
069  20326                      CALL draw_line                 ;

06A                             ;; LINE 4 (MIDDLE) FOR R
06A  0104B                      LOAD s0, 4B                    ; stax 75
06B  011CD                      LOAD s1, CD                    ; stay 205
06C  01250                      LOAD s2, 50                    ; endx 80
06D  013CD                      LOAD s3, CD                    ; endy 205
06E  20326                      CALL draw_line                 ;

06F                             ;; LINE 5 (ANGLED) FOR R
06F  0104B                      LOAD s0, 4B                    ; stax 75
070  011CD                      LOAD s1, CD                    ; stay 205
071  01250                      LOAD s2, 50                    ; endx 80
072  013D2                      LOAD s3, D2                    ; endy 210
073  20326                      CALL draw_line                 ;

074                             ;; LINE 1 (LEFT) FOR E
074  01055                      LOAD s0, 55                    ; stax 85
075  011C8                      LOAD s1, C8                    ; stay 200
076  01255                      LOAD s2, 55                    ; endx 85
077  013D2                      LOAD s3, D2                    ; endy 210
078  20326                      CALL draw_line                 ;

079                             ;; LINE 2 (TOP) FOR E
079  01055                      LOAD s0, 55                    ; stax 85
07A  011C8                      LOAD s1, C8                    ; stay 200
07B  0125A                      LOAD s2, 5A                    ; endx 90
07C  013C8                      LOAD s3, C8                    ; endy 200
07D  20326                      CALL draw_line                 ;

07E                             ;; LINE 3 (MIDDLE) FOR E
07E  01055                      LOAD s0, 55                    ; stax 85
07F  011CD                      LOAD s1, CD                    ; stay 205
080  0125A                      LOAD s2, 5A                    ; endx 90
081  013CD                      LOAD s3, CD                    ; endy 205
082  20326                      CALL draw_line                 ;

083                             ;; LINE 4 (BOTTOM) FOR E
083  01055                      LOAD s0, 55                    ; stax 85
084  011D2                      LOAD s1, D2                    ; stay 210
085  0125A                      LOAD s2, 5A                    ; endx 90
086  013D2                      LOAD s3, D2                    ; endy 210
087  20326                      CALL draw_line                 ;

088                             ;; LINE 1 (TOP) FOR S1
088  0105F                      LOAD s0, 5F                    ; stax 95
089  011C8                      LOAD s1, C8                    ; stay 200
08A  01264                      LOAD s2, 64                    ; endx 100
08B  013C8                      LOAD s3, C8                    ; endy 200
08C  20326                      CALL draw_line                 ;

08D                             ;; LINE 2 (TOPLEFT) FOR S1
08D  0105F                      LOAD s0, 5F                    ; stax 95
08E  011C8                      LOAD s1, C8                    ; stay 200
08F  0125F                      LOAD s2, 5F                    ; endx 95
090  013CD                      LOAD s3, CD                    ; endy 205
091  20326                      CALL draw_line                 ;

092                             ;; LINE 3 (MIDDLE) FOR S1
092  0105F                      LOAD s0, 5F                    ; stax 95
093  011CD                      LOAD s1, CD                    ; stay 205
094  01264                      LOAD s2, 64                    ; endx 100
095  013CD                      LOAD s3, CD                    ; endy 205
096  20326                      CALL draw_line                 ;

097                             ;; LINE 4 (BOTTOMRIGHT) FOR S1
097  01064                      LOAD s0, 64                    ; stax 100
098  011CD                      LOAD s1, CD                    ; stay 205
099  01264                      LOAD s2, 64                    ; endx 100
09A  013D2                      LOAD s3, D2                    ; endy 210
09B  20326                      CALL draw_line                 ;

09C                             ;; LINE 5 (BOTTOM) FOR S1
09C  0105F                      LOAD s0, 5F                    ; stax 95
09D  011D2                      LOAD s1, D2                    ; stay 210
09E  01264                      LOAD s2, 64                    ; endx 100
09F  013D2                      LOAD s3, D2                    ; endy 210
0A0  20326                      CALL draw_line                 ;

0A1                             ;; LINE 1 (TOP) FOR S2
0A1  01069                      LOAD s0, 69                    ; stax 105
0A2  011C8                      LOAD s1, C8                    ; stay 200
0A3  0126E                      LOAD s2, 6E                    ; endx 110
0A4  013C8                      LOAD s3, C8                    ; endy 200
0A5  20326                      CALL draw_line                 ;

0A6                             ;; LINE 2 (TOPLEFT) FOR S2
0A6  01069                      LOAD s0, 69                    ; stax 105
0A7  011C8                      LOAD s1, C8                    ; stay 200
0A8  01269                      LOAD s2, 69                    ; endx 105
0A9  013CD                      LOAD s3, CD                    ; endy 205
0AA  20326                      CALL draw_line                 ;

0AB                             ;; LINE 3 (MIDDLE) FOR S2
0AB  01069                      LOAD s0, 69                    ; stax 105
0AC  011CD                      LOAD s1, CD                    ; stay 205
0AD  0126E                      LOAD s2, 6E                    ; endx 110
0AE  013CD                      LOAD s3, CD                    ; endy 205
0AF  20326                      CALL draw_line                 ;

0B0                             ;; LINE 4 (BOTTOMRIGHT) FOR S2
0B0  0106E                      LOAD s0, 6E                    ; stax 110
0B1  011CD                      LOAD s1, CD                    ; stay 205
0B2  0126E                      LOAD s2, 6E                    ; endx 110
0B3  013D2                      LOAD s3, D2                    ; endy 210
0B4  20326                      CALL draw_line                 ;

0B5                             ;; LINE 5 (BOTTOM) FOR S2
0B5  01069                      LOAD s0, 69                    ; stax 105
0B6  011D2                      LOAD s1, D2                    ; stay 210
0B7  0126E                      LOAD s2, 6E                    ; endx 110
0B8  013D2                      LOAD s3, D2                    ; endy 210
0B9  20326                      CALL draw_line                 ;

0BA                             ;;;;;;;;;;;;;;;
0BA                             ;;BEGIN START;;
0BA                             ;;;;;;;;;;;;;;;

0BA                             ;; LINE 1 (TOP) FOR S
0BA  01082                      LOAD s0, 82                    ; stax 130
0BB  011C8                      LOAD s1, C8                    ; stay 200
0BC  01287                      LOAD s2, 87                    ; endx 137
0BD  013C8                      LOAD s3, C8                    ; endy 200
0BE  20326                      CALL draw_line                 ;

0BF                             ;; LINE 2 (TOPLEFT) FOR S
0BF  01082                      LOAD s0, 82                    ; stax 130
0C0  011C8                      LOAD s1, C8                    ; stay 200
0C1  01282                      LOAD s2, 82                    ; endx 130
0C2  013CD                      LOAD s3, CD                    ; endy 205
0C3  20326                      CALL draw_line                 ;

0C4                             ;; LINE 3 (MIDDLE) FOR S
0C4  01082                      LOAD s0, 82                    ; stax 130
0C5  011CD                      LOAD s1, CD                    ; stay 205
0C6  01287                      LOAD s2, 87                    ; endx 135
0C7  013CD                      LOAD s3, CD                    ; endy 205
0C8  20326                      CALL draw_line                 ;

0C9                             ;; LINE 4 (BOTTOMRIGHT) FOR S
0C9  01087                      LOAD s0, 87                    ; stax 135
0CA  011CD                      LOAD s1, CD                    ; stay 205
0CB  01287                      LOAD s2, 87                    ; endx 135
0CC  013D2                      LOAD s3, D2                    ; endy 210
0CD  20326                      CALL draw_line                 ;

0CE                             ;; LINE 5 (BOTTOM) FOR S
0CE  01082                      LOAD s0, 82                    ; stax 130
0CF  011D2                      LOAD s1, D2                    ; stay 210
0D0  01287                      LOAD s2, 87                    ; endx 135
0D1  013D2                      LOAD s3, D2                    ; endy 210
0D2  20326                      CALL draw_line                 ;

0D3                             ;; LINE 1 (TOP) FOR T1
0D3  0108C                      LOAD s0, 8C                    ; stax 140
0D4  011C8                      LOAD s1, C8                    ; stay 200
0D5  01291                      LOAD s2, 91                    ; endx 145
0D6  013C8                      LOAD s3, C8                    ; endy 200
0D7  20326                      CALL draw_line                 ;

0D8                             ;; LINE 2 (MIDDLE) FOR T1
0D8  0108F                      LOAD s0, 8F                    ; stax 143
0D9  011C8                      LOAD s1, C8                    ; stay 200
0DA  0128F                      LOAD s2, 8F                    ; endx 143
0DB  013D2                      LOAD s3, D2                    ; endy 210
0DC  20326                      CALL draw_line                 ;

0DD                             ;; LINE 1 (LEFT) FOR A
0DD  01096                      LOAD s0, 96                    ; stax 150
0DE  011C8                      LOAD s1, C8                    ; stay 200
0DF  01296                      LOAD s2, 96                    ; endx 150
0E0  013D2                      LOAD s3, D2                    ; endy 210
0E1  20326                      CALL draw_line                 ;

0E2                             ;; LINE 2 (TOP) FOR A
0E2  01096                      LOAD s0, 96                    ; stax 150
0E3  011C8                      LOAD s1, C8                    ; stay 200
0E4  0129B                      LOAD s2, 9B                    ; endx 155
0E5  013C8                      LOAD s3, C8                    ; endy 200
0E6  20326                      CALL draw_line                 ;

0E7                             ;; LINE 3 (MIDDLE) FOR A
0E7  01096                      LOAD s0, 96                    ; stax 150
0E8  011CD                      LOAD s1, CD                    ; stay 205
0E9  0129B                      LOAD s2, 9B                    ; endx 155
0EA  013CD                      LOAD s3, CD                    ; endy 205
0EB  20326                      CALL draw_line                 ;

0EC                             ;; LINE 4 (RIGHT) FOR A
0EC  0109B                      LOAD s0, 9B                    ; stax 155
0ED  011C8                      LOAD s1, C8                    ; stay 200
0EE  0129B                      LOAD s2, 9B                    ; endx 155
0EF  013D2                      LOAD s3, D2                    ; endy 210
0F0  20326                      CALL draw_line                 ;

0F1                             ;; LINE 1 (LEFT) FOR R
0F1  010A0                      LOAD s0, A0                    ; stax 160
0F2  011C8                      LOAD s1, C8                    ; stay 200
0F3  012A0                      LOAD s2, A0                    ; endx 160
0F4  013D2                      LOAD s3, D2                    ; endy 210
0F5  20326                      CALL draw_line                 ;

0F6                             ;; LINE 2 (TOP) FOR R
0F6  010A0                      LOAD s0, A0                    ; stax 160
0F7  011C8                      LOAD s1, C8                    ; stay 200
0F8  012A5                      LOAD s2, A5                    ; endx 165
0F9  013C8                      LOAD s3, C8                    ; endy 200
0FA  20326                      CALL draw_line                 ;

0FB                             ;; LINE 3 (RIGHT) FOR R
0FB  010A5                      LOAD s0, A5                    ; stax 165
0FC  011C8                      LOAD s1, C8                    ; stay 200
0FD  012A5                      LOAD s2, A5                    ; endx 165
0FE  013CD                      LOAD s3, CD                    ; endy 205
0FF  20326                      CALL draw_line                 ;

100                             ;; LINE 4 (MIDDLE) FOR R
100  010A0                      LOAD s0, A0                    ; stax 160
101  011CD                      LOAD s1, CD                    ; stay 205
102  012A5                      LOAD s2, A5                    ; endx 165
103  013CD                      LOAD s3, CD                    ; endy 205
104  20326                      CALL draw_line                 ;

105                             ;; LINE 5 (ANGLED) FOR R
105  010A0                      LOAD s0, A0                    ; stax 160
106  011CD                      LOAD s1, CD                    ; stay 205
107  012A5                      LOAD s2, A5                    ; endx 165
108  013D2                      LOAD s3, D2                    ; endy 210
109  20326                      CALL draw_line                 ;

10A                             ;; LINE 1 (TOP) FOR T2
10A  010AA                      LOAD s0, AA                    ; stax 170
10B  011C8                      LOAD s1, C8                    ; stay 200
10C  012AF                      LOAD s2, AF                    ; endx 175
10D  013C8                      LOAD s3, C8                    ; endy 200
10E  20326                      CALL draw_line                 ;

10F                             ;; LINE 2 (MIDDLE) FOR T2
10F  010AD                      LOAD s0, AD                    ; stax 173
110  011C8                      LOAD s1, C8                    ; stay 200
111  012AD                      LOAD s2, AD                    ; endx 173
112  013D2                      LOAD s3, D2                    ; endy 210
113  20326                      CALL draw_line                 ;



114                             ;;============================================================================
114                             ;; Draws Decoration (Line 1a)
114                             ;;============================================================================

114  01000                      LOAD s0, 00                    ; load 00 into s0
115  0110A                      LOAD s1, 0A                    ; load 0A into s1
116  012FF                      LOAD s2, FF                    ; load FF into s2
117  0130A                      LOAD s3, 0A                    ; load 0A into s3
118  20326                      CALL draw_line                 ; draws the line

119                             ;;===========================================================================
119                             ;; Draws Decoration (Line 2a)
119                             ;;============================================================================

119  01000                      LOAD s0, 00                    ; load 00 into s0
11A  0110C                      LOAD s1, 0C                    ; load 0C into s1
11B  012FF                      LOAD s2, FF                    ; load FF into s2
11C  0130C                      LOAD s3, 0C                    ; load 0C into s3
11D  20326                      CALL draw_line                 ; draws the line

11E                             ;;===========================================================================
11E                             ;; Draws Decoration (Line 3a)
11E                             ;;============================================================================

11E  01000                      LOAD s0, 00                    ; load 00 into s0
11F  0110E                      LOAD s1, 0E                    ; load 0E into s1
120  012FF                      LOAD s2, FF                    ; load FF into s2
121  0130E                      LOAD s3, 0E                    ; load 0E into s3
122  20326                      CALL draw_line                 ; draws the line

123                             ;;============================================================================
123                             ;; Draws Decoration (Line 1b)
123                             ;;============================================================================

123  01000                      LOAD s0, 00                    ; load 00 into s0
124  01188                      LOAD s1, 88                    ; load 88 into s1
125  012FF                      LOAD s2, FF                    ; load FF into s2
126  01388                      LOAD s3, 88                    ; load 88 into s3
127  20326                      CALL draw_line                 ; draws the line

128                             ;;===========================================================================
128                             ;; Draws Decoration (Line 2b)
128                             ;;============================================================================

128  01000                      LOAD s0, 00                    ; load 00 into s0
129  0118A                      LOAD s1, 8A                    ; load 8A into s1
12A  012FF                      LOAD s2, FF                    ; load FF into s2
12B  0138A                      LOAD s3, 8A                    ; load 8A into s3
12C  20326                      CALL draw_line                 ; draws the line

12D                             ;;===========================================================================
12D                             ;; Draws Decoration (Line 3b)
12D                             ;;============================================================================

12D  01000                      LOAD s0, 00                    ; load 00 into s0
12E  0118C                      LOAD s1, 8C                    ; load 8A into s1
12F  012FF                      LOAD s2, FF                    ; load FF into s2
130  0138C                      LOAD s3, 8C                    ; load 8C into s3
131  20326                      CALL draw_line                 ; draws the line

132                             ;;============================================================================
132                             ;; Draws the letter H (Line 1)
132                             ;;============================================================================

132                             ;; STARTING POINT
132  0150A                      LOAD s5, 0A                    ; load 10 into s5
133  2D500                      OUTPUT s5, stax                ; set desired stax
134  0161E                      LOAD s6, 1E                    ; load 30 into s6
135  2D601                      OUTPUT s6, stay                ; set desired stay

136                             ;; ENDING POINT
136  2D502                      OUTPUT s5, endx                ; set desired endx
137  0163C                      LOAD s6, 3C                    ; load 60 into s6
138  2D603                      OUTPUT s6, endy                ; set desired endy
139  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

13A                             ;;============================================================================
13A                             ;; Draws the letter H (Line 2)
13A                             ;;============================================================================

13A                             ;; STARTING POINT
13A  0150A                      LOAD s5, 0A                    ; load 10 into s5
13B  2D500                      OUTPUT s5, stax                ; set desired stax
13C  0162D                      LOAD s6, 2D                    ; load 45 into s6
13D  2D601                      OUTPUT s6, stay                ; set desired stay

13E                             ;; ENDING POINT
13E  0151E                      LOAD s5, 1E                    ; load 30 into s5
13F  2D502                      OUTPUT s5, endx                ; set desired endx
140  2D603                      OUTPUT s6, endy                ; set desired endy
141  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

142                             ;;============================================================================
142                             ;; Draws the letter H (Line 3)
142                             ;;============================================================================

142                             ;; STARTING POINT
142  0151E                      LOAD s5, 1E                    ; load 30 into s5
143  2D500                      OUTPUT s5, stax                ; set desired stax
144  0161E                      LOAD s6, 1E                    ; load 30 into s6
145  2D601                      OUTPUT s6, stay                ; set desired stay

146                             ;; ENDING POINT
146  2D502                      OUTPUT s5, endx                ; set desired endx
147  0163C                      LOAD s6, 3C                    ; load 60 into s6
148  2D603                      OUTPUT s6, endy                ; set desired endy
149  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

14A                             ;;============================================================================
14A                             ;; Draws the letter E (Line 1)
14A                             ;;============================================================================

14A                             ;; STARTING POINT
14A  01528                      LOAD s5, 28                    ; load 40 into s5
14B  2D500                      OUTPUT s5, stax                ; set desired stax
14C  0161E                      LOAD s6, 1E                    ; load 30 into s6
14D  2D601                      OUTPUT s6, stay                ; set desired stay

14E                             ;; ENDING POINT
14E  2D502                      OUTPUT s5, endx                ; set desired endx
14F  0163C                      LOAD s6, 3C                    ; load 60 into s6
150  2D603                      OUTPUT s6, endy                ; set desired endy
151  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

152                             ;;============================================================================
152                             ;; Draws the letter E (Line 2)
152                             ;;============================================================================

152                             ;; STARTING POINT
152  01528                      LOAD s5, 28                    ; load 40 into s5
153  2D500                      OUTPUT s5, stax                ; set desired stax
154  0161E                      LOAD s6, 1E                    ; load 30 into s6
155  2D601                      OUTPUT s6, stay                ; set desired stay

156                             ;; ENDING POINT
156  0153C                      LOAD s5, 3C                    ; load 60 into s5
157  2D502                      OUTPUT s5, endx                ; set desired endx
158  2D603                      OUTPUT s6, endy                ; set desired endy
159  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

15A                             ;;============================================================================
15A                             ;; Draws the letter E (Line 3)
15A                             ;;============================================================================

15A                             ;; STARTING POINT
15A  01528                      LOAD s5, 28                    ; load 40 into s5
15B  2D500                      OUTPUT s5, stax                ; set desired stax
15C  0162D                      LOAD s6, 2D                    ; load 45 into s6
15D  2D601                      OUTPUT s6, stay                ; set desired stay

15E                             ;; ENDING POINT
15E  0153C                      LOAD s5, 3C                    ; load 60 into s5
15F  2D502                      OUTPUT s5, endx                ; set desired endx
160  2D603                      OUTPUT s6, endy                ; set desired endy
161  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

162                             ;;============================================================================
162                             ;; Draws the letter E (Line 3)
162                             ;;============================================================================

162                             ;; STARTING POINT
162  01528                      LOAD s5, 28                    ; load 40 into s5
163  2D500                      OUTPUT s5, stax                ; set desired stax
164  0163C                      LOAD s6, 3C                    ; load 45 into s6
165  2D601                      OUTPUT s6, stay                ; set desired stay

166                             ;; ENDING POINT
166  0153C                      LOAD s5, 3C                    ; load 60 into s5
167  2D502                      OUTPUT s5, endx                ; set desired endx
168  2D603                      OUTPUT s6, endy                ; set desired endy
169  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

16A                             ;;============================================================================
16A                             ;; Draws the letter L (Line 1)
16A                             ;;============================================================================

16A                             ;; STARTING POINT
16A  01546                      LOAD s5, 46                    ; load 70 into s5
16B  2D500                      OUTPUT s5, stax                ; set desired stax
16C  0161E                      LOAD s6, 1E                    ; load 30 into s6
16D  2D601                      OUTPUT s6, stay                ; set desired stay

16E                             ;; ENDING POINT
16E  2D502                      OUTPUT s5, endx                ; set desired endx
16F  0163C                      LOAD s6, 3C                    ; load 60 into s6
170  2D603                      OUTPUT s6, endy                ; set desired endy
171  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

172                             ;;============================================================================
172                             ;; Draws the letter L (Line 2)
172                             ;;============================================================================

172                             ;; STARTING POINT
172  01546                      LOAD s5, 46                    ; load 70 into s5
173  2D500                      OUTPUT s5, stax                ; set desired stax
174  0163C                      LOAD s6, 3C                    ; load 45 into s6
175  2D601                      OUTPUT s6, stay                ; set desired stay

176                             ;; ENDING POINT
176  0155A                      LOAD s5, 5A                    ; load 90 into s5
177  2D502                      OUTPUT s5, endx                ; set desired endx
178  2D603                      OUTPUT s6, endy                ; set desired endy
179  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

17A                             ;;============================================================================
17A                             ;; Draws the letter I (Line 1)
17A                             ;;============================================================================

17A                             ;; STARTING POINT
17A  01564                      LOAD s5, 64                    ; load 70 into s5
17B  2D500                      OUTPUT s5, stax                ; set desired stax
17C  0161E                      LOAD s6, 1E                    ; load 30 into s6
17D  2D601                      OUTPUT s6, stay                ; set desired stay

17E                             ;; ENDING POINT
17E  2D502                      OUTPUT s5, endx                ; set desired endx
17F  0163C                      LOAD s6, 3C                    ; load 60 into s6
180  2D603                      OUTPUT s6, endy                ; set desired endy
181  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

182                             ;;============================================================================
182                             ;; Draws the letter C (Line 1)
182                             ;;============================================================================

182                             ;; STARTING POINT
182  01582                      LOAD s5, 82                    ; load 130 into s5
183  2D500                      OUTPUT s5, stax                ; set desired stax
184  0161E                      LOAD s6, 1E                    ; load 45 into s6
185  2D601                      OUTPUT s6, stay                ; set desired stay

186                             ;; ENDING POINT
186  01573                      LOAD s5, 73                    ; load 115 into s5
187  2D502                      OUTPUT s5, endx                ; set desired endx
188  2D603                      OUTPUT s6, endy                ; set desired endy
189  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

18A                             ;;============================================================================
18A                             ;; Draws the letter C (Line 2)
18A                             ;;============================================================================

18A                             ;; STARTING POINT
18A  01573                      LOAD s5, 73                    ; load 115 into s5
18B  2D500                      OUTPUT s5, stax                ; set desired stax
18C  0161E                      LOAD s6, 1E                    ; load 45 into s6
18D  2D601                      OUTPUT s6, stay                ; set desired stay

18E                             ;; ENDING POINT
18E  0156E                      LOAD s5, 6E                    ; load 110 into s5
18F  2D502                      OUTPUT s5, endx                ; set desired endx
190  01623                      LOAD s6, 23                    ; load 35 into s6
191  2D603                      OUTPUT s6, endy                ; set desired endy
192  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

193                             ;;============================================================================
193                             ;; Draws the letter C (Line 3)
193                             ;;============================================================================

193                             ;; STARTING POINT
193  0156E                      LOAD s5, 6E                    ; load 110 into s5
194  2D500                      OUTPUT s5, stax                ; set desired stax
195  01623                      LOAD s6, 23                    ; load 35 into s6
196  2D601                      OUTPUT s6, stay                ; set desired stay

197                             ;; ENDING POINT
197  2D502                      OUTPUT s5, endx                ; set desired endx
198  01637                      LOAD s6, 37                    ; load 55 into s6
199  2D603                      OUTPUT s6, endy                ; set desired endy
19A  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

19B                             ;;============================================================================
19B                             ;; Draws the letter C (Line 4)
19B                             ;;============================================================================

19B                             ;; STARTING POINT
19B  0156E                      LOAD s5, 6E                    ; load 110 into s5
19C  2D500                      OUTPUT s5, stax                ; set desired stax
19D  01637                      LOAD s6, 37                    ; load 55 into s6
19E  2D601                      OUTPUT s6, stay                ; set desired stay

19F                             ;; ENDING POINT
19F  01573                      LOAD s5, 73                    ; load 130 into s5
1A0  2D502                      OUTPUT s5, endx                ; set desired endx
1A1  0163B                      LOAD s6, 3B                    ; load 44 into s6
1A2  2D603                      OUTPUT s6, endy                ; set desired endy
1A3  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1A4                             ;;============================================================================
1A4                             ;; Draws the letter C (Line 5)
1A4                             ;;============================================================================

1A4                             ;; STARTING POINT
1A4  01582                      LOAD s5, 82                    ; load 130 into s5
1A5  2D500                      OUTPUT s5, stax                ; set desired stax
1A6  0163C                      LOAD s6, 3C                    ; load 45 into s6
1A7  2D601                      OUTPUT s6, stay                ; set desired stay

1A8                             ;; ENDING POINT
1A8  01573                      LOAD s5, 73                    ; load 115 into s5
1A9  2D502                      OUTPUT s5, endx                ; set desired endx
1AA  2D603                      OUTPUT s6, endy                ; set desired endy
1AB  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1AC                             ;;============================================================================
1AC                             ;; Draws the letter O (Line 1)
1AC                             ;;============================================================================

1AC                             ;; STARTING POINT
1AC  01591                      LOAD s5, 91                    ; load 145 into s5
1AD  2D500                      OUTPUT s5, stax                ; set desired stax
1AE  0161E                      LOAD s6, 1E                    ; load 30 into s6
1AF  2D601                      OUTPUT s6, stay                ; set desired stay

1B0                             ;; ENDING POINT
1B0  0159B                      LOAD s5, 9B                    ; load 155 into s5
1B1  2D502                      OUTPUT s5, endx                ; set desired endx
1B2  2D603                      OUTPUT s6, endy                ; set desired endy
1B3  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1B4                             ;;============================================================================
1B4                             ;; Draws the letter O (Line 2)
1B4                             ;;============================================================================

1B4                             ;; STARTING POINT
1B4  01591                      LOAD s5, 91                    ; load 145 into s5
1B5  2D500                      OUTPUT s5, stax                ; set desired stax
1B6  0161E                      LOAD s6, 1E                    ; load 45 into s6
1B7  2D601                      OUTPUT s6, stay                ; set desired stay

1B8                             ;; ENDING POINT
1B8  0158C                      LOAD s5, 8C                    ; load 110 into s5
1B9  2D502                      OUTPUT s5, endx                ; set desired endx
1BA  0161E                      LOAD s6, 1E                    ; load 35 into s6
1BB  2D603                      OUTPUT s6, endy                ; set desired endy
1BC  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1BD                             ;;============================================================================
1BD                             ;; Draws the letter O (Line 3)
1BD                             ;;============================================================================

1BD                             ;; STARTING POINT
1BD  0158C                      LOAD s5, 8C                    ; load 140 into s5
1BE  2D500                      OUTPUT s5, stax                ; set desired stax
1BF  0161E                      LOAD s6, 1E                    ; load 30 into s6
1C0  2D601                      OUTPUT s6, stay                ; set desired stay

1C1                             ;; ENDING POINT
1C1  2D502                      OUTPUT s5, endx                ; set desired endx
1C2  0163C                      LOAD s6, 3C                    ; load 60 into s6
1C3  2D603                      OUTPUT s6, endy                ; set desired endy
1C4  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1C5                             ;;============================================================================
1C5                             ;; Draws the letter O (Line 4)
1C5                             ;;============================================================================

1C5                             ;; STARTING POINT
1C5  0158C                      LOAD s5, 8C                    ; load 110 into s5
1C6  2D500                      OUTPUT s5, stax                ; set desired stax
1C7  0163C                      LOAD s6, 3C                    ; load 55 into s6
1C8  2D601                      OUTPUT s6, stay                ; set desired stay

1C9                             ;; ENDING POINT
1C9  01591                      LOAD s5, 91                    ; load 145 into s5
1CA  2D502                      OUTPUT s5, endx                ; set desired endx
1CB  0163C                      LOAD s6, 3C                    ; load 30 into s6
1CC  2D603                      OUTPUT s6, endy                ; set desired endy
1CD  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1CE                             ;;============================================================================
1CE                             ;; Draws the letter O (Line 5)
1CE                             ;;============================================================================

1CE                             ;; STARTING POINT
1CE  01591                      LOAD s5, 91                    ; load 145 into s5
1CF  2D500                      OUTPUT s5, stax                ; set desired stax
1D0  0163C                      LOAD s6, 3C                    ; load 30 into s6
1D1  2D601                      OUTPUT s6, stay                ; set desired stay

1D2                             ;; ENDING POINT
1D2  0159B                      LOAD s5, 9B                    ; load 155 into s5
1D3  2D502                      OUTPUT s5, endx                ; set desired endx
1D4  2D603                      OUTPUT s6, endy                ; set desired endy
1D5  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1D6                             ;;============================================================================
1D6                             ;; Draws the letter O (Line 6)
1D6                             ;;============================================================================

1D6                             ;; STARTING POINT
1D6  0159B                      LOAD s5, 9B                    ; load 110 into s5
1D7  2D500                      OUTPUT s5, stax                ; set desired stax
1D8  0163C                      LOAD s6, 3C                    ; load 55 into s6
1D9  2D601                      OUTPUT s6, stay                ; set desired stay

1DA                             ;; ENDING POINT
1DA  015A0                      LOAD s5, A0                    ; load 160 into s5
1DB  2D502                      OUTPUT s5, endx                ; set desired endx
1DC  0163C                      LOAD s6, 3C                    ; load 30 into s6
1DD  2D603                      OUTPUT s6, endy                ; set desired endy
1DE  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1DF                             ;;============================================================================
1DF                             ;; Draws the letter O (Line 7)
1DF                             ;;============================================================================

1DF                             ;; STARTING POINT
1DF  015A0                      LOAD s5, A0                    ; load 160 into s5
1E0  2D500                      OUTPUT s5, stax                ; set desired stax
1E1  0161E                      LOAD s6, 1E                    ; load 30 into s6
1E2  2D601                      OUTPUT s6, stay                ; set desired stay

1E3                             ;; ENDING POINT
1E3  2D502                      OUTPUT s5, endx                ; set desired endx
1E4  0163C                      LOAD s6, 3C                    ; load 60 into s6
1E5  2D603                      OUTPUT s6, endy                ; set desired endy
1E6  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1E7                             ;;============================================================================
1E7                             ;; Draws the letter O (Line 8)
1E7                             ;;============================================================================

1E7                             ;; STARTING POINT
1E7  015A0                      LOAD s5, A0                    ; load 160 into s5
1E8  2D500                      OUTPUT s5, stax                ; set desired stax
1E9  0161E                      LOAD s6, 1E                    ; load 30 into s6
1EA  2D601                      OUTPUT s6, stay                ; set desired stay

1EB                             ;; ENDING POINT
1EB  0159B                      LOAD s5, 9B                    ; load 155 into s5
1EC  2D502                      OUTPUT s5, endx                ; set desired endx
1ED  0161E                      LOAD s6, 1E                    ; load 30 into s6
1EE  2D603                      OUTPUT s6, endy                ; set desired endy
1EF  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1F0                             ;;============================================================================
1F0                             ;; Draws the letter P (Line 1)
1F0                             ;;============================================================================
1F0  010AA                      LOAD s0, AA                    ; load 170 into s0
1F1  0111E                      LOAD s1, 1E                    ; load 30 into s1
1F2  012BE                      LOAD s2, BE                    ; load 190 into s2
1F3  0131E                      LOAD s3, 1E                    ; keep s3 set at 30
1F4  20326                      CALL draw_line                 ; call the draw_line subroutine

1F5                             ;;============================================================================
1F5                             ;; Draws the letter P (Line 2)
1F5                             ;;============================================================================
1F5  010AA                      LOAD s0, AA                    ; load 170 into s0
1F6  0111E                      LOAD s1, 1E                    ; load 30 into s1
1F7  012AA                      LOAD s2, AA                    ; load 170 into s2
1F8  0133C                      LOAD s3, 3C                    ; load 60 into s3
1F9  20326                      CALL draw_line                 ; call the draw_line subroutine

1FA                             ;;============================================================================
1FA                             ;; Draws the letter P (Line 3)
1FA                             ;;============================================================================
1FA  010AA                      LOAD s0, AA                    ; load 170 into s0
1FB  0112D                      LOAD s1, 2D                    ; load 45 into s1
1FC  012BE                      LOAD s2, BE                    ; load 190 into s2
1FD  0132D                      LOAD s3, 2D                    ; keep s0 set at 45
1FE  20326                      CALL draw_line                 ; call the draw_line subroutine

1FF                             ;;============================================================================
1FF                             ;; Draws the letter P (Line 4)
1FF                             ;;============================================================================
1FF  010BE                      LOAD s0, BE                    ; load 190 into s0
200  0111E                      LOAD s1, 1E                    ; load 30 into s1
201  012BE                      LOAD s2, BE                    ; load 190 into s2
202  0132D                      LOAD s3, 2D                    ; load 45 to s3
203  20326                      CALL draw_line                 ; call the draw_line subroutine

204                             ;;============================================================================
204                             ;; Draws the letter T (Line 1)
204                             ;;============================================================================
204  010C8                      LOAD s0, C8                    ; load 200 into s0
205  0111E                      LOAD s1, 1E                    ; load 30 into s1
206  012DC                      LOAD s2, DC                    ; load 220 into s2
207  0131E                      LOAD s3, 1E                    ; load 30 to s3
208  20326                      CALL draw_line                 ; call the draw_line subroutine

209                             ;;============================================================================
209                             ;; Draws the letter T (Line 2)
209                             ;;============================================================================
209  010D2                      LOAD s0, D2                    ; load 200 into s0
20A  0111E                      LOAD s1, 1E                    ; load 30 into s1
20B  012D2                      LOAD s2, D2                    ; load 220 into s2
20C  0133C                      LOAD s3, 3C                    ; load 60 to s3
20D  20326                      CALL draw_line                 ; call the draw_line subroutine

20E                             ;;============================================================================
20E                             ;; Draws the letter E (Line 1)
20E                             ;;============================================================================
20E  010E6                      LOAD s0, E6                    ; load 230 into s0
20F  0111E                      LOAD s1, 1E                    ; load 30 into s1
210  012E6                      LOAD s2, E6                    ; load 230 into s2
211  0133C                      LOAD s3, 3C                    ; load 30 to s3
212  20326                      CALL draw_line                 ; call the draw_line subroutine

213                             ;;============================================================================
213                             ;; Draws the letter E (Line 2)
213                             ;;============================================================================
213  010E6                      LOAD s0, E6                    ; load 230 into s0
214  0111E                      LOAD s1, 1E                    ; load 30 into s1
215  012FA                      LOAD s2, FA                    ; load 250 into s2
216  0131E                      LOAD s3, 1E                    ; load 30 to s3
217  20326                      CALL draw_line                 ; call the draw_line subroutine

218                             ;;============================================================================
218                             ;; Draws the letter E (Line 3)
218                             ;;============================================================================
218  010E6                      LOAD s0, E6                    ; load 230 into s0
219  0112D                      LOAD s1, 2D                    ; load 30 into s1
21A  012FA                      LOAD s2, FA                    ; load 250 into s2
21B  0132D                      LOAD s3, 2D                    ; load 30 to s3
21C  20326                      CALL draw_line                 ; call the draw_line subroutine

21D                             ;;============================================================================
21D                             ;; Draws the letter E (Line 4)
21D                             ;;============================================================================
21D  010E6                      LOAD s0, E6                    ; load 230 into s0
21E  0113C                      LOAD s1, 3C                    ; load 30 into s1
21F  012FA                      LOAD s2, FA                    ; load 250 into s2
220  0133C                      LOAD s3, 3C                    ; load 30 to s3
221  20326                      CALL draw_line                 ; call the draw_line subroutine

222                             ;;============================================================================
222                             ;; NEW LINE STARTS HERE (GAME)
222                             ;;============================================================================

222                             ;;============================================================================
222                             ;; Draws the letter G (Line 1)
222                             ;;============================================================================
222  01046                      LOAD s0, 46                    ; load 70 into s0
223  0115A                      LOAD s1, 5A                    ; load 90 into s1
224  0125A                      LOAD s2, 5A                    ; load 90 into s2
225  0135A                      LOAD s3, 5A                    ; load 90 to s3
226  20326                      CALL draw_line                 ; call the draw_line subroutine

227                             ;;============================================================================
227                             ;; Draws the letter G (Line 2)
227                             ;;============================================================================
227  01046                      LOAD s0, 46                    ; load 70 into s0
228  0115A                      LOAD s1, 5A                    ; load 90 into s1
229  01246                      LOAD s2, 46                    ; load 90 into s2
22A  01378                      LOAD s3, 78                    ; load 90 to s3
22B  20326                      CALL draw_line                 ; call the draw_line subroutine

22C                             ;;============================================================================
22C                             ;; Draws the letter G (Line 3)
22C                             ;;============================================================================
22C  01046                      LOAD s0, 46                    ; load 70 into s0
22D  01178                      LOAD s1, 78                    ; load 90 into s1
22E  0125A                      LOAD s2, 5A                    ; load 90 into s2
22F  01378                      LOAD s3, 78                    ; load 90 to s3
230  20326                      CALL draw_line                 ; call the draw_line subroutine

231                             ;;============================================================================
231                             ;; Draws the letter G (Line 4)
231                             ;;============================================================================
231  0105A                      LOAD s0, 5A                    ; load 70 into s0
232  01169                      LOAD s1, 69                    ; load 90 into s1
233  0125A                      LOAD s2, 5A                    ; load 90 into s2
234  01378                      LOAD s3, 78                    ; load 90 to s3
235  20326                      CALL draw_line                 ; call the draw_line subroutine

236                             ;;============================================================================
236                             ;; Draws the letter G (Line 5)
236                             ;;============================================================================
236  0105A                      LOAD s0, 5A                    ; load 70 into s0
237  01169                      LOAD s1, 69                    ; load 90 into s1
238  01250                      LOAD s2, 50                    ; load 90 into s2
239  01369                      LOAD s3, 69                    ; load 90 to s3
23A  20326                      CALL draw_line                 ; call the draw_line subroutine

23B  25000                      RETURN                         ; leave start_screen subroutine

23C                             ;;============================================================================
23C                             ;; Draw Helicopter - Draw Helicopter Subroutine
23C                             ;;============================================================================

23C            draw_helicopter:

23C  20280                      CALL draw_helicopter_cockpit   ; call the subroutine to draw the cockpit
23D  202F4                      CALL draw_helicopter_blades    ; call the subroutine to draw the blades
23E  202BF                      CALL draw_helicopter_tail      ; call the subroutine to draw the tail
23F  20308                      CALL draw_helicopter_smoke     ; call the subroutine to draw the smoke

240  25000                      RETURN                         ; go back from drawing helicopter


241                             ;;============================================================================
241                             ;; Draw Block - Draw Block Subroutine
241                             ;;============================================================================

241                 draw_block:

241                             ;;============================================================================
241                             ;; Draws Top Line of Block
241                             ;;============================================================================

241  005E0                      LOAD s5, se                    ; load 255 into s5 (horizontal center of block)
242  016E1                      LOAD s6, E1                    ; load 245 into s6
243  1C650                      COMPARE s6, s5                 ; checking if the block is done "peaking out" from the right (initial compare: 245 ? 255)
244  3A24A                      JUMP C, right_edge             ; jump to right_edge
245  0160A                      LOAD s6, 0A                    ; load 10 into s6
246  1C560                      COMPARE s5, s6                 ; comparing s5 and s6
247  3A24E                      JUMP C, left_edge              ; jump to left_edge
248  3224E                      JUMP Z, left_edge              ; jump to left_edge
249  22252                      JUMP in_middle                 ; jump to in_middle

24A  2D500          right_edge: OUTPUT s5, stax                ; set desired stax
24B  1950A                      SUB s5, 0A                     ;
24C  2D502                      OUTPUT s5, endx                ; set desired stax
24D  22255                      JUMP finished1                 ; jump to draw_ys

24E  2D500           left_edge: OUTPUT s5, stax                ; set desired stax
24F  01600                      LOAD s6, 00                    ; put 255 into s5
250  2D602                      OUTPUT s6, endx                ; set desired stax
251  22255                      JUMP finished1                 ; jump to draw_ys

252                  in_middle:
252  2D500                      OUTPUT s5, stax                ; set desired stax
253  1950A                      SUB s5, 0A                     ; subtract the width of block to get the other x coordinate
254  2D502                      OUTPUT s5, endx                ; set desired endx

255  2DF01           finished1: OUTPUT sf, stay                ; set desired stay
256  2DF03                      OUTPUT sf, endy                ; set desired endy
257  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

258                             ;;============================================================================
258                             ;; Draws Bottom Line of Block
258                             ;;============================================================================

258  005F0                      LOAD s5, sf                    ; load sF into s5
259  1153C                      ADD s5, 3C                     ; add 40 to s5
25A  2D501                      OUTPUT s5, stay                ; set desired stay
25B  2D503                      OUTPUT s5, endy                ; set desired endy
25C  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

25D                             ;;============================================================================
25D                             ;; Draws Right Vertical Line of Block
25D                             ;;============================================================================

25D  2DE00                      OUTPUT se, stax                ; set desired stax
25E  2DE02                      OUTPUT se, endx                ; set desired endx
25F  2DF01                      OUTPUT sf, stay                ; set desired stay
260  005F0                      LOAD s5, sf                    ; load sF into s5
261  1153C                      ADD s5, 3C                     ; add 60 to y coordinate
262  2D503                      OUTPUT s5, endy                ; set desired endy
263  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

264                             ;;============================================================================
264                             ;; Draws Left Vertical Line of Block
264                             ;;============================================================================

264  005E0                      LOAD s5, se                    ; load sE into s5
265  1950A                      SUB s5, 0A                     ; subtract 10 from s5
266  2D500                      OUTPUT s5, stax                ; set desired stax
267  2D502                      OUTPUT s5, endx                ; set desired endx
268  2DF01                      OUTPUT sf, stay                ; set desired stay
269  005F0                      LOAD s5, sf                    ; load sF into s5
26A  1153C                      ADD s5, 3C                     ; add 60 to y coordinate
26B  2D503                      OUTPUT s5, endy                ; set desired endy
26C  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)
26D  25000                      RETURN                         ; finished with draw_block subroutine



26E                             ;;============================================================================
26E                             ;; Random Block Location - Random Block Location Subroutine
26E                             ;;============================================================================

26E        random_block_location:
26E  1DE00                      COMPARE se, 00                 ; is it time to create a new variable?
26F  32272                      JUMP Z, new_random             ; jump to new random creator
270  36271                      JUMP NZ, skip_everything       ; goes back

271  25000     skip_everything: RETURN                         ; returns back (no new rand. number)

272  09507          new_random: INPUT s5, prng                 ; create to new random number
273  1D50F                      COMPARE s5, 0F                 ; check if it's in range
274  3E276                      JUMP NC, check_other_bound_range ; check lower bound of map
275  3A272                      JUMP C, new_random             ; get new variable

276        check_other_bound_range:
276  1D5B4                      COMPARE s5, B4                 ; compare s5 to 180
277  3E272                      JUMP NC, new_random            ; get a new random number
278  00F50                      LOAD sf, s5                    ; a new y coordinate generated
279  25000                      RETURN                         ; get out of subroutine

27A                             ;;============================================================================
27A                             ;; Move Helicopter Up - Move Helicopter Up Subroutine
27A                             ;;============================================================================

27A               move_heli_up:
27A  1DC15                      COMPARE sc, 15                 ; check if the helicopter is colliding with top wall
27B  3627E                      JUMP NZ, decrement             ; if not colliding, then move helicopter appropriately
27C  3E27E                      JUMP NC, decrement             ; necessary as well
27D  25000                      RETURN                         ; do not increment if colliding with top wall
27E                  decrement:
27E  19C02                      SUB sc, 02                     ; move the helicopter up
27F  25000                      RETURN                         ; get out of subroutine

280                             ;;============================================================================
280                             ;; Draw Helicopter Cockpit - Draw Helicopter Cockpit Subroutine
280                             ;;============================================================================

280        draw_helicopter_cockpit:

280                             ;;============================================================================
280                             ;; Draws Cockpit of Helicopter (Line 1a)
280                             ;;============================================================================

280                             ;; STARTING POINT
280  01564                      LOAD s5, 64                    ; load 100 into s5
281  2D500                      OUTPUT s5, stax                ; set desired stax
282  006C0                      LOAD s6, sc                    ; load sC into s5
283  2D601                      OUTPUT s6, stay                ; set desired stay

284                             ;; ENDING POINT
284  19501                      SUB s5, 01                     ; subtract 7 from s5
285  2D502                      OUTPUT s5, endx                ; set desired endx
286  19603                      SUB s6, 03                     ; go up by 5
287  2D603                      OUTPUT s6, endy                ; set desired endy
288  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

289                             ;;============================================================================
289                             ;; Draws Cockpit of Helicopter (Line 1b)
289                             ;;============================================================================

289                             ;; STARTING POINT
289  01564                      LOAD s5, 64                    ; load 100 into s5
28A  19501                      SUB s5, 01                     ; subtract 7 from s5
28B  2D500                      OUTPUT s5, stax                ; set desired stax
28C  006C0                      LOAD s6, sc                    ; load sC into s5
28D  19603                      SUB s6, 03                     ; go up by 5
28E  2D601                      OUTPUT s6, stay                ; set desired stay

28F                             ;; ENDING POINT
28F  19504                      SUB s5, 04                     ; subtract 7 from s5
290  2D502                      OUTPUT s5, endx                ; set desired endx
291  19602                      SUB s6, 02                     ; go up by 5
292  2D603                      OUTPUT s6, endy                ; set desired endy
293  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)


294                             ;;============================================================================
294                             ;; Draws Cockpit of Helicopter (Line 2a)
294                             ;;============================================================================

294                             ;; STARTING POINT
294  01564                      LOAD s5, 64                    ; load 100 into s5
295  2D500                      OUTPUT s5, stax                ; set desired stax
296  006C0                      LOAD s6, sc                    ; load sC into s5
297  2D601                      OUTPUT s6, stay                ; set desired stay

298                             ;; ENDING POINT
298  19501                      SUB s5, 01                     ; subtract 1 from s5
299  2D502                      OUTPUT s5, endx                ; set desired endx
29A  11603                      ADD s6, 03                     ; go down by 3
29B  2D603                      OUTPUT s6, endy                ; set desired endy
29C  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

29D                             ;;============================================================================
29D                             ;; Draws Cockpit of Helicopter (Line 2b)
29D                             ;;============================================================================

29D                             ;; STARTING POINT
29D  01564                      LOAD s5, 64                    ; load 100 into s5
29E  19501                      SUB s5, 01                     ; subtract 1 from s5
29F  2D500                      OUTPUT s5, stax                ; set desired stax
2A0  006C0                      LOAD s6, sc                    ; load sC into s5
2A1  11603                      ADD s6, 03                     ; go down by 3
2A2  2D601                      OUTPUT s6, stay                ; set desired stay

2A3                             ;; ENDING POINT
2A3  19504                      SUB s5, 04                     ; subtract 7 from s5
2A4  2D502                      OUTPUT s5, endx                ; set desired endx
2A5  11602                      ADD s6, 02                     ; go down by 5
2A6  2D603                      OUTPUT s6, endy                ; set desired endy
2A7  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2A8                             ;;============================================================================
2A8                             ;; Draws Cockpit of Helicopter (Line 3)
2A8                             ;;============================================================================

2A8                             ;; STARTING POINT
2A8  01564                      LOAD s5, 64                    ; load 100 into s5
2A9  19505                      SUB s5, 05                     ; load 7 into s5
2AA  2D500                      OUTPUT s5, stax                ; set desired stax
2AB  006C0                      LOAD s6, sc                    ; load sC into s5
2AC  19605                      SUB s6, 05                     ; go up by 5 using subtraction
2AD  2D601                      OUTPUT s6, stay                ; set desired stay

2AE                             ;; ENDING POINT
2AE  19507                      SUB s5, 07                     ; subtract 5 from s5
2AF  2D502                      OUTPUT s5, endx                ; set desired endx
2B0  11605                      ADD s6, 05                     ; go down by 5
2B1  2D603                      OUTPUT s6, endy                ; set desired endy
2B2  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2B3                             ;;============================================================================
2B3                             ;; Draws Cockpit of Helicopter (Line 4)
2B3                             ;;============================================================================

2B3                             ;; STARTING POINT
2B3  01564                      LOAD s5, 64                    ; load 100 into s5
2B4  19505                      SUB s5, 05                     ; load 7 into s5
2B5  2D500                      OUTPUT s5, stax                ; set desired stax
2B6  006C0                      LOAD s6, sc                    ; load sC into s5
2B7  11605                      ADD s6, 05                     ; go down by 5 using addition
2B8  2D601                      OUTPUT s6, stay                ; set desired stay

2B9                             ;; ENDING POINT
2B9  19507                      SUB s5, 07                     ; subtract 5 from s5
2BA  2D502                      OUTPUT s5, endx                ; set desired endx
2BB  19605                      SUB s6, 05                     ; go back up by 5
2BC  2D603                      OUTPUT s6, endy                ; set desired endy
2BD  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2BE  25000                      RETURN                         ; go back from subroutine

2BF                             ;;============================================================================
2BF                             ;; Draw Helicopter Tail - Draw Helicopter Tail Subroutine
2BF                             ;;============================================================================

2BF        draw_helicopter_tail:

2BF                             ;;============================================================================
2BF                             ;; Draws Tail of Helicopter (Line 1)
2BF                             ;;============================================================================

2BF                             ;; STARTING POINT
2BF  01564                      LOAD s5, 64                    ; load 100 into s5
2C0  1950A                      SUB s5, 0A                     ; subtract 0xA from s5
2C1  2D500                      OUTPUT s5, stax                ; set desired stax
2C2  006C0                      LOAD s6, sc                    ; load sC into s5
2C3  19602                      SUB s6, 02                     ; subtract 2 from s6
2C4  2D601                      OUTPUT s6, stay                ; set desired stay

2C5                             ;; ENDING POINT
2C5  19507                      SUB s5, 07                     ; subtract 7 from s5
2C6  2D502                      OUTPUT s5, endx                ; set desired endx
2C7  2D603                      OUTPUT s6, endy                ; set desired endy
2C8  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2C9                             ;;============================================================================
2C9                             ;; Draws Tail of Helicopter (Line 2)
2C9                             ;;============================================================================

2C9                             ;; STARTING POINT
2C9  01564                      LOAD s5, 64                    ; load 100 into s5
2CA  1950C                      SUB s5, 0C                     ; subtract 0xC from s5
2CB  2D500                      OUTPUT s5, stax                ; set desired stax
2CC  006C0                      LOAD s6, sc                    ; load sC into s5
2CD  2D601                      OUTPUT s6, stay                ; set desired stay

2CE                             ;; ENDING POINT
2CE  19508                      SUB s5, 08                     ; subtract 7 from s5
2CF  2D502                      OUTPUT s5, endx                ; set desired endx
2D0  2D603                      OUTPUT s6, endy                ; set desired endy
2D1  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2D2                             ;;============================================================================
2D2                             ;; Draws Tail of Helicopter (Line 3)
2D2                             ;;============================================================================

2D2                             ;; STARTING POINT
2D2  01564                      LOAD s5, 64                    ; load 100 into s5
2D3  1950A                      SUB s5, 0A                     ; subtract 0x0A from s5
2D4  19508                      SUB s5, 08                     ; subtract 0x10 from s5
2D5  2D500                      OUTPUT s5, stax                ; set desired stax
2D6  006C0                      LOAD s6, sc                    ; load sC into s5
2D7  19602                      SUB s6, 02                     ; subtract 2 from s6
2D8  2D601                      OUTPUT s6, stay                ; set desired stay

2D9                             ;; ENDING POINT
2D9  19502                      SUB s5, 02                     ; subtract 2 from s5
2DA  2D502                      OUTPUT s5, endx                ; set desired endx
2DB  19602                      SUB s6, 02                     ; subtract 2 from s6
2DC  2D603                      OUTPUT s6, endy                ; set desired endy
2DD  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2DE                             ;;============================================================================
2DE                             ;; Draws Tail of Helicopter (Line 4)
2DE                             ;;============================================================================

2DE                             ;; STARTING POINT
2DE  01564                      LOAD s5, 64                    ; load 100 into s5
2DF  1950C                      SUB s5, 0C                     ; subtract 0x0C from s5
2E0  19509                      SUB s5, 09                     ; subtract 0x09 from s5
2E1  2D500                      OUTPUT s5, stax                ; set desired stax
2E2  006C0                      LOAD s6, sc                    ; load sC into s5
2E3  2D601                      OUTPUT s6, stay                ; set desired stay

2E4                             ;; ENDING POINT
2E4                             ;SUB s5, 01                          ; subtract 2 from s5
2E4  2D502                      OUTPUT s5, endx                ; set desired endx
2E5  11601                      ADD s6, 01                     ; add 1 to s6
2E6  2D603                      OUTPUT s6, endy                ; set desired endy
2E7  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2E8                             ;;============================================================================
2E8                             ;; Draws Tail of Helicopter (Line 5)
2E8                             ;;============================================================================

2E8                             ;; STARTING POINT
2E8  01564                      LOAD s5, 64                    ; load 100 into s5
2E9  1950A                      SUB s5, 0A                     ; subtract 0x0A from s5
2EA  1950A                      SUB s5, 0A                     ; subtract 0x0A from s5
2EB  2D500                      OUTPUT s5, stax                ; set desired stax
2EC  006C0                      LOAD s6, sc                    ; load sC into s5
2ED  19604                      SUB s6, 04                     ; subtract 4 from s6
2EE  2D601                      OUTPUT s6, stay                ; set desired stay

2EF                             ;; ENDING POINT
2EF  2D502                      OUTPUT s5, endx                ; set desired endx
2F0  11605                      ADD s6, 05                     ; add 1 to s6
2F1  2D603                      OUTPUT s6, endy                ; set desired endy
2F2  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2F3  25000                      RETURN                         ; go back from subroutine

2F4                             ;;============================================================================
2F4                             ;; Draw Helicopter Blades - Draw Helicopter Blades Subroutine
2F4                             ;;============================================================================

2F4        draw_helicopter_blades:

2F4                             ;;============================================================================
2F4                             ;; Draws Blades of Helicopter (Line 1)
2F4                             ;;============================================================================

2F4                             ;; STARTING POINT
2F4  01564                      LOAD s5, 64                    ; load 100 into s5
2F5  19505                      SUB s5, 05                     ; subtract 0xA from s5
2F6  2D500                      OUTPUT s5, stax                ; set desired stax
2F7  006C0                      LOAD s6, sc                    ; load sC into s5
2F8  19605                      SUB s6, 05                     ; subtract 2 from s6
2F9  2D601                      OUTPUT s6, stay                ; set desired stay

2FA                             ;; ENDING POINT
2FA  2D502                      OUTPUT s5, endx                ; set desired endx
2FB  19602                      SUB s6, 02                     ; subtract 2 from s6
2FC  2D603                      OUTPUT s6, endy                ; set desired endy
2FD  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2FE                             ;;============================================================================
2FE                             ;; Draws Blades of Helicopter (Line 2)
2FE                             ;;============================================================================

2FE                             ;; STARTING POINT
2FE  01564                      LOAD s5, 64                    ; load 100 into s5
2FF  2D500                      OUTPUT s5, stax                ; set desired stax
300  006C0                      LOAD s6, sc                    ; load sC into s5
301  19607                      SUB s6, 07                     ; subtract 2 from s6
302  2D601                      OUTPUT s6, stay                ; set desired stay

303                             ;; ENDING POINT
303  1950A                      SUB s5, 0A                     ; subtract 10 from s5
304  2D502                      OUTPUT s5, endx                ; set desired endx
305  2D603                      OUTPUT s6, endy                ; set desired endy
306  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

307  25000                      RETURN                         ; go back from subroutine

308                             ;;============================================================================
308                             ;; Draw Helicopter Smoke - Draw Helicopter Smoke Subroutine
308                             ;;============================================================================

308        draw_helicopter_smoke:

308                             ;;============================================================================
308                             ;; Draws Smoke of Helicopter (Line 1)
308                             ;;============================================================================

308                             ;; Start Point
308  01564                      LOAD s5, 64                    ; load 100 into s5
309  19528                      SUB s5, 28                     ; position starting smoke right point of line 1
30A  2D500                      OUTPUT s5, stax                ; output to starting x position of line 1

30B  006C0                      LOAD s6, sc                    ; load helicopter smoke vertical position for line 1
30C  2D601                      OUTPUT s6, stay                ; output to starting y position of line 1
30D                             ;;

30D                             ;; End Point
30D  19504                      SUB s5, 04                     ; position starting smoke left point of line 1
30E  2D502                      OUTPUT s5, endx                ; output to starting y position of line 1

30F  2D603                      OUTPUT s6, endy                ; output to ending y position of line 1, matching helicopter
310  20330                      CALL old_draw_line             ;draws a line (careful: this subroutine overwrites s5)
311                             ;;

311                             ;;============================================================================
311                             ;; Draws Smoke of Helicopter (Line 2)
311                             ;;============================================================================

311                             ;; Start Point
311  01564                      LOAD s5, 64                    ; load 100 into s5
312  19534                      SUB s5, 34                     ; position starting smoke right point of line 2
313  2D500                      OUTPUT s5, stax                ; output to starting x position of line 2

314  006C0                      LOAD s6, sc                    ; load starting smoke vertical position for line 2
315  11604                      ADD s6, 04                     ; add 4 to s6 (shift down by 4)
316  2D601                      OUTPUT s6, stay                ; output to starting y position of line 2
317                             ;;

317                             ;; End Point
317  19504                      SUB s5, 04                     ; subtract s5 by 4 for length of line
318  2D502                      OUTPUT s5, endx                ; output to endx

319  2D603                      OUTPUT s6, endy                ; outputs vertical locaton of smoke line 2
31A  20330                      CALL old_draw_line             ;draws a line (careful: this subroutine overwrites s5)
31B                             ;;

31B                             ;;============================================================================
31B                             ;; Draws Smoke of Helicopter (Line 3)
31B                             ;;============================================================================

31B                             ;; Start Point
31B  01564                      LOAD s5, 64                    ; load 100 into s5
31C  19540                      SUB s5, 40                     ; position starting smoke right point of line 3
31D  2D500                      OUTPUT s5, stax                ; output to starting x position of line 3

31E  006C0                      LOAD s6, sc                    ; load starting smoke vertical position for line 3
31F  19604                      SUB s6, 04                     ; add 4 to s6 (shift down by 4)
320  2D601                      OUTPUT s6, stay                ; output to starting y position of line 3
321                             ;;

321                             ;; End Point
321  19504                      SUB s5, 04                     ; subtract s5 by 4 for length of line
322  2D502                      OUTPUT s5, endx                ; output to endx

323  2D603                      OUTPUT s6, endy                ; output same y position of line 3
324  20330                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)
325                             ;;

325  25000                      RETURN                         ; go back to subroutine



326                             ;;============================================================================
326                             ;; Draw Line - Draw Line Subroutine
326                             ;;============================================================================

326  2D000           draw_line: OUTPUT s0, stax                ; write stax
327  2D101                      OUTPUT s1, stay                ; write stay
328  2D202                      OUTPUT s2, endx                ; write endx
329  2D303                      OUTPUT s3, endy                ; write endy
32A  01501                      LOAD s5, busy_go               ; load go command
32B  2D504                      OUTPUT s5, busy                ; send go command
32C  09504                wait: INPUT s5, busy                 ; read busy status
32D  1D501                      COMPARE s5, busy_go            ; check busy status
32E  3232C                      JUMP Z, wait                   ; if busy, wait more
32F  25000                      RETURN                         ; leave line drawing subroutine

330                             ;;============================================================================
330                             ;; Old Draw Line - Old Draw Line Subroutine (WILL DELETE LATER)
330                             ;;============================================================================

330              old_draw_line:
330  01501                      LOAD s5, busy_go               ; load go command
331  2D504                      OUTPUT s5, busy                ; send go command
332  09504               wait0: INPUT s5, busy                 ; read busy status
333  1D501                      COMPARE s5, busy_go            ; check busy status
334  32332                      JUMP Z, wait0                  ; if busy, wait more
335  25000                      RETURN                         ; leave line drawing subroutine

336                             ;;============================================================================
336                             ;; Check Collisions - Check Collisions Subroutine
336                             ;;============================================================================

336            check_collision:
336                             ;;============================================================================
336                             ;; Check Collisions with Map (top wall)
336                             ;;============================================================================
336  01560                      LOAD s5, 60                    ; position of heli/wall collision
337  0180F                      LOAD s8, 0F                    ; top wall vertical coordinate (15)
338  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
339  1960A                      SUB s6, 0A                     ; the helicopter's blades 10 pixels higher
33A  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
33B  1C860                      COMPARE s8, s6                 ; check if the two intersect
33C  32357                      JUMP Z, collision_occurred     ; jump to collision occurred
33D  3E357                      JUMP NC, collision_occurred    ; jump to collision occurred (necessary)

33E                             ;;============================================================================
33E                             ;; Check Collisions with Map (bottom wall)
33E                             ;;============================================================================
33E  018F0                      LOAD s8, F0                    ; bottom wall vertical coordinate (240)
33F  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
340  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
341  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
342  1C860                      COMPARE s8, s6                 ; check if the two intersect
343  32357                      JUMP Z, collision_occurred     ; jump to collision occurred

344                             ;;============================================================================
344                             ;; Check Collisions with Block
344                             ;;============================================================================

344  005E0                      LOAD s5, se                    ; get current horizontal position of block
345  1950A                      SUB s5, 0A                     ; actual block is 10 pixels back
346  1D564                      COMPARE s5, 64                 ; check if s5 coincides with heli (horizontal check)
347  32349                      JUMP Z, check_vertical         ; jump to check vertical positioning
348  36353                      JUMP NZ, no_collision          ; jump to no_collision routine

349             check_vertical:
349  006F0                      LOAD s6, sf                    ; get current vertical position of block
34A  007C0                      LOAD s7, sc                    ; load helicopter front position
34B  1C760                loop: COMPARE s7, s6                 ; compare s7 and s6
34C  32357                      JUMP Z, collision_occurred     ; jump to collision_occured
34D  11601                      ADD s6, 01                     ; add one to s6
34E  008F0                      LOAD s8, sf                    ; load original value for reference only
34F  1183C                      ADD s8, 3c                     ; add 60 to s8
350  1C680                      COMPARE s6, s8                 ; compare s6 to bottom of block (s8)
351  32353                      JUMP Z, no_collision           ; jump to no_collision routine
352  3634B                      JUMP NZ, loop                  ; keep looping

353  19E01        no_collision: SUB se, 01                     ; decrement sE
354  11C01                      ADD sc, 01                     ; increment sC
355  20360                      CALL distance                  ; used for keeping the score (increments distance)
356  25000                      RETURN                         ; leave, since no collisions occurred

357         collision_occurred:
357  2D500                      OUTPUT s5, stax                ; set desired stax
358  2D701                      OUTPUT s7, stay                ; set desired stay
359  09807                      INPUT s8, prng                 ; load random endx
35A  2D802                      OUTPUT s8, endx                ; set random endx
35B  09807                      INPUT s8, prng                 ; load random endy
35C  2D803                      OUTPUT s8, endy                ; set random endy
35D  20326                      CALL draw_line                 ; draw random line

35E  01902                      LOAD s9, GAMEOVER_STATE        ; should go to gameover state instead
35F  25000                      RETURN                         ; return from routine without any increments

360                             ;;============================================================================
360                             ;; Distance - Distance Subroutine
360                             ;;============================================================================

360  2DB0A            distance: OUTPUT sb, qssd_lo             ; put distance value to qssd
361  1DBFF                      COMPARE sb, FF                 ; check if max (FF) was reached
362  32365                      JUMP Z, distance2              ; jump to distance2
363  11B01                      ADD sb, one                    ; increment distance value
364  25000                      RETURN                         ; finished with distance subroutine

365  11A01           distance2: ADD sa, one                    ; add one to the next degree
366  01B00                      LOAD sb, zero                  ; reset sB
367  2DB0A                      OUTPUT sb, qssd_lo             ; put distance value to qssd
368  2DA0B                      OUTPUT sa, qssd_hi             ; put distance value to qssd
369  25000                      RETURN                         ; finished with distance subroutine

7FF                             ;;============================================================================
7FF                             ;; Interrupt - Vector.
7FF                             ;;============================================================================

7FF                             ADDRESS 7FF                    ; must be located here
7FF  22012          isr_vector: JUMP isr                       ; always jump to isr

800                             ;;============================================================================
800                             ;;
800                             ;;============================================================================


PSM files that have been assembled
----------------------------------
    /home/adnan/Documents/School/EE178/fpga_video_game/latest_fpga_video_game/software/software.psm


List of defined constants
-------------------------
   CONSTANT name      Value  Source PSM file
   -------------      -----  ---------------
   BEL                07
   BS                 08
   CR                 0D
   CREDITS_STATE      03     software.psm
   DCS                90
   DEL                7F
   ESC                1B
   GAMEOVER_STATE     02     software.psm
   HT                 09
   LF                 0A
   NUL                00
   PLAY_STATE         01     software.psm
   ST                 9C
   START_STATE        00     software.psm
   VT                 0B
   beam               05     software.psm
   beam_hi            0f     software.psm
   beam_lo            03     software.psm
   beam_md            07     software.psm
   busy               04     software.psm
   busy_go            01     software.psm
   buttons            0f     software.psm
   buttons_ct         10     software.psm
   buttons_dn         04     software.psm
   buttons_lf         02     software.psm
   buttons_rt         01     software.psm
   buttons_up         08     software.psm
   datestamp_day      1E
   datestamp_month    0B
   datestamp_year     0F
   endx               02     software.psm
   endy               03     software.psm
   leds_hi            09     software.psm
   leds_lo            08     software.psm
   mode               06     software.psm
   mode_clr           01     software.psm
   mode_exp           03     software.psm
   mode_hld           00     software.psm
   mode_lin           02     software.psm
   one                01     software.psm
   prng               07     software.psm
   qssd_dp            0c     software.psm
   qssd_hi            0b     software.psm
   qssd_lo            0a     software.psm
   stax               00     software.psm
   stay               01     software.psm
   switches_hi        0e     software.psm
   switches_lo        0d     software.psm
   timestamp_hours    15
   timestamp_minutes  17
   timestamp_seconds  21
   zero               00     software.psm


  No tables defined


List of text strings
--------------------
   STRING name  Value          Source PSM file
   -----------  -----          ---------------
   datestamp$   "30 Nov 2015"
   timestamp$   "21:23:33"


List of line labels
-------------------
    Label                    Addr  Source PSM file
 --------                    ----  ---------------
 *  boot                     000   software.psm
    check_collision          336   software.psm
    check_other_bound_range  276   software.psm
    check_vertical           349   software.psm
    collision_occurred       357   software.psm
    decrement                27E   software.psm
    distance                 360   software.psm
    distance2                365   software.psm
    draw_block               241   software.psm
    draw_helicopter          23C   software.psm
    draw_helicopter_blades   2F4   software.psm
    draw_helicopter_cockpit  280   software.psm
    draw_helicopter_smoke    308   software.psm
    draw_helicopter_tail     2BF   software.psm
    draw_line                326   software.psm
    enter_play_state         01F   software.psm
    enter_play_state2        027   software.psm
    finished1                255   software.psm
    gameover                 022   software.psm
    in_middle                252   software.psm
    isr                      012   software.psm
 *  isr_vector               7FF   software.psm
    left_edge                24E   software.psm
    loop                     34B   software.psm
    main                     011   software.psm
    map                      03C   software.psm
    move_heli_up             27A   software.psm
    new_random               272   software.psm
    no_collision             353   software.psm
    old_draw_line            330   software.psm
    play                     032   software.psm
    random_block_location    26E   software.psm
    right_edge               24A   software.psm
    skip_everything          271   software.psm
    start                    019   software.psm
    start_screen             047   software.psm
    stay_in_gameover_state   031   software.psm
    stay_in_start_state      021   software.psm
    wait                     32C   software.psm
    wait0                    332   software.psm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          17
   ADDCY        -
   AND          -
   CALL         123
   CALL@        -
   COMPARE      20
   COMPARECY    -
   DISABLE      -
   ENABLE       1
   FETCH        -
   HWBUILD      -
   INPUT        11
   JUMP         30
   JUMP@        -
   LOAD         409
   LOAD&RETURN  -
   OR           -
   OUTPUT       191
   OUTPUTK      -
   REGBANK      -
   RETURN       23
   RETURNI      1
   RL           -
   RR           -
   SL0          -
   SL1          -
   SLA          -
   SLX          -
   SR0          -
   SR1          -
   SRA          -
   SRX          -
   STAR         -
   STORE        -
   SUB          49
   SUBCY        -
   TEST         -
   TESTCY       -
   XOR          -
