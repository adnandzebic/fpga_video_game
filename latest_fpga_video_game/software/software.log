Open Picoblaze Assembler log for program "software.psm"
Generated by opbasm v 1.2
  Assembled on 2015-12-01T22:19:05
  Picoblaze-6 mode

  Last occupied address: 7FF hex
  Nominal program memory size: 2K (2048)  address(10:0)
  Actual memory size: 4096
  Occupied memory locations: 1037
  Memory locations available: 3059
  Scratchpad size: 256


Assembly listing
----------------
000                             ;;============================================================================
000                             ;; File: software.psm
000                             ;; This is the PicoBlaze program for EE178 Lab #8.
000                             ;;============================================================================

000                             ;;============================================================================
000                             ;; Port address declarations.
000                             ;;============================================================================

000                             CONSTANT stax, 00              ; port for 8-bit start-x
000                             CONSTANT stay, 01              ; port for 8-bit start-y
000                             CONSTANT endx, 02              ; port for 8-bit end-x
000                             CONSTANT endy, 03              ; port for 8-bit end-y
000                             CONSTANT busy, 04              ; port for 8-bit busy
000                             CONSTANT beam, 05              ; port for 8-bit beam
000                             CONSTANT mode, 06              ; port for 8-bit mode
000                             CONSTANT prng, 07              ; port for 8-bit prng
000                             CONSTANT leds_lo, 08           ; port for 8-bit led data out
000                             CONSTANT leds_hi, 09           ; port for 8-bit led data out
000                             CONSTANT qssd_lo, 0a           ; port for 8-bit qssd data out
000                             CONSTANT qssd_hi, 0b           ; port for 8-bit qssd data out
000                             CONSTANT qssd_dp, 0c           ; port for 8-bit qssd data out
000                             CONSTANT switches_lo, 0d       ; port for 8-bit switch input
000                             CONSTANT switches_hi, 0e       ; port for 8-bit switch input
000                             CONSTANT buttons, 0f           ; port for 8-bit button input
000                             CONSTANT red, 10               ; port for 8-bit red value
000                             CONSTANT green, 11             ; port for 8-bit green value
000                             CONSTANT blue, 11              ; port for 8-bit green value

000                             CONSTANT zero, 00              ; zero
000                             CONSTANT one, 01               ; one

000                             CONSTANT busy_go, 01           ; go command and busy status

000                             CONSTANT beam_hi, 0f           ; beam high intensity
000                             CONSTANT beam_md, 07           ; beam med intensity
000                             CONSTANT beam_lo, 03           ; beam low intensity

000                             CONSTANT mode_hld, 00          ; mode hold framebuffer
000                             CONSTANT mode_clr, 01          ; mode clear framebuffer
000                             CONSTANT mode_lin, 02          ; mode linear decay
000                             CONSTANT mode_exp, 03          ; mode exponential decay

000                             CONSTANT buttons_ct, 10        ; center
000                             CONSTANT buttons_up, 08        ; up
000                             CONSTANT buttons_dn, 04        ; down
000                             CONSTANT buttons_lf, 02        ; left
000                             CONSTANT buttons_rt, 01        ; right

000                             CONSTANT start_menu_1, 00      ;
000                             CONSTANT start_menu_2, 3C      ;
000                             CONSTANT start_menu_3, 78      ;

000                             ;;============================================================================
000                             ;; Macro State declarations
000                             ;;============================================================================

000                             CONSTANT START_STATE, 00       ; start screen state
000                             CONSTANT PLAY_STATE, 01        ; play state
000                             CONSTANT GAMEOVER_STATE, 02    ; game over screen state
000                             CONSTANT CREDITS_STATE, 03     ; credits screen state (not used for now)

000                             ;;============================================================================
000                             ;; Boot.
000                             ;;============================================================================

000  01000                boot: LOAD s0, zero                  ; initialize
001  01100                      LOAD s1, zero                  ; initialize
002  01200                      LOAD s2, zero                  ; initialize
003  01300                      LOAD s3, zero                  ; initialize
004  01400                      LOAD s4, zero                  ; initialize
005  01900                      LOAD s9, START_STATE           ; initial state is to enter start screen
006  01A00                      LOAD sa, 00                    ; initial distance (score)
007  01B00                      LOAD sb, 00                    ; initial distance (score)
008  01C80                      LOAD sc, 80                    ; starting helicopter position
009  01D05                      LOAD sd, 05                    ; initialize (needed later)
00A  01EFF                      LOAD se, FF                    ; load 255 into sE (horizontal coordinate of block)
00B  01F62                      LOAD sf, 62                    ; load 108 into sF (vertical coordinate of block)
00C  01503                      LOAD s5, mode_exp              ; load desired mode
00D  2D506                      OUTPUT s5, mode                ; set desired mode
00E  0150F                      LOAD s5, beam_hi               ; load desired beam
00F  2D505                      OUTPUT s5, beam                ; set desired beam
010  015FF                      LOAD s5, FF                    ; load FF into s5 (red value)
011  2D510                      OUTPUT s5, red                 ; set desired red
012  28001                      ENABLE INTERRUPT               ; enable interrupts

013                             ;;============================================================================
013                             ;; Main.
013                             ;;============================================================================

013                       main:
013  22013                      JUMP main                      ; go back and repeat

014                             ;;============================================================================
014                             ;; Interrupt - Service Routine.
014                             ;;============================================================================

014                        isr:

014  1D900                      COMPARE s9, START_STATE        ; check if in the start state
015  3001B                      CALL Z, start                  ; call the start screen state
016  1D901                      COMPARE s9, PLAY_STATE         ; check if in the play state
017  3003F                      CALL Z, play                   ; call play subroutine
018  1D902                      COMPARE s9, GAMEOVER_STATE     ; check if in the gameover state
019  30024                      CALL Z, gameover               ; call the gameover subroutine

01A  29001                      RETURNI ENABLE                 ; done with isr

01B                             ;;============================================================================
01B                             ;; Start - Start Subroutine
01B                             ;;============================================================================

01B  0950F               start: INPUT s5, buttons              ; get center button values
01C  20054                      CALL start_screen              ; draw the map using map subroutine

01D  0950F                      INPUT s5, buttons              ; get button values
01E  1D510                      COMPARE s5, buttons_ct         ; check if center button is pressed
01F  32021                      JUMP Z, enter_play_state       ; jump to enter_play_state
020  36023                      JUMP NZ, stay_in_start_state   ; remain in current state with a jump to stay_in_start_state

021           enter_play_state:
021  01901                      LOAD s9, PLAY_STATE            ; load play_state and enter play mode
022  25000                      RETURN                         ; return from start subroutine

023        stay_in_start_state:
023  25000                      RETURN                         ; return from start subroutine

024                             ;;============================================================================
024                             ;; Game Over - Game Over Subroutine
024                             ;;============================================================================

024                   gameover:
024  20049                      CALL map                       ; draw the map using map subroutine
025  20294                      CALL draw_helicopter           ; draw the helicopter
026  20298                      CALL draw_block                ;
027  2028F                      CALL draw_gameover             ;


028  01564                      LOAD s5, 64                    ; collision point (horzintal)
029  2D500                      OUTPUT s5, stax                ; set desired stax
02A  2DC01                      OUTPUT sc, stay                ; set desired stay
02B  09807                      INPUT s8, prng                 ; load random endx
02C  2D802                      OUTPUT s8, endx                ; set random endx
02D  09807                      INPUT s8, prng                 ; load random endy
02E  2D803                      OUTPUT s8, endy                ; set random endy
02F  20389                      CALL old_draw_line             ; draw random line

030  0950F                      INPUT s5, buttons              ; get button values
031  1D508                      COMPARE s5, buttons_up         ; check if up button is pressed
032  32034                      JUMP Z, enter_play_state2      ; jump to enter_play_state2
033  3603E                      JUMP NZ, stay_in_gameover_state ; remain in current state with a jump to stay_in_gameover_state

034          enter_play_state2:
034  01901                      LOAD s9, PLAY_STATE            ; load play_state and enter play mode

035                             ;; RESET EVERYTHING BEFORE RETURNING
035  01A00                      LOAD sa, 00                    ; initial distance (score)
036  01B00                      LOAD sb, 00                    ; initial distance (score)
037  2DB0A                      OUTPUT sb, qssd_lo             ; reset qssd_lo
038  2DA0B                      OUTPUT sa, qssd_hi             ; reset qssd_hi
039  01C80                      LOAD sc, 80                    ; starting helicopter position
03A  01D05                      LOAD sd, 05                    ; initialize (needed later)
03B  01EFF                      LOAD se, FF                    ; load 255 into sE (horizontal coordinate of block)
03C  01F62                      LOAD sf, 62                    ; load 108 into sF (vertical coordinate of block)
03D  25000                      RETURN                         ; return from start subroutine

03E        stay_in_gameover_state:
03E  25000                      RETURN                         ; return from start subroutine

03F                             ;;============================================================================
03F                             ;; Play - Play Subroutine
03F                             ;;============================================================================

03F  0950F                play: INPUT s5, buttons              ; get center button values
040  20049                      CALL map                       ; draw the map using map subroutine

041  0950F                      INPUT s5, buttons              ; get button values
042  1D510                      COMPARE s5, buttons_ct         ; check if center button is pressed
043  302D3                      CALL Z, move_heli_up           ; call subroutine that moves the helicopter up

044  20294                      CALL draw_helicopter           ; draw the helicopter
045  202C5                      CALL random_block_location     ; determines a random place for the block (y direction only)
046  20298                      CALL draw_block                ; draw the block using draw_block subroutine
047  2038F                      CALL check_collision           ; check if any collisions happen

048  25000                      RETURN                         ; finished with play subroutine

049                             ;;============================================================================
049                             ;; Map - Draw Map Subroutine
049                             ;;============================================================================

049                        map:

049                             ;;============================================================================
049                             ;; Draws Top Line of Map (Line 1)
049                             ;;============================================================================

049  01000                      LOAD s0, 00                    ; load 00 into s0
04A  0110F                      LOAD s1, 0F                    ; load 0F into s1
04B  012FF                      LOAD s2, FF                    ; load FF into s2
04C  0130F                      LOAD s3, 0F                    ; load 0F into s3
04D  2037F                      CALL draw_line                 ; draws the line

04E                             ;;============================================================================
04E                             ;; Draws Bottom Line of Map (Line 2)
04E                             ;;============================================================================

04E  01000                      LOAD s0, 00                    ; load 00 into s0
04F  011F0                      LOAD s1, F0                    ; load 0F into s1
050  012FF                      LOAD s2, FF                    ; load FF into s2
051  013F0                      LOAD s3, F0                    ; load F0 into s3
052  2037F                      CALL draw_line                 ; draws the line

053  25000                      RETURN                         ; go back from drawing map

054                             ;;============================================================================
054                             ;; Start Screen - Draw Start Screen Subroutine
054                             ;;============================================================================

054               start_screen:
054                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
054                             ;; Code for PRESS START [START MENU] ;;
054                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

054                             ;;;;;;;;;;;;;;;
054                             ;;BEGIN PRESS;;
054                             ;;;;;;;;;;;;;;;

054                             ;; LINE 1 (LEFT) FOR P
054  01041                      LOAD s0, 41                    ; stax 65
055  011C8                      LOAD s1, C8                    ; stay 200
056  01241                      LOAD s2, 41                    ; endx 65
057  013D2                      LOAD s3, D2                    ; endy 210
058  2037F                      CALL draw_line                 ;

059                             ;; LINE 2 (TOP) FOR P
059  01041                      LOAD s0, 41                    ; stax 65
05A  011C8                      LOAD s1, C8                    ; stay 200
05B  01246                      LOAD s2, 46                    ; endx 70
05C  013C8                      LOAD s3, C8                    ; endy 200
05D  2037F                      CALL draw_line                 ;

05E                             ;; LINE 3 (RIGHT) FOR P
05E  01046                      LOAD s0, 46                    ; stax 70
05F  011C8                      LOAD s1, C8                    ; stay 200
060  01246                      LOAD s2, 46                    ; endx 70
061  013CD                      LOAD s3, CD                    ; endy 205
062  2037F                      CALL draw_line                 ;

063                             ;; LINE 4 (MIDDLE) FOR P
063  01041                      LOAD s0, 41                    ; stax 65
064  011CD                      LOAD s1, CD                    ; stay 205
065  01246                      LOAD s2, 46                    ; endx 70
066  013CD                      LOAD s3, CD                    ; endy 205
067  2037F                      CALL draw_line                 ;

068                             ;; LINE 1 (LEFT) FOR R
068  0104B                      LOAD s0, 4B                    ; stax 75
069  011C8                      LOAD s1, C8                    ; stay 200
06A  0124B                      LOAD s2, 4B                    ; endx 75
06B  013D2                      LOAD s3, D2                    ; endy 210
06C  2037F                      CALL draw_line                 ;

06D                             ;; LINE 2 (TOP) FOR R
06D  0104B                      LOAD s0, 4B                    ; stax 75
06E  011C8                      LOAD s1, C8                    ; stay 200
06F  01250                      LOAD s2, 50                    ; endx 80
070  013C8                      LOAD s3, C8                    ; endy 200
071  2037F                      CALL draw_line                 ;

072                             ;; LINE 3 (RIGHT) FOR R
072  01050                      LOAD s0, 50                    ; stax 80
073  011C8                      LOAD s1, C8                    ; stay 200
074  01250                      LOAD s2, 50                    ; endx 80
075  013CD                      LOAD s3, CD                    ; endy 205
076  2037F                      CALL draw_line                 ;

077                             ;; LINE 4 (MIDDLE) FOR R
077  0104B                      LOAD s0, 4B                    ; stax 75
078  011CD                      LOAD s1, CD                    ; stay 205
079  01250                      LOAD s2, 50                    ; endx 80
07A  013CD                      LOAD s3, CD                    ; endy 205
07B  2037F                      CALL draw_line                 ;

07C                             ;; LINE 5 (ANGLED) FOR R
07C  0104B                      LOAD s0, 4B                    ; stax 75
07D  011CD                      LOAD s1, CD                    ; stay 205
07E  01250                      LOAD s2, 50                    ; endx 80
07F  013D2                      LOAD s3, D2                    ; endy 210
080  2037F                      CALL draw_line                 ;


081                             ;; LINE 6 (ANGLED2) FOR R
081  0104B                      LOAD s0, 4B                    ; stax 75
082  011CE                      LOAD s1, CE                    ; stay 204
083  0124F                      LOAD s2, 4F                    ; endx 79
084  013D2                      LOAD s3, D2                    ; endy 210
085  2037F                      CALL draw_line                 ;

086                             ;; LINE 1 (LEFT) FOR E
086  01055                      LOAD s0, 55                    ; stax 85
087  011C8                      LOAD s1, C8                    ; stay 200
088  01255                      LOAD s2, 55                    ; endx 85
089  013D2                      LOAD s3, D2                    ; endy 210
08A  2037F                      CALL draw_line                 ;

08B                             ;; LINE 2 (TOP) FOR E
08B  01055                      LOAD s0, 55                    ; stax 85
08C  011C8                      LOAD s1, C8                    ; stay 200
08D  0125A                      LOAD s2, 5A                    ; endx 90
08E  013C8                      LOAD s3, C8                    ; endy 200
08F  2037F                      CALL draw_line                 ;

090                             ;; LINE 3 (MIDDLE) FOR E
090  01055                      LOAD s0, 55                    ; stax 85
091  011CD                      LOAD s1, CD                    ; stay 205
092  0125A                      LOAD s2, 5A                    ; endx 90
093  013CD                      LOAD s3, CD                    ; endy 205
094  2037F                      CALL draw_line                 ;

095                             ;; LINE 4 (BOTTOM) FOR E
095  01055                      LOAD s0, 55                    ; stax 85
096  011D2                      LOAD s1, D2                    ; stay 210
097  0125A                      LOAD s2, 5A                    ; endx 90
098  013D2                      LOAD s3, D2                    ; endy 210
099  2037F                      CALL draw_line                 ;

09A                             ;; LINE 1 (TOP) FOR S1
09A  0105F                      LOAD s0, 5F                    ; stax 95
09B  011C8                      LOAD s1, C8                    ; stay 200
09C  01264                      LOAD s2, 64                    ; endx 100
09D  013C8                      LOAD s3, C8                    ; endy 200
09E  2037F                      CALL draw_line                 ;

09F                             ;; LINE 2 (TOPLEFT) FOR S1
09F  0105F                      LOAD s0, 5F                    ; stax 95
0A0  011C8                      LOAD s1, C8                    ; stay 200
0A1  0125F                      LOAD s2, 5F                    ; endx 95
0A2  013CD                      LOAD s3, CD                    ; endy 205
0A3  2037F                      CALL draw_line                 ;

0A4                             ;; LINE 3 (MIDDLE) FOR S1
0A4  0105F                      LOAD s0, 5F                    ; stax 95
0A5  011CD                      LOAD s1, CD                    ; stay 205
0A6  01264                      LOAD s2, 64                    ; endx 100
0A7  013CD                      LOAD s3, CD                    ; endy 205
0A8  2037F                      CALL draw_line                 ;

0A9                             ;; LINE 4 (BOTTOMRIGHT) FOR S1
0A9  01064                      LOAD s0, 64                    ; stax 100
0AA  011CD                      LOAD s1, CD                    ; stay 205
0AB  01264                      LOAD s2, 64                    ; endx 100
0AC  013D2                      LOAD s3, D2                    ; endy 210
0AD  2037F                      CALL draw_line                 ;

0AE                             ;; LINE 5 (BOTTOM) FOR S1
0AE  0105F                      LOAD s0, 5F                    ; stax 95
0AF  011D2                      LOAD s1, D2                    ; stay 210
0B0  01264                      LOAD s2, 64                    ; endx 100
0B1  013D2                      LOAD s3, D2                    ; endy 210
0B2  2037F                      CALL draw_line                 ;

0B3                             ;; LINE 1 (TOP) FOR S2
0B3  01069                      LOAD s0, 69                    ; stax 105
0B4  011C8                      LOAD s1, C8                    ; stay 200
0B5  0126E                      LOAD s2, 6E                    ; endx 110
0B6  013C8                      LOAD s3, C8                    ; endy 200
0B7  2037F                      CALL draw_line                 ;

0B8                             ;; LINE 2 (TOPLEFT) FOR S2
0B8  01069                      LOAD s0, 69                    ; stax 105
0B9  011C8                      LOAD s1, C8                    ; stay 200
0BA  01269                      LOAD s2, 69                    ; endx 105
0BB  013CD                      LOAD s3, CD                    ; endy 205
0BC  2037F                      CALL draw_line                 ;

0BD                             ;; LINE 3 (MIDDLE) FOR S2
0BD  01069                      LOAD s0, 69                    ; stax 105
0BE  011CD                      LOAD s1, CD                    ; stay 205
0BF  0126E                      LOAD s2, 6E                    ; endx 110
0C0  013CD                      LOAD s3, CD                    ; endy 205
0C1  2037F                      CALL draw_line                 ;

0C2                             ;; LINE 4 (BOTTOMRIGHT) FOR S2
0C2  0106E                      LOAD s0, 6E                    ; stax 110
0C3  011CD                      LOAD s1, CD                    ; stay 205
0C4  0126E                      LOAD s2, 6E                    ; endx 110
0C5  013D2                      LOAD s3, D2                    ; endy 210
0C6  2037F                      CALL draw_line                 ;

0C7                             ;; LINE 5 (BOTTOM) FOR S2
0C7  01069                      LOAD s0, 69                    ; stax 105
0C8  011D2                      LOAD s1, D2                    ; stay 210
0C9  0126E                      LOAD s2, 6E                    ; endx 110
0CA  013D2                      LOAD s3, D2                    ; endy 210
0CB  2037F                      CALL draw_line                 ;

0CC                             ;;;;;;;;;;;;;;;
0CC                             ;;BEGIN START;;
0CC                             ;;;;;;;;;;;;;;;

0CC                             ;; LINE 1 (TOP) FOR S
0CC  01082                      LOAD s0, 82                    ; stax 130
0CD  011C8                      LOAD s1, C8                    ; stay 200
0CE  01288                      LOAD s2, 88                    ; endx 135
0CF  013C8                      LOAD s3, C8                    ; endy 200
0D0  2037F                      CALL draw_line                 ;

0D1                             ;; LINE 2 (TOPLEFT) FOR S
0D1  01082                      LOAD s0, 82                    ; stax 130
0D2  011C8                      LOAD s1, C8                    ; stay 200
0D3  01282                      LOAD s2, 82                    ; endx 130
0D4  013CD                      LOAD s3, CD                    ; endy 205
0D5  2037F                      CALL draw_line                 ;

0D6                             ;; LINE 3 (MIDDLE) FOR S
0D6  01082                      LOAD s0, 82                    ; stax 130
0D7  011CD                      LOAD s1, CD                    ; stay 205
0D8  01287                      LOAD s2, 87                    ; endx 135
0D9  013CD                      LOAD s3, CD                    ; endy 205
0DA  2037F                      CALL draw_line                 ;

0DB                             ;; LINE 4 (BOTTOMRIGHT) FOR S
0DB  01087                      LOAD s0, 87                    ; stax 135
0DC  011CD                      LOAD s1, CD                    ; stay 205
0DD  01287                      LOAD s2, 87                    ; endx 135
0DE  013D2                      LOAD s3, D2                    ; endy 210
0DF  2037F                      CALL draw_line                 ;

0E0                             ;; LINE 5 (BOTTOM) FOR S
0E0  01082                      LOAD s0, 82                    ; stax 130
0E1  011D2                      LOAD s1, D2                    ; stay 210
0E2  01287                      LOAD s2, 87                    ; endx 135
0E3  013D2                      LOAD s3, D2                    ; endy 210
0E4  2037F                      CALL draw_line                 ;

0E5                             ;; LINE 1 (TOP) FOR T1
0E5  0108C                      LOAD s0, 8C                    ; stax 140
0E6  011C8                      LOAD s1, C8                    ; stay 200
0E7  01293                      LOAD s2, 93                    ; endx 147
0E8  013C8                      LOAD s3, C8                    ; endy 200
0E9  2037F                      CALL draw_line                 ;

0EA                             ;; LINE 2 (MIDDLE) FOR T1
0EA  0108F                      LOAD s0, 8F                    ; stax 143
0EB  011C8                      LOAD s1, C8                    ; stay 200
0EC  0128F                      LOAD s2, 8F                    ; endx 143
0ED  013D2                      LOAD s3, D2                    ; endy 210
0EE  2037F                      CALL draw_line                 ;

0EF                             ;; LINE 1 (LEFT) FOR A
0EF  01096                      LOAD s0, 96                    ; stax 150
0F0  011C8                      LOAD s1, C8                    ; stay 200
0F1  01296                      LOAD s2, 96                    ; endx 150
0F2  013D2                      LOAD s3, D2                    ; endy 210
0F3  2037F                      CALL draw_line                 ;

0F4                             ;; LINE 2 (TOP) FOR A
0F4  01096                      LOAD s0, 96                    ; stax 150
0F5  011C8                      LOAD s1, C8                    ; stay 200
0F6  0129B                      LOAD s2, 9B                    ; endx 155
0F7  013C8                      LOAD s3, C8                    ; endy 200
0F8  2037F                      CALL draw_line                 ;

0F9                             ;; LINE 3 (MIDDLE) FOR A
0F9  01096                      LOAD s0, 96                    ; stax 150
0FA  011CD                      LOAD s1, CD                    ; stay 205
0FB  0129B                      LOAD s2, 9B                    ; endx 155
0FC  013CD                      LOAD s3, CD                    ; endy 205
0FD  2037F                      CALL draw_line                 ;

0FE                             ;; LINE 4 (RIGHT) FOR A
0FE  0109B                      LOAD s0, 9B                    ; stax 155
0FF  011C8                      LOAD s1, C8                    ; stay 200
100  0129B                      LOAD s2, 9B                    ; endx 155
101  013D2                      LOAD s3, D2                    ; endy 210
102  2037F                      CALL draw_line                 ;

103                             ;; LINE 1 (LEFT) FOR R
103  010A0                      LOAD s0, A0                    ; stax 160
104  011C8                      LOAD s1, C8                    ; stay 200
105  012A0                      LOAD s2, A0                    ; endx 160
106  013D2                      LOAD s3, D2                    ; endy 210
107  2037F                      CALL draw_line                 ;

108                             ;; LINE 2 (TOP) FOR R
108  010A0                      LOAD s0, A0                    ; stax 160
109  011C8                      LOAD s1, C8                    ; stay 200
10A  012A5                      LOAD s2, A5                    ; endx 165
10B  013C8                      LOAD s3, C8                    ; endy 200
10C  2037F                      CALL draw_line                 ;

10D                             ;; LINE 3 (RIGHT) FOR R
10D  010A5                      LOAD s0, A5                    ; stax 165
10E  011C8                      LOAD s1, C8                    ; stay 200
10F  012A5                      LOAD s2, A5                    ; endx 165
110  013CD                      LOAD s3, CD                    ; endy 205
111  2037F                      CALL draw_line                 ;

112                             ;; LINE 4 (MIDDLE) FOR R
112  010A0                      LOAD s0, A0                    ; stax 160
113  011CD                      LOAD s1, CD                    ; stay 205
114  012A5                      LOAD s2, A5                    ; endx 165
115  013CD                      LOAD s3, CD                    ; endy 205
116  2037F                      CALL draw_line                 ;

117                             ;; LINE 5 (ANGLED) FOR R
117  010A0                      LOAD s0, A0                    ; stax 160
118  011CD                      LOAD s1, CD                    ; stay 205
119  012A5                      LOAD s2, A5                    ; endx 165
11A  013D2                      LOAD s3, D2                    ; endy 210
11B  2037F                      CALL draw_line                 ;

11C                             ;; LINE 6 (ANGLED2) FOR R
11C  010A0                      LOAD s0, A0                    ; stax 160
11D  011CE                      LOAD s1, CE                    ; stay 206
11E  012A4                      LOAD s2, A4                    ; endx 164
11F  013D2                      LOAD s3, D2                    ; endy 210
120  2037F                      CALL draw_line                 ;

121                             ;; LINE 1 (TOP) FOR T2
121  010AA                      LOAD s0, AA                    ; stax 170
122  011C8                      LOAD s1, C8                    ; stay 200
123  012B1                      LOAD s2, B1                    ; endx 177
124  013C8                      LOAD s3, C8                    ; endy 200
125  2037F                      CALL draw_line                 ;

126                             ;; LINE 2 (MIDDLE) FOR T2
126  010AD                      LOAD s0, AD                    ; stax 173
127  011C8                      LOAD s1, C8                    ; stay 200
128  012AD                      LOAD s2, AD                    ; endx 173
129  013D2                      LOAD s3, D2                    ; endy 210
12A  2037F                      CALL draw_line                 ;



12B                             ;;============================================================================
12B                             ;; Draws Decoration (Line 1a)
12B                             ;;============================================================================

12B  01000                      LOAD s0, 00                    ; load 00 into s0
12C  0110A                      LOAD s1, 0A                    ; load 0A into s1
12D  012FF                      LOAD s2, FF                    ; load FF into s2
12E  0130A                      LOAD s3, 0A                    ; load 0A into s3
12F  2037F                      CALL draw_line                 ; draws the line

130                             ;;===========================================================================
130                             ;; Draws Decoration (Line 2a)
130                             ;;============================================================================

130  01000                      LOAD s0, 00                    ; load 00 into s0
131  0110C                      LOAD s1, 0C                    ; load 0C into s1
132  012FF                      LOAD s2, FF                    ; load FF into s2
133  0130C                      LOAD s3, 0C                    ; load 0C into s3
134  2037F                      CALL draw_line                 ; draws the line

135                             ;;===========================================================================
135                             ;; Draws Decoration (Line 3a)
135                             ;;============================================================================

135  01000                      LOAD s0, 00                    ; load 00 into s0
136  0110E                      LOAD s1, 0E                    ; load 0E into s1
137  012FF                      LOAD s2, FF                    ; load FF into s2
138  0130E                      LOAD s3, 0E                    ; load 0E into s3
139  2037F                      CALL draw_line                 ; draws the line

13A                             ;;============================================================================
13A                             ;; Draws Decoration (Line 1b)
13A                             ;;============================================================================

13A  01000                      LOAD s0, 00                    ; load 00 into s0
13B  01188                      LOAD s1, 88                    ; load 88 into s1
13C  012FF                      LOAD s2, FF                    ; load FF into s2
13D  01388                      LOAD s3, 88                    ; load 88 into s3
13E  2037F                      CALL draw_line                 ; draws the line

13F                             ;;===========================================================================
13F                             ;; Draws Decoration (Line 2b)
13F                             ;;============================================================================

13F  01000                      LOAD s0, 00                    ; load 00 into s0
140  0118A                      LOAD s1, 8A                    ; load 8A into s1
141  012FF                      LOAD s2, FF                    ; load FF into s2
142  0138A                      LOAD s3, 8A                    ; load 8A into s3
143  2037F                      CALL draw_line                 ; draws the line

144                             ;;===========================================================================
144                             ;; Draws Decoration (Line 3b)
144                             ;;============================================================================

144  01000                      LOAD s0, 00                    ; load 00 into s0
145  0118C                      LOAD s1, 8C                    ; load 8A into s1
146  012FF                      LOAD s2, FF                    ; load FF into s2
147  0138C                      LOAD s3, 8C                    ; load 8C into s3
148  2037F                      CALL draw_line                 ; draws the line

149                             ;;============================================================================
149                             ;; Draws the letter H (Line 1)
149                             ;;============================================================================

149                             ;; STARTING POINT
149  0150A                      LOAD s5, 0A                    ; load 10 into s5
14A  2D500                      OUTPUT s5, stax                ; set desired stax
14B  0161E                      LOAD s6, 1E                    ; load 30 into s6
14C  2D601                      OUTPUT s6, stay                ; set desired stay

14D                             ;; ENDING POINT
14D  2D502                      OUTPUT s5, endx                ; set desired endx
14E  0163C                      LOAD s6, 3C                    ; load 60 into s6
14F  2D603                      OUTPUT s6, endy                ; set desired endy
150  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

151                             ;;============================================================================
151                             ;; Draws the letter H (Line 2)
151                             ;;============================================================================

151                             ;; STARTING POINT
151  0150A                      LOAD s5, 0A                    ; load 10 into s5
152  2D500                      OUTPUT s5, stax                ; set desired stax
153  0162D                      LOAD s6, 2D                    ; load 45 into s6
154  2D601                      OUTPUT s6, stay                ; set desired stay

155                             ;; ENDING POINT
155  0151E                      LOAD s5, 1E                    ; load 30 into s5
156  2D502                      OUTPUT s5, endx                ; set desired endx
157  2D603                      OUTPUT s6, endy                ; set desired endy
158  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

159                             ;;============================================================================
159                             ;; Draws the letter H (Line 3)
159                             ;;============================================================================

159                             ;; STARTING POINT
159  0151E                      LOAD s5, 1E                    ; load 30 into s5
15A  2D500                      OUTPUT s5, stax                ; set desired stax
15B  0161E                      LOAD s6, 1E                    ; load 30 into s6
15C  2D601                      OUTPUT s6, stay                ; set desired stay

15D                             ;; ENDING POINT
15D  2D502                      OUTPUT s5, endx                ; set desired endx
15E  0163C                      LOAD s6, 3C                    ; load 60 into s6
15F  2D603                      OUTPUT s6, endy                ; set desired endy
160  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

161                             ;;============================================================================
161                             ;; Draws the letter E (Line 1)
161                             ;;============================================================================

161                             ;; STARTING POINT
161  01528                      LOAD s5, 28                    ; load 40 into s5
162  2D500                      OUTPUT s5, stax                ; set desired stax
163  0161E                      LOAD s6, 1E                    ; load 30 into s6
164  2D601                      OUTPUT s6, stay                ; set desired stay

165                             ;; ENDING POINT
165  2D502                      OUTPUT s5, endx                ; set desired endx
166  0163C                      LOAD s6, 3C                    ; load 60 into s6
167  2D603                      OUTPUT s6, endy                ; set desired endy
168  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

169                             ;;============================================================================
169                             ;; Draws the letter E (Line 2)
169                             ;;============================================================================

169                             ;; STARTING POINT
169  01528                      LOAD s5, 28                    ; load 40 into s5
16A  2D500                      OUTPUT s5, stax                ; set desired stax
16B  0161E                      LOAD s6, 1E                    ; load 30 into s6
16C  2D601                      OUTPUT s6, stay                ; set desired stay

16D                             ;; ENDING POINT
16D  0153C                      LOAD s5, 3C                    ; load 60 into s5
16E  2D502                      OUTPUT s5, endx                ; set desired endx
16F  2D603                      OUTPUT s6, endy                ; set desired endy
170  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

171                             ;;============================================================================
171                             ;; Draws the letter E (Line 3)
171                             ;;============================================================================

171                             ;; STARTING POINT
171  01528                      LOAD s5, 28                    ; load 40 into s5
172  2D500                      OUTPUT s5, stax                ; set desired stax
173  0162D                      LOAD s6, 2D                    ; load 45 into s6
174  2D601                      OUTPUT s6, stay                ; set desired stay

175                             ;; ENDING POINT
175  0153C                      LOAD s5, 3C                    ; load 60 into s5
176  2D502                      OUTPUT s5, endx                ; set desired endx
177  2D603                      OUTPUT s6, endy                ; set desired endy
178  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

179                             ;;============================================================================
179                             ;; Draws the letter E (Line 3)
179                             ;;============================================================================

179                             ;; STARTING POINT
179  01528                      LOAD s5, 28                    ; load 40 into s5
17A  2D500                      OUTPUT s5, stax                ; set desired stax
17B  0163C                      LOAD s6, 3C                    ; load 45 into s6
17C  2D601                      OUTPUT s6, stay                ; set desired stay

17D                             ;; ENDING POINT
17D  0153C                      LOAD s5, 3C                    ; load 60 into s5
17E  2D502                      OUTPUT s5, endx                ; set desired endx
17F  2D603                      OUTPUT s6, endy                ; set desired endy
180  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

181                             ;;============================================================================
181                             ;; Draws the letter L (Line 1)
181                             ;;============================================================================

181                             ;; STARTING POINT
181  01546                      LOAD s5, 46                    ; load 70 into s5
182  2D500                      OUTPUT s5, stax                ; set desired stax
183  0161E                      LOAD s6, 1E                    ; load 30 into s6
184  2D601                      OUTPUT s6, stay                ; set desired stay

185                             ;; ENDING POINT
185  2D502                      OUTPUT s5, endx                ; set desired endx
186  0163C                      LOAD s6, 3C                    ; load 60 into s6
187  2D603                      OUTPUT s6, endy                ; set desired endy
188  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

189                             ;;============================================================================
189                             ;; Draws the letter L (Line 2)
189                             ;;============================================================================

189                             ;; STARTING POINT
189  01546                      LOAD s5, 46                    ; load 70 into s5
18A  2D500                      OUTPUT s5, stax                ; set desired stax
18B  0163C                      LOAD s6, 3C                    ; load 45 into s6
18C  2D601                      OUTPUT s6, stay                ; set desired stay

18D                             ;; ENDING POINT
18D  0155A                      LOAD s5, 5A                    ; load 90 into s5
18E  2D502                      OUTPUT s5, endx                ; set desired endx
18F  2D603                      OUTPUT s6, endy                ; set desired endy
190  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

191                             ;;============================================================================
191                             ;; Draws the letter I (Line 1)
191                             ;;============================================================================

191                             ;; STARTING POINT
191  01564                      LOAD s5, 64                    ; load 70 into s5
192  2D500                      OUTPUT s5, stax                ; set desired stax
193  0161E                      LOAD s6, 1E                    ; load 30 into s6
194  2D601                      OUTPUT s6, stay                ; set desired stay

195                             ;; ENDING POINT
195  2D502                      OUTPUT s5, endx                ; set desired endx
196  0163C                      LOAD s6, 3C                    ; load 60 into s6
197  2D603                      OUTPUT s6, endy                ; set desired endy
198  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

199                             ;;============================================================================
199                             ;; Draws the letter C (Line 1)
199                             ;;============================================================================

199                             ;; STARTING POINT
199  01582                      LOAD s5, 82                    ; load 130 into s5
19A  2D500                      OUTPUT s5, stax                ; set desired stax
19B  0161E                      LOAD s6, 1E                    ; load 45 into s6
19C  2D601                      OUTPUT s6, stay                ; set desired stay

19D                             ;; ENDING POINT
19D  01573                      LOAD s5, 73                    ; load 115 into s5
19E  2D502                      OUTPUT s5, endx                ; set desired endx
19F  2D603                      OUTPUT s6, endy                ; set desired endy
1A0  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1A1                             ;;============================================================================
1A1                             ;; Draws the letter C (Line 2)
1A1                             ;;============================================================================

1A1                             ;; STARTING POINT
1A1  01573                      LOAD s5, 73                    ; load 115 into s5
1A2  2D500                      OUTPUT s5, stax                ; set desired stax
1A3  0161E                      LOAD s6, 1E                    ; load 45 into s6
1A4  2D601                      OUTPUT s6, stay                ; set desired stay

1A5                             ;; ENDING POINT
1A5  0156E                      LOAD s5, 6E                    ; load 110 into s5
1A6  2D502                      OUTPUT s5, endx                ; set desired endx
1A7  01623                      LOAD s6, 23                    ; load 35 into s6
1A8  2D603                      OUTPUT s6, endy                ; set desired endy
1A9  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1AA                             ;;============================================================================
1AA                             ;; Draws the letter C (Line 3)
1AA                             ;;============================================================================

1AA                             ;; STARTING POINT
1AA  0156E                      LOAD s5, 6E                    ; load 110 into s5
1AB  2D500                      OUTPUT s5, stax                ; set desired stax
1AC  01623                      LOAD s6, 23                    ; load 35 into s6
1AD  2D601                      OUTPUT s6, stay                ; set desired stay

1AE                             ;; ENDING POINT
1AE  2D502                      OUTPUT s5, endx                ; set desired endx
1AF  01637                      LOAD s6, 37                    ; load 55 into s6
1B0  2D603                      OUTPUT s6, endy                ; set desired endy
1B1  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1B2                             ;;============================================================================
1B2                             ;; Draws the letter C (Line 4)
1B2                             ;;============================================================================

1B2                             ;; STARTING POINT
1B2  0156E                      LOAD s5, 6E                    ; load 110 into s5
1B3  2D500                      OUTPUT s5, stax                ; set desired stax
1B4  01637                      LOAD s6, 37                    ; load 55 into s6
1B5  2D601                      OUTPUT s6, stay                ; set desired stay

1B6                             ;; ENDING POINT
1B6  01573                      LOAD s5, 73                    ; load 130 into s5
1B7  2D502                      OUTPUT s5, endx                ; set desired endx
1B8  0163B                      LOAD s6, 3B                    ; load 44 into s6
1B9  2D603                      OUTPUT s6, endy                ; set desired endy
1BA  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1BB                             ;;============================================================================
1BB                             ;; Draws the letter C (Line 5)
1BB                             ;;============================================================================

1BB                             ;; STARTING POINT
1BB  01582                      LOAD s5, 82                    ; load 130 into s5
1BC  2D500                      OUTPUT s5, stax                ; set desired stax
1BD  0163C                      LOAD s6, 3C                    ; load 45 into s6
1BE  2D601                      OUTPUT s6, stay                ; set desired stay

1BF                             ;; ENDING POINT
1BF  01573                      LOAD s5, 73                    ; load 115 into s5
1C0  2D502                      OUTPUT s5, endx                ; set desired endx
1C1  2D603                      OUTPUT s6, endy                ; set desired endy
1C2  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1C3                             ;;============================================================================
1C3                             ;; Draws the letter O (Line 1)
1C3                             ;;============================================================================

1C3                             ;; STARTING POINT
1C3  01591                      LOAD s5, 91                    ; load 145 into s5
1C4  2D500                      OUTPUT s5, stax                ; set desired stax
1C5  0161E                      LOAD s6, 1E                    ; load 30 into s6
1C6  2D601                      OUTPUT s6, stay                ; set desired stay

1C7                             ;; ENDING POINT
1C7  0159B                      LOAD s5, 9B                    ; load 155 into s5
1C8  2D502                      OUTPUT s5, endx                ; set desired endx
1C9  2D603                      OUTPUT s6, endy                ; set desired endy
1CA  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1CB                             ;;============================================================================
1CB                             ;; Draws the letter O (Line 2)
1CB                             ;;============================================================================

1CB                             ;; STARTING POINT
1CB  01591                      LOAD s5, 91                    ; load 145 into s5
1CC  2D500                      OUTPUT s5, stax                ; set desired stax
1CD  0161E                      LOAD s6, 1E                    ; load 45 into s6
1CE  2D601                      OUTPUT s6, stay                ; set desired stay

1CF                             ;; ENDING POINT
1CF  0158C                      LOAD s5, 8C                    ; load 110 into s5
1D0  2D502                      OUTPUT s5, endx                ; set desired endx
1D1  0161E                      LOAD s6, 1E                    ; load 35 into s6
1D2  2D603                      OUTPUT s6, endy                ; set desired endy
1D3  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1D4                             ;;============================================================================
1D4                             ;; Draws the letter O (Line 3)
1D4                             ;;============================================================================

1D4                             ;; STARTING POINT
1D4  0158C                      LOAD s5, 8C                    ; load 140 into s5
1D5  2D500                      OUTPUT s5, stax                ; set desired stax
1D6  0161E                      LOAD s6, 1E                    ; load 30 into s6
1D7  2D601                      OUTPUT s6, stay                ; set desired stay

1D8                             ;; ENDING POINT
1D8  2D502                      OUTPUT s5, endx                ; set desired endx
1D9  0163C                      LOAD s6, 3C                    ; load 60 into s6
1DA  2D603                      OUTPUT s6, endy                ; set desired endy
1DB  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1DC                             ;;============================================================================
1DC                             ;; Draws the letter O (Line 4)
1DC                             ;;============================================================================

1DC                             ;; STARTING POINT
1DC  0158C                      LOAD s5, 8C                    ; load 110 into s5
1DD  2D500                      OUTPUT s5, stax                ; set desired stax
1DE  0163C                      LOAD s6, 3C                    ; load 55 into s6
1DF  2D601                      OUTPUT s6, stay                ; set desired stay

1E0                             ;; ENDING POINT
1E0  01591                      LOAD s5, 91                    ; load 145 into s5
1E1  2D502                      OUTPUT s5, endx                ; set desired endx
1E2  0163C                      LOAD s6, 3C                    ; load 30 into s6
1E3  2D603                      OUTPUT s6, endy                ; set desired endy
1E4  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1E5                             ;;============================================================================
1E5                             ;; Draws the letter O (Line 5)
1E5                             ;;============================================================================

1E5                             ;; STARTING POINT
1E5  01591                      LOAD s5, 91                    ; load 145 into s5
1E6  2D500                      OUTPUT s5, stax                ; set desired stax
1E7  0163C                      LOAD s6, 3C                    ; load 30 into s6
1E8  2D601                      OUTPUT s6, stay                ; set desired stay

1E9                             ;; ENDING POINT
1E9  0159B                      LOAD s5, 9B                    ; load 155 into s5
1EA  2D502                      OUTPUT s5, endx                ; set desired endx
1EB  2D603                      OUTPUT s6, endy                ; set desired endy
1EC  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1ED                             ;;============================================================================
1ED                             ;; Draws the letter O (Line 6)
1ED                             ;;============================================================================

1ED                             ;; STARTING POINT
1ED  0159B                      LOAD s5, 9B                    ; load 110 into s5
1EE  2D500                      OUTPUT s5, stax                ; set desired stax
1EF  0163C                      LOAD s6, 3C                    ; load 55 into s6
1F0  2D601                      OUTPUT s6, stay                ; set desired stay

1F1                             ;; ENDING POINT
1F1  015A0                      LOAD s5, A0                    ; load 160 into s5
1F2  2D502                      OUTPUT s5, endx                ; set desired endx
1F3  0163C                      LOAD s6, 3C                    ; load 30 into s6
1F4  2D603                      OUTPUT s6, endy                ; set desired endy
1F5  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1F6                             ;;============================================================================
1F6                             ;; Draws the letter O (Line 7)
1F6                             ;;============================================================================

1F6                             ;; STARTING POINT
1F6  015A0                      LOAD s5, A0                    ; load 160 into s5
1F7  2D500                      OUTPUT s5, stax                ; set desired stax
1F8  0161E                      LOAD s6, 1E                    ; load 30 into s6
1F9  2D601                      OUTPUT s6, stay                ; set desired stay

1FA                             ;; ENDING POINT
1FA  2D502                      OUTPUT s5, endx                ; set desired endx
1FB  0163C                      LOAD s6, 3C                    ; load 60 into s6
1FC  2D603                      OUTPUT s6, endy                ; set desired endy
1FD  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1FE                             ;;============================================================================
1FE                             ;; Draws the letter O (Line 8)
1FE                             ;;============================================================================

1FE                             ;; STARTING POINT
1FE  015A0                      LOAD s5, A0                    ; load 160 into s5
1FF  2D500                      OUTPUT s5, stax                ; set desired stax
200  0161E                      LOAD s6, 1E                    ; load 30 into s6
201  2D601                      OUTPUT s6, stay                ; set desired stay

202                             ;; ENDING POINT
202  0159B                      LOAD s5, 9B                    ; load 155 into s5
203  2D502                      OUTPUT s5, endx                ; set desired endx
204  0161E                      LOAD s6, 1E                    ; load 30 into s6
205  2D603                      OUTPUT s6, endy                ; set desired endy
206  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

207                             ;;============================================================================
207                             ;; Draws the letter P (Line 1)
207                             ;;============================================================================
207  010AA                      LOAD s0, AA                    ; load 170 into s0
208  0111E                      LOAD s1, 1E                    ; load 30 into s1
209  012BE                      LOAD s2, BE                    ; load 190 into s2
20A  0131E                      LOAD s3, 1E                    ; keep s3 set at 30
20B  2037F                      CALL draw_line                 ; call the draw_line subroutine

20C                             ;;============================================================================
20C                             ;; Draws the letter P (Line 2)
20C                             ;;============================================================================
20C  010AA                      LOAD s0, AA                    ; load 170 into s0
20D  0111E                      LOAD s1, 1E                    ; load 30 into s1
20E  012AA                      LOAD s2, AA                    ; load 170 into s2
20F  0133C                      LOAD s3, 3C                    ; load 60 into s3
210  2037F                      CALL draw_line                 ; call the draw_line subroutine

211                             ;;============================================================================
211                             ;; Draws the letter P (Line 3)
211                             ;;============================================================================
211  010AA                      LOAD s0, AA                    ; load 170 into s0
212  0112D                      LOAD s1, 2D                    ; load 45 into s1
213  012BE                      LOAD s2, BE                    ; load 190 into s2
214  0132D                      LOAD s3, 2D                    ; keep s0 set at 45
215  2037F                      CALL draw_line                 ; call the draw_line subroutine

216                             ;;============================================================================
216                             ;; Draws the letter P (Line 4)
216                             ;;============================================================================
216  010BE                      LOAD s0, BE                    ; load 190 into s0
217  0111E                      LOAD s1, 1E                    ; load 30 into s1
218  012BE                      LOAD s2, BE                    ; load 190 into s2
219  0132D                      LOAD s3, 2D                    ; load 45 to s3
21A  2037F                      CALL draw_line                 ; call the draw_line subroutine

21B                             ;;============================================================================
21B                             ;; Draws the letter T (Line 1)
21B                             ;;============================================================================
21B  010C8                      LOAD s0, C8                    ; load 200 into s0
21C  0111E                      LOAD s1, 1E                    ; load 30 into s1
21D  012DC                      LOAD s2, DC                    ; load 220 into s2
21E  0131E                      LOAD s3, 1E                    ; load 30 to s3
21F  2037F                      CALL draw_line                 ; call the draw_line subroutine

220                             ;;============================================================================
220                             ;; Draws the letter T (Line 2)
220                             ;;============================================================================
220  010D2                      LOAD s0, D2                    ; load 200 into s0
221  0111E                      LOAD s1, 1E                    ; load 30 into s1
222  012D2                      LOAD s2, D2                    ; load 220 into s2
223  0133C                      LOAD s3, 3C                    ; load 60 to s3
224  2037F                      CALL draw_line                 ; call the draw_line subroutine

225                             ;;============================================================================
225                             ;; Draws the letter E (Line 1)
225                             ;;============================================================================
225  010E6                      LOAD s0, E6                    ; load 230 into s0
226  0111E                      LOAD s1, 1E                    ; load 30 into s1
227  012E6                      LOAD s2, E6                    ; load 230 into s2
228  0133C                      LOAD s3, 3C                    ; load 30 to s3
229  2037F                      CALL draw_line                 ; call the draw_line subroutine

22A                             ;;============================================================================
22A                             ;; Draws the letter E (Line 2)
22A                             ;;============================================================================
22A  010E6                      LOAD s0, E6                    ; load 230 into s0
22B  0111E                      LOAD s1, 1E                    ; load 30 into s1
22C  012FA                      LOAD s2, FA                    ; load 250 into s2
22D  0131E                      LOAD s3, 1E                    ; load 30 to s3
22E  2037F                      CALL draw_line                 ; call the draw_line subroutine

22F                             ;;============================================================================
22F                             ;; Draws the letter E (Line 3)
22F                             ;;============================================================================
22F  010E6                      LOAD s0, E6                    ; load 230 into s0
230  0112D                      LOAD s1, 2D                    ; load 30 into s1
231  012FA                      LOAD s2, FA                    ; load 250 into s2
232  0132D                      LOAD s3, 2D                    ; load 30 to s3
233  2037F                      CALL draw_line                 ; call the draw_line subroutine

234                             ;;============================================================================
234                             ;; Draws the letter E (Line 4)
234                             ;;============================================================================
234  010E6                      LOAD s0, E6                    ; load 230 into s0
235  0113C                      LOAD s1, 3C                    ; load 30 into s1
236  012FA                      LOAD s2, FA                    ; load 250 into s2
237  0133C                      LOAD s3, 3C                    ; load 30 to s3
238  2037F                      CALL draw_line                 ; call the draw_line subroutine

239                             ;;============================================================================
239                             ;; NEW LINE STARTS HERE (GAME)
239                             ;;============================================================================

239                             ;;============================================================================
239                             ;; Draws the letter G (Line 1)
239                             ;;============================================================================
239  01046                      LOAD s0, 46                    ; load 70 into s0
23A  0115A                      LOAD s1, 5A                    ; load 90 into s1
23B  0125A                      LOAD s2, 5A                    ; load 90 into s2
23C  0135A                      LOAD s3, 5A                    ; load 90 to s3
23D  2037F                      CALL draw_line                 ; call the draw_line subroutine

23E                             ;;============================================================================
23E                             ;; Draws the letter G (Line 2)
23E                             ;;============================================================================
23E  01046                      LOAD s0, 46                    ; load 70 into s0
23F  0115A                      LOAD s1, 5A                    ; load 90 into s1
240  01246                      LOAD s2, 46                    ; load 90 into s2
241  01378                      LOAD s3, 78                    ; load 90 to s3
242  2037F                      CALL draw_line                 ; call the draw_line subroutine

243                             ;;============================================================================
243                             ;; Draws the letter G (Line 3)
243                             ;;============================================================================
243  01046                      LOAD s0, 46                    ; load 70 into s0
244  01178                      LOAD s1, 78                    ; load 90 into s1
245  0125A                      LOAD s2, 5A                    ; load 90 into s2
246  01378                      LOAD s3, 78                    ; load 90 to s3
247  2037F                      CALL draw_line                 ; call the draw_line subroutine

248                             ;;============================================================================
248                             ;; Draws the letter G (Line 4)
248                             ;;============================================================================
248  0105A                      LOAD s0, 5A                    ; load 70 into s0
249  01169                      LOAD s1, 69                    ; load 90 into s1
24A  0125A                      LOAD s2, 5A                    ; load 90 into s2
24B  01378                      LOAD s3, 78                    ; load 90 to s3
24C  2037F                      CALL draw_line                 ; call the draw_line subroutine

24D                             ;;============================================================================
24D                             ;; Draws the letter G (Line 5)
24D                             ;;============================================================================
24D  0105A                      LOAD s0, 5A                    ; load 70 into s0
24E  01169                      LOAD s1, 69                    ; load 90 into s1
24F  01250                      LOAD s2, 50                    ; load 90 into s2
250  01369                      LOAD s3, 69                    ; load 90 to s3
251  2037F                      CALL draw_line                 ; call the draw_line subroutine

252                             ;;============================================================================
252                             ;; Draws the letter A (Line 1)
252                             ;;============================================================================
252  01064                      LOAD s0, 64                    ; 100
253  0115A                      LOAD s1, 5A                    ; 90
254  01278                      LOAD s2, 78                    ; 120
255  0135A                      LOAD s3, 5A                    ; 90
256  2037F                      CALL draw_line                 ; call the draw_line subroutine

257                             ;;============================================================================
257                             ;; Draws the letter A (Line 2)
257                             ;;============================================================================
257  01064                      LOAD s0, 64                    ; 100
258  01169                      LOAD s1, 69                    ; 105
259  01278                      LOAD s2, 78                    ; 120
25A  01369                      LOAD s3, 69                    ; 105
25B  2037F                      CALL draw_line                 ; call the draw_line subroutine

25C                             ;;============================================================================
25C                             ;; Draws the letter A (Line 3)
25C                             ;;============================================================================
25C  01064                      LOAD s0, 64                    ; 100
25D  0115A                      LOAD s1, 5A                    ; 90
25E  01264                      LOAD s2, 64                    ; 100
25F  01378                      LOAD s3, 78                    ; 120
260  2037F                      CALL draw_line                 ; call the draw_line subroutine

261                             ;;============================================================================
261                             ;; Draws the letter A (Line 4)
261                             ;;============================================================================
261  01078                      LOAD s0, 78                    ; 120
262  0115A                      LOAD s1, 5A                    ; 90
263  01278                      LOAD s2, 78                    ; 120
264  01378                      LOAD s3, 78                    ; 120
265  2037F                      CALL draw_line                 ; call the draw_line subroutine

266                             ;;============================================================================
266                             ;; Draws the letter M (Line 1)
266                             ;;============================================================================
266  01082                      LOAD s0, 82                    ; 130
267  0115A                      LOAD s1, 5A                    ; 90
268  01282                      LOAD s2, 82                    ; 130
269  01378                      LOAD s3, 78                    ; 120
26A  2037F                      CALL draw_line                 ; call the draw_line subroutine

26B                             ;;============================================================================
26B                             ;; Draws the letter M (Line 2)
26B                             ;;============================================================================
26B  01096                      LOAD s0, 96                    ; 150
26C  0115A                      LOAD s1, 5A                    ; 90
26D  01296                      LOAD s2, 96                    ; 150
26E  01378                      LOAD s3, 78                    ; 120
26F  2037F                      CALL draw_line                 ; call the draw_line subroutine

270                             ;;============================================================================
270                             ;; Draws the letter M (Line 3)
270                             ;;============================================================================
270  01096                      LOAD s0, 96                    ; 150
271  0115A                      LOAD s1, 5A                    ; 90
272  0128C                      LOAD s2, 8C                    ; 140
273  01369                      LOAD s3, 69                    ; 105
274  2037F                      CALL draw_line                 ; call the draw_line subroutine

275                             ;;============================================================================
275                             ;; Draws the letter M (Line 4)
275                             ;;============================================================================
275  01082                      LOAD s0, 82                    ; 130
276  0115A                      LOAD s1, 5A                    ; 90
277  0128C                      LOAD s2, 8C                    ; 140
278  01369                      LOAD s3, 69                    ; 105
279  2037F                      CALL draw_line                 ; call the draw_line subroutine

27A                             ;;============================================================================
27A                             ;; Draws the letter E (Line 1)
27A                             ;;============================================================================
27A  010A0                      LOAD s0, A0                    ; 160
27B  0115A                      LOAD s1, 5A                    ; 90
27C  012A0                      LOAD s2, A0                    ; 160
27D  01378                      LOAD s3, 78                    ; 120
27E  2037F                      CALL draw_line                 ; call the draw_line subroutine

27F                             ;;============================================================================
27F                             ;; Draws the letter E (Line 2)
27F                             ;;============================================================================
27F  010A0                      LOAD s0, A0                    ; 160
280  0115A                      LOAD s1, 5A                    ; 90
281  012B4                      LOAD s2, B4                    ; 180
282  0135A                      LOAD s3, 5A                    ; 90
283  2037F                      CALL draw_line                 ; call the draw_line subroutine

284                             ;;============================================================================
284                             ;; Draws the letter E (Line 3)
284                             ;;============================================================================
284  010A0                      LOAD s0, A0                    ; 160
285  01169                      LOAD s1, 69                    ; 105
286  012B4                      LOAD s2, B4                    ; 180
287  01369                      LOAD s3, 69                    ; 105
288  2037F                      CALL draw_line                 ; call the draw_line subroutine

289                             ;;============================================================================
289                             ;; Draws the letter E (Line 4)
289                             ;;============================================================================
289  010A0                      LOAD s0, A0                    ; 160
28A  01178                      LOAD s1, 78                    ; 120
28B  012B4                      LOAD s2, B4                    ; 180
28C  01378                      LOAD s3, 78                    ; 120
28D  2037F                      CALL draw_line                 ; call the draw_line subroutine

28E  25000                      RETURN                         ; leave start_screen subroutine


28F                             ;;============================================================================
28F                             ;; Game Over - Draw Game Over Screen Subroutine
28F                             ;;============================================================================

28F              draw_gameover:
28F                             ;;;;;;;;;;;;;;;;;;;;;;;;
28F                             ;; Code for Game Over ;;
28F                             ;;;;;;;;;;;;;;;;;;;;;;;;

28F                             ;;;;;;;;;;;;;;;
28F                             ;;BEGIN GAME;;
28F                             ;;;;;;;;;;;;;;;

28F                             ;; LINE 1 (TOP) FOR C
28F  0102D                      LOAD s0, 2D                    ; stax 45
290  0111E                      LOAD s1, 1E                    ; stay 30
291  01223                      LOAD s2, 23                    ; endx 35
292  0131E                      LOAD s3, 1E                    ; endy 30
293  2037F                      CALL draw_line                 ;




294                             ;;============================================================================
294                             ;; Draw Helicopter - Draw Helicopter Subroutine
294                             ;;============================================================================

294            draw_helicopter:

294  202D9                      CALL draw_helicopter_cockpit   ; call the subroutine to draw the cockpit
295  2034D                      CALL draw_helicopter_blades    ; call the subroutine to draw the blades
296  20318                      CALL draw_helicopter_tail      ; call the subroutine to draw the tail
297                             ;CALL draw_helicopter_smoke         ; call the subroutine to draw the smoke

297  25000                      RETURN                         ; go back from drawing helicopter


298                             ;;============================================================================
298                             ;; Draw Block - Draw Block Subroutine
298                             ;;============================================================================

298                 draw_block:

298                             ;;============================================================================
298                             ;; Draws Top Line of Block
298                             ;;============================================================================

298  005E0                      LOAD s5, se                    ; load 255 into s5 (horizontal center of block)
299  016E1                      LOAD s6, E1                    ; load 245 into s6
29A  1C650                      COMPARE s6, s5                 ; checking if the block is done "peaking out" from the right (initial compare: 245 ? 255)
29B  3A2A1                      JUMP C, right_edge             ; jump to right_edge
29C  0160A                      LOAD s6, 0A                    ; load 10 into s6
29D  1C560                      COMPARE s5, s6                 ; comparing s5 and s6
29E  3A2A5                      JUMP C, left_edge              ; jump to left_edge
29F  322A5                      JUMP Z, left_edge              ; jump to left_edge
2A0  222A9                      JUMP in_middle                 ; jump to in_middle

2A1  2D500          right_edge: OUTPUT s5, stax                ; set desired stax
2A2  1950A                      SUB s5, 0A                     ;
2A3  2D502                      OUTPUT s5, endx                ; set desired stax
2A4  222AC                      JUMP finished1                 ; jump to draw_ys

2A5  2D500           left_edge: OUTPUT s5, stax                ; set desired stax
2A6  01600                      LOAD s6, 00                    ; put 255 into s5
2A7  2D602                      OUTPUT s6, endx                ; set desired stax
2A8  222AC                      JUMP finished1                 ; jump to draw_ys

2A9                  in_middle:
2A9  2D500                      OUTPUT s5, stax                ; set desired stax
2AA  1950A                      SUB s5, 0A                     ; subtract the width of block to get the other x coordinate
2AB  2D502                      OUTPUT s5, endx                ; set desired endx

2AC  2DF01           finished1: OUTPUT sf, stay                ; set desired stay
2AD  2DF03                      OUTPUT sf, endy                ; set desired endy
2AE  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2AF                             ;;============================================================================
2AF                             ;; Draws Bottom Line of Block
2AF                             ;;============================================================================

2AF  005F0                      LOAD s5, sf                    ; load sF into s5
2B0  1153C                      ADD s5, 3C                     ; add 40 to s5
2B1  2D501                      OUTPUT s5, stay                ; set desired stay
2B2  2D503                      OUTPUT s5, endy                ; set desired endy
2B3  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2B4                             ;;============================================================================
2B4                             ;; Draws Right Vertical Line of Block
2B4                             ;;============================================================================

2B4  2DE00                      OUTPUT se, stax                ; set desired stax
2B5  2DE02                      OUTPUT se, endx                ; set desired endx
2B6  2DF01                      OUTPUT sf, stay                ; set desired stay
2B7  005F0                      LOAD s5, sf                    ; load sF into s5
2B8  1153C                      ADD s5, 3C                     ; add 60 to y coordinate
2B9  2D503                      OUTPUT s5, endy                ; set desired endy
2BA  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2BB                             ;;============================================================================
2BB                             ;; Draws Left Vertical Line of Block
2BB                             ;;============================================================================

2BB  005E0                      LOAD s5, se                    ; load sE into s5
2BC  1950A                      SUB s5, 0A                     ; subtract 10 from s5
2BD  2D500                      OUTPUT s5, stax                ; set desired stax
2BE  2D502                      OUTPUT s5, endx                ; set desired endx
2BF  2DF01                      OUTPUT sf, stay                ; set desired stay
2C0  005F0                      LOAD s5, sf                    ; load sF into s5
2C1  1153C                      ADD s5, 3C                     ; add 60 to y coordinate
2C2  2D503                      OUTPUT s5, endy                ; set desired endy
2C3  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)
2C4  25000                      RETURN                         ; finished with draw_block subroutine



2C5                             ;;============================================================================
2C5                             ;; Random Block Location - Random Block Location Subroutine
2C5                             ;;============================================================================

2C5        random_block_location:
2C5  1DE00                      COMPARE se, 00                 ; is it time to create a new variable?
2C6  322CB                      JUMP Z, new_random             ; jump to new random creator
2C7  1DEFF                      COMPARE se, FF                 ; is it time to create a new variable?
2C8  322CB                      JUMP Z, new_random             ; jump to new random creator
2C9  362CA                      JUMP NZ, skip_everything       ; goes back

2CA  25000     skip_everything: RETURN                         ; returns back (no new rand. number)

2CB  09507          new_random: INPUT s5, prng                 ; create to new random number
2CC  1D50F                      COMPARE s5, 0F                 ; check if it's in range
2CD  3E2CF                      JUMP NC, check_other_bound_range ; check lower bound of map
2CE  3A2CB                      JUMP C, new_random             ; get new variable

2CF        check_other_bound_range:
2CF  1D5B4                      COMPARE s5, B4                 ; compare s5 to 180
2D0  3E2CB                      JUMP NC, new_random            ; get a new random number
2D1  00F50                      LOAD sf, s5                    ; a new y coordinate generated
2D2  25000                      RETURN                         ; get out of subroutine

2D3                             ;;============================================================================
2D3                             ;; Move Helicopter Up - Move Helicopter Up Subroutine
2D3                             ;;============================================================================

2D3               move_heli_up:
2D3  1DC15                      COMPARE sc, 15                 ; check if the helicopter is colliding with top wall
2D4  362D7                      JUMP NZ, decrement             ; if not colliding, then move helicopter appropriately
2D5  3E2D7                      JUMP NC, decrement             ; necessary as well
2D6  25000                      RETURN                         ; do not increment if colliding with top wall
2D7                  decrement:
2D7  19C04                      SUB sc, 04                     ; move the helicopter up
2D8  25000                      RETURN                         ; get out of subroutine

2D9                             ;;============================================================================
2D9                             ;; Draw Helicopter Cockpit - Draw Helicopter Cockpit Subroutine
2D9                             ;;============================================================================

2D9        draw_helicopter_cockpit:

2D9                             ;;============================================================================
2D9                             ;; Draws Cockpit of Helicopter (Line 1a)
2D9                             ;;============================================================================

2D9                             ;; STARTING POINT
2D9  01564                      LOAD s5, 64                    ; load 100 into s5
2DA  2D500                      OUTPUT s5, stax                ; set desired stax
2DB  006C0                      LOAD s6, sc                    ; load sC into s5
2DC  2D601                      OUTPUT s6, stay                ; set desired stay

2DD                             ;; ENDING POINT
2DD  19501                      SUB s5, 01                     ; subtract 7 from s5
2DE  2D502                      OUTPUT s5, endx                ; set desired endx
2DF  19603                      SUB s6, 03                     ; go up by 5
2E0  2D603                      OUTPUT s6, endy                ; set desired endy
2E1  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2E2                             ;;============================================================================
2E2                             ;; Draws Cockpit of Helicopter (Line 1b)
2E2                             ;;============================================================================

2E2                             ;; STARTING POINT
2E2  01564                      LOAD s5, 64                    ; load 100 into s5
2E3  19501                      SUB s5, 01                     ; subtract 7 from s5
2E4  2D500                      OUTPUT s5, stax                ; set desired stax
2E5  006C0                      LOAD s6, sc                    ; load sC into s5
2E6  19603                      SUB s6, 03                     ; go up by 5
2E7  2D601                      OUTPUT s6, stay                ; set desired stay

2E8                             ;; ENDING POINT
2E8  19504                      SUB s5, 04                     ; subtract 7 from s5
2E9  2D502                      OUTPUT s5, endx                ; set desired endx
2EA  19602                      SUB s6, 02                     ; go up by 5
2EB  2D603                      OUTPUT s6, endy                ; set desired endy
2EC  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)


2ED                             ;;============================================================================
2ED                             ;; Draws Cockpit of Helicopter (Line 2a)
2ED                             ;;============================================================================

2ED                             ;; STARTING POINT
2ED  01564                      LOAD s5, 64                    ; load 100 into s5
2EE  2D500                      OUTPUT s5, stax                ; set desired stax
2EF  006C0                      LOAD s6, sc                    ; load sC into s5
2F0  2D601                      OUTPUT s6, stay                ; set desired stay

2F1                             ;; ENDING POINT
2F1  19501                      SUB s5, 01                     ; subtract 1 from s5
2F2  2D502                      OUTPUT s5, endx                ; set desired endx
2F3  11603                      ADD s6, 03                     ; go down by 3
2F4  2D603                      OUTPUT s6, endy                ; set desired endy
2F5  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2F6                             ;;============================================================================
2F6                             ;; Draws Cockpit of Helicopter (Line 2b)
2F6                             ;;============================================================================

2F6                             ;; STARTING POINT
2F6  01564                      LOAD s5, 64                    ; load 100 into s5
2F7  19501                      SUB s5, 01                     ; subtract 1 from s5
2F8  2D500                      OUTPUT s5, stax                ; set desired stax
2F9  006C0                      LOAD s6, sc                    ; load sC into s5
2FA  11603                      ADD s6, 03                     ; go down by 3
2FB  2D601                      OUTPUT s6, stay                ; set desired stay

2FC                             ;; ENDING POINT
2FC  19504                      SUB s5, 04                     ; subtract 7 from s5
2FD  2D502                      OUTPUT s5, endx                ; set desired endx
2FE  11602                      ADD s6, 02                     ; go down by 5
2FF  2D603                      OUTPUT s6, endy                ; set desired endy
300  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

301                             ;;============================================================================
301                             ;; Draws Cockpit of Helicopter (Line 3)
301                             ;;============================================================================

301                             ;; STARTING POINT
301  01564                      LOAD s5, 64                    ; load 100 into s5
302  19505                      SUB s5, 05                     ; load 7 into s5
303  2D500                      OUTPUT s5, stax                ; set desired stax
304  006C0                      LOAD s6, sc                    ; load sC into s5
305  19605                      SUB s6, 05                     ; go up by 5 using subtraction
306  2D601                      OUTPUT s6, stay                ; set desired stay

307                             ;; ENDING POINT
307  19507                      SUB s5, 07                     ; subtract 5 from s5
308  2D502                      OUTPUT s5, endx                ; set desired endx
309  11605                      ADD s6, 05                     ; go down by 5
30A  2D603                      OUTPUT s6, endy                ; set desired endy
30B  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

30C                             ;;============================================================================
30C                             ;; Draws Cockpit of Helicopter (Line 4)
30C                             ;;============================================================================

30C                             ;; STARTING POINT
30C  01564                      LOAD s5, 64                    ; load 100 into s5
30D  19505                      SUB s5, 05                     ; load 7 into s5
30E  2D500                      OUTPUT s5, stax                ; set desired stax
30F  006C0                      LOAD s6, sc                    ; load sC into s5
310  11605                      ADD s6, 05                     ; go down by 5 using addition
311  2D601                      OUTPUT s6, stay                ; set desired stay

312                             ;; ENDING POINT
312  19507                      SUB s5, 07                     ; subtract 5 from s5
313  2D502                      OUTPUT s5, endx                ; set desired endx
314  19605                      SUB s6, 05                     ; go back up by 5
315  2D603                      OUTPUT s6, endy                ; set desired endy
316  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

317  25000                      RETURN                         ; go back from subroutine

318                             ;;============================================================================
318                             ;; Draw Helicopter Tail - Draw Helicopter Tail Subroutine
318                             ;;============================================================================

318        draw_helicopter_tail:

318                             ;;============================================================================
318                             ;; Draws Tail of Helicopter (Line 1)
318                             ;;============================================================================

318                             ;; STARTING POINT
318  01564                      LOAD s5, 64                    ; load 100 into s5
319  1950A                      SUB s5, 0A                     ; subtract 0xA from s5
31A  2D500                      OUTPUT s5, stax                ; set desired stax
31B  006C0                      LOAD s6, sc                    ; load sC into s5
31C  19602                      SUB s6, 02                     ; subtract 2 from s6
31D  2D601                      OUTPUT s6, stay                ; set desired stay

31E                             ;; ENDING POINT
31E  19507                      SUB s5, 07                     ; subtract 7 from s5
31F  2D502                      OUTPUT s5, endx                ; set desired endx
320  2D603                      OUTPUT s6, endy                ; set desired endy
321  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

322                             ;;============================================================================
322                             ;; Draws Tail of Helicopter (Line 2)
322                             ;;============================================================================

322                             ;; STARTING POINT
322  01564                      LOAD s5, 64                    ; load 100 into s5
323  1950C                      SUB s5, 0C                     ; subtract 0xC from s5
324  2D500                      OUTPUT s5, stax                ; set desired stax
325  006C0                      LOAD s6, sc                    ; load sC into s5
326  2D601                      OUTPUT s6, stay                ; set desired stay

327                             ;; ENDING POINT
327  19508                      SUB s5, 08                     ; subtract 7 from s5
328  2D502                      OUTPUT s5, endx                ; set desired endx
329  2D603                      OUTPUT s6, endy                ; set desired endy
32A  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

32B                             ;;============================================================================
32B                             ;; Draws Tail of Helicopter (Line 3)
32B                             ;;============================================================================

32B                             ;; STARTING POINT
32B  01564                      LOAD s5, 64                    ; load 100 into s5
32C  1950A                      SUB s5, 0A                     ; subtract 0x0A from s5
32D  19508                      SUB s5, 08                     ; subtract 0x10 from s5
32E  2D500                      OUTPUT s5, stax                ; set desired stax
32F  006C0                      LOAD s6, sc                    ; load sC into s5
330  19602                      SUB s6, 02                     ; subtract 2 from s6
331  2D601                      OUTPUT s6, stay                ; set desired stay

332                             ;; ENDING POINT
332  19502                      SUB s5, 02                     ; subtract 2 from s5
333  2D502                      OUTPUT s5, endx                ; set desired endx
334  19602                      SUB s6, 02                     ; subtract 2 from s6
335  2D603                      OUTPUT s6, endy                ; set desired endy
336  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

337                             ;;============================================================================
337                             ;; Draws Tail of Helicopter (Line 4)
337                             ;;============================================================================

337                             ;; STARTING POINT
337  01564                      LOAD s5, 64                    ; load 100 into s5
338  1950C                      SUB s5, 0C                     ; subtract 0x0C from s5
339  19509                      SUB s5, 09                     ; subtract 0x09 from s5
33A  2D500                      OUTPUT s5, stax                ; set desired stax
33B  006C0                      LOAD s6, sc                    ; load sC into s5
33C  2D601                      OUTPUT s6, stay                ; set desired stay

33D                             ;; ENDING POINT
33D                             ;SUB s5, 01                          ; subtract 2 from s5
33D  2D502                      OUTPUT s5, endx                ; set desired endx
33E  11601                      ADD s6, 01                     ; add 1 to s6
33F  2D603                      OUTPUT s6, endy                ; set desired endy
340  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

341                             ;;============================================================================
341                             ;; Draws Tail of Helicopter (Line 5)
341                             ;;============================================================================

341                             ;; STARTING POINT
341  01564                      LOAD s5, 64                    ; load 100 into s5
342  1950A                      SUB s5, 0A                     ; subtract 0x0A from s5
343  1950A                      SUB s5, 0A                     ; subtract 0x0A from s5
344  2D500                      OUTPUT s5, stax                ; set desired stax
345  006C0                      LOAD s6, sc                    ; load sC into s5
346  19604                      SUB s6, 04                     ; subtract 4 from s6
347  2D601                      OUTPUT s6, stay                ; set desired stay

348                             ;; ENDING POINT
348  2D502                      OUTPUT s5, endx                ; set desired endx
349  11605                      ADD s6, 05                     ; add 1 to s6
34A  2D603                      OUTPUT s6, endy                ; set desired endy
34B  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

34C  25000                      RETURN                         ; go back from subroutine

34D                             ;;============================================================================
34D                             ;; Draw Helicopter Blades - Draw Helicopter Blades Subroutine
34D                             ;;============================================================================

34D        draw_helicopter_blades:

34D                             ;;============================================================================
34D                             ;; Draws Blades of Helicopter (Line 1)
34D                             ;;============================================================================

34D                             ;; STARTING POINT
34D  01564                      LOAD s5, 64                    ; load 100 into s5
34E  19505                      SUB s5, 05                     ; subtract 0xA from s5
34F  2D500                      OUTPUT s5, stax                ; set desired stax
350  006C0                      LOAD s6, sc                    ; load sC into s5
351  19605                      SUB s6, 05                     ; subtract 2 from s6
352  2D601                      OUTPUT s6, stay                ; set desired stay

353                             ;; ENDING POINT
353  2D502                      OUTPUT s5, endx                ; set desired endx
354  19602                      SUB s6, 02                     ; subtract 2 from s6
355  2D603                      OUTPUT s6, endy                ; set desired endy
356  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

357                             ;;============================================================================
357                             ;; Draws Blades of Helicopter (Line 2)
357                             ;;============================================================================

357                             ;; STARTING POINT
357  01564                      LOAD s5, 64                    ; load 100 into s5
358  2D500                      OUTPUT s5, stax                ; set desired stax
359  006C0                      LOAD s6, sc                    ; load sC into s5
35A  19607                      SUB s6, 07                     ; subtract 2 from s6
35B  2D601                      OUTPUT s6, stay                ; set desired stay

35C                             ;; ENDING POINT
35C  1950A                      SUB s5, 0A                     ; subtract 10 from s5
35D  2D502                      OUTPUT s5, endx                ; set desired endx
35E  2D603                      OUTPUT s6, endy                ; set desired endy
35F  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

360  25000                      RETURN                         ; go back from subroutine

361                             ;;============================================================================
361                             ;; Draw Helicopter Smoke - Draw Helicopter Smoke Subroutine
361                             ;;============================================================================

361        draw_helicopter_smoke:

361                             ;;============================================================================
361                             ;; Draws Smoke of Helicopter (Line 1)
361                             ;;============================================================================

361                             ;; Start Point
361  01564                      LOAD s5, 64                    ; load 100 into s5
362  19528                      SUB s5, 28                     ; position starting smoke right point of line 1
363  2D500                      OUTPUT s5, stax                ; output to starting x position of line 1

364  006C0                      LOAD s6, sc                    ; load helicopter smoke vertical position for line 1
365  2D601                      OUTPUT s6, stay                ; output to starting y position of line 1
366                             ;;

366                             ;; End Point
366  19504                      SUB s5, 04                     ; position starting smoke left point of line 1
367  2D502                      OUTPUT s5, endx                ; output to starting y position of line 1

368  2D603                      OUTPUT s6, endy                ; output to ending y position of line 1, matching helicopter
369  20389                      CALL old_draw_line             ;draws a line (careful: this subroutine overwrites s5)
36A                             ;;

36A                             ;;============================================================================
36A                             ;; Draws Smoke of Helicopter (Line 2)
36A                             ;;============================================================================

36A                             ;; Start Point
36A  01564                      LOAD s5, 64                    ; load 100 into s5
36B  19534                      SUB s5, 34                     ; position starting smoke right point of line 2
36C  2D500                      OUTPUT s5, stax                ; output to starting x position of line 2

36D  006C0                      LOAD s6, sc                    ; load starting smoke vertical position for line 2
36E  11604                      ADD s6, 04                     ; add 4 to s6 (shift down by 4)
36F  2D601                      OUTPUT s6, stay                ; output to starting y position of line 2
370                             ;;

370                             ;; End Point
370  19504                      SUB s5, 04                     ; subtract s5 by 4 for length of line
371  2D502                      OUTPUT s5, endx                ; output to endx

372  2D603                      OUTPUT s6, endy                ; outputs vertical locaton of smoke line 2
373  20389                      CALL old_draw_line             ;draws a line (careful: this subroutine overwrites s5)
374                             ;;

374                             ;;============================================================================
374                             ;; Draws Smoke of Helicopter (Line 3)
374                             ;;============================================================================

374                             ;; Start Point
374  01564                      LOAD s5, 64                    ; load 100 into s5
375  19540                      SUB s5, 40                     ; position starting smoke right point of line 3
376  2D500                      OUTPUT s5, stax                ; output to starting x position of line 3

377  006C0                      LOAD s6, sc                    ; load starting smoke vertical position for line 3
378  19604                      SUB s6, 04                     ; add 4 to s6 (shift down by 4)
379  2D601                      OUTPUT s6, stay                ; output to starting y position of line 3
37A                             ;;

37A                             ;; End Point
37A  19504                      SUB s5, 04                     ; subtract s5 by 4 for length of line
37B  2D502                      OUTPUT s5, endx                ; output to endx

37C  2D603                      OUTPUT s6, endy                ; output same y position of line 3
37D  20389                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)
37E                             ;;

37E  25000                      RETURN                         ; go back to subroutine



37F                             ;;============================================================================
37F                             ;; Draw Line - Draw Line Subroutine
37F                             ;;============================================================================

37F  2D000           draw_line: OUTPUT s0, stax                ; write stax
380  2D101                      OUTPUT s1, stay                ; write stay
381  2D202                      OUTPUT s2, endx                ; write endx
382  2D303                      OUTPUT s3, endy                ; write endy
383  01501                      LOAD s5, busy_go               ; load go command
384  2D504                      OUTPUT s5, busy                ; send go command
385  09504                wait: INPUT s5, busy                 ; read busy status
386  1D501                      COMPARE s5, busy_go            ; check busy status
387  32385                      JUMP Z, wait                   ; if busy, wait more
388  25000                      RETURN                         ; leave line drawing subroutine

389                             ;;============================================================================
389                             ;; Old Draw Line - Old Draw Line Subroutine (WILL DELETE LATER)
389                             ;;============================================================================

389              old_draw_line:
389  01501                      LOAD s5, busy_go               ; load go command
38A  2D504                      OUTPUT s5, busy                ; send go command
38B  09504               wait0: INPUT s5, busy                 ; read busy status
38C  1D501                      COMPARE s5, busy_go            ; check busy status
38D  3238B                      JUMP Z, wait0                  ; if busy, wait more
38E  25000                      RETURN                         ; leave line drawing subroutine

38F                             ;;============================================================================
38F                             ;; Check Collisions - Check Collisions Subroutine
38F                             ;;============================================================================

38F            check_collision:
38F                             ;;============================================================================
38F                             ;; Check Collisions with Map (top wall)
38F                             ;;============================================================================
38F  01560                      LOAD s5, 60                    ; position of heli/wall collision
390  0180F                      LOAD s8, 0F                    ; top wall vertical coordinate (15)
391  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
392  1960A                      SUB s6, 0A                     ; the helicopter's blades 10 pixels higher
393  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
394  1C860                      COMPARE s8, s6                 ; check if the two intersect
395  323F9                      JUMP Z, collision_occurred     ; jump to collision occurred
396  3E3F9                      JUMP NC, collision_occurred    ; jump to collision occurred (necessary)

397                             ;;============================================================================
397                             ;; Check Collisions with Map (bottom wall)
397                             ;;============================================================================
397  018F0                      LOAD s8, F0                    ; bottom wall vertical coordinate (240)
398  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
399  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
39A  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
39B  1C860                      COMPARE s8, s6                 ; check if the two intersect
39C  323F9                      JUMP Z, collision_occurred     ; jump to collision occurred

39D  018F1                      LOAD s8, F1                    ; bottom wall vertical coordinate (241)
39E  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
39F  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
3A0  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
3A1  1C860                      COMPARE s8, s6                 ; check if the two intersect
3A2  323F9                      JUMP Z, collision_occurred     ; jump to collision occurred

3A3  018F2                      LOAD s8, F2                    ; bottom wall vertical coordinate (242)
3A4  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
3A5  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
3A6  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
3A7  1C860                      COMPARE s8, s6                 ; check if the two intersect
3A8  323F9                      JUMP Z, collision_occurred     ; jump to collision occurred

3A9  018F3                      LOAD s8, F3                    ; bottom wall vertical coordinate (243)
3AA  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
3AB  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
3AC  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
3AD  1C860                      COMPARE s8, s6                 ; check if the two intersect
3AE  323F9                      JUMP Z, collision_occurred     ; jump to collision occurred

3AF  018F4                      LOAD s8, F4                    ; bottom wall vertical coordinate (244)
3B0  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
3B1  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
3B2  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
3B3  1C860                      COMPARE s8, s6                 ; check if the two intersect
3B4  323F9                      JUMP Z, collision_occurred     ; jump to collision occurred

3B5  018F5                      LOAD s8, F5                    ; bottom wall vertical coordinate (245)
3B6  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
3B7  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
3B8  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
3B9  1C860                      COMPARE s8, s6                 ; check if the two intersect
3BA  323F9                      JUMP Z, collision_occurred     ; jump to collision occurred

3BB  018F6                      LOAD s8, F6                    ; bottom wall vertical coordinate (246)
3BC  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
3BD  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
3BE  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
3BF  1C860                      COMPARE s8, s6                 ; check if the two intersect
3C0  323F9                      JUMP Z, collision_occurred     ; jump to collision occurred

3C1                             ;;============================================================================
3C1                             ;; Check Collisions with Block
3C1                             ;;============================================================================

3C1  005E0                      LOAD s5, se                    ; get current horizontal position of block
3C2  1950A                      SUB s5, 0A                     ; actual block is 10 pixels back
3C3  1D564                      COMPARE s5, 64                 ; check if s5 coincides with heli (horizontal check)
3C4  323DA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3C5  1D563                      COMPARE s5, 63                 ; check if s5 coincides with heli (horizontal check)
3C6  323DA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3C7  1D562                      COMPARE s5, 62                 ; check if s5 coincides with heli (horizontal check)
3C8  323DA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3C9  1D561                      COMPARE s5, 61                 ; check if s5 coincides with heli (horizontal check)
3CA  323DA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3CB  1D560                      COMPARE s5, 60                 ; check if s5 coincides with heli (horizontal check)
3CC  323DA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3CD  1D559                      COMPARE s5, 59                 ; check if s5 coincides with heli (horizontal check)
3CE  323DA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3CF  1D558                      COMPARE s5, 58                 ; check if s5 coincides with heli (horizontal check)
3D0  323DA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3D1  1D557                      COMPARE s5, 57                 ; check if s5 coincides with heli (horizontal check)
3D2  323DA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3D3  1D556                      COMPARE s5, 56                 ; check if s5 coincides with heli (horizontal check)
3D4  323DA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3D5  1D555                      COMPARE s5, 55                 ; check if s5 coincides with heli (horizontal check)
3D6  323DA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3D7  1D554                      COMPARE s5, 54                 ; check if s5 coincides with heli (horizontal check)
3D8  323DA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3D9  363E4                      JUMP NZ, no_collision          ; jump to no_collision routine

3DA             check_vertical:
3DA  006F0                      LOAD s6, sf                    ; get current vertical position of block
3DB  007C0                      LOAD s7, sc                    ; load helicopter front position
3DC  1C760                loop: COMPARE s7, s6                 ; compare s7 and s6
3DD  323F9                      JUMP Z, collision_occurred     ; jump to collision_occured
3DE  11601                      ADD s6, 01                     ; add one to s6
3DF  008F0                      LOAD s8, sf                    ; load original value for reference only
3E0  1183C                      ADD s8, 3c                     ; add 60 to s8
3E1  1C680                      COMPARE s6, s8                 ; compare s6 to bottom of block (s8)
3E2  323E4                      JUMP Z, no_collision           ; jump to no_collision routine
3E3  363DC                      JUMP NZ, loop                  ; keep looping

3E4  19E01        no_collision: SUB se, 01                     ; move block forwards
3E5  1DA01                      COMPARE sa, 01                 ; check if score is above 500
3E6  3C3EA                      CALL NC, stage2_check          ; call second stage check

3E7  11C02                      ADD sc, 02                     ; increment sC
3E8  20402                      CALL distance                  ; used for keeping the score (increments distance)
3E9  25000                      RETURN                         ; leave, since no collisions occurred

3EA               stage2_check:
3EA  19E01                      SUB se, 01                     ; subtract 1 from sE
3EB  1DA05                      COMPARE sa, 05                 ; check if score is above 1000
3EC  3C3EF                      CALL NC, stage3_check          ; call speed2
3ED  25000                      RETURN                         ; leave routine

3EE                     speed2:
3EE                             ;SUB sE, 01                          ; decrement by 2
3EE  25000                      RETURN                         ; go back

3EF               stage3_check:
3EF  19E01                      SUB se, 01                     ; decrement by 3
3F0  1DA08                      COMPARE sa, 08                 ; check if score is above 1000
3F1  3C3F3                      CALL NC, stage4_check          ; call speed2
3F2  25000                      RETURN                         ; go back

3F3               stage4_check:
3F3  19E01                      SUB se, 01                     ; decrement by 3
3F4  1DA10                      COMPARE sa, 10                 ; check if score is above 1000
3F5  3C3F7                      CALL NC, stage5_check          ; call speed2
3F6  25000                      RETURN

3F7               stage5_check:
3F7  19E01                      SUB se, 01                     ; decrement by 3
3F8  25000                      RETURN

3F9         collision_occurred:
3F9  2D500                      OUTPUT s5, stax                ; set desired stax
3FA  2D701                      OUTPUT s7, stay                ; set desired stay
3FB  09807                      INPUT s8, prng                 ; load random endx
3FC  2D802                      OUTPUT s8, endx                ; set random endx
3FD  09807                      INPUT s8, prng                 ; load random endy
3FE  2D803                      OUTPUT s8, endy                ; set random endy
3FF  2037F                      CALL draw_line                 ; draw random line

400  01902                      LOAD s9, GAMEOVER_STATE        ; should go to gameover state instead
401  25000                      RETURN                         ; return from routine without any increments

402                             ;;============================================================================
402                             ;; Distance - Distance Subroutine
402                             ;;============================================================================

402  2DB0A            distance: OUTPUT sb, qssd_lo             ; put distance value to qssd
403  1DBFF                      COMPARE sb, FF                 ; check if max (FF) was reached
404  32407                      JUMP Z, distance2              ; jump to distance2
405  11B01                      ADD sb, one                    ; increment distance value
406  25000                      RETURN                         ; finished with distance subroutine

407  11A01           distance2: ADD sa, one                    ; add one to the next degree
408  01B00                      LOAD sb, zero                  ; reset sB
409  2DB0A                      OUTPUT sb, qssd_lo             ; put distance value to qssd
40A  2DA0B                      OUTPUT sa, qssd_hi             ; put distance value to qssd
40B  25000                      RETURN                         ; finished with distance subroutine

7FF                             ;;============================================================================
7FF                             ;; Interrupt - Vector.
7FF                             ;;============================================================================

7FF                             ADDRESS 7FF                    ; must be located here
7FF  22014          isr_vector: JUMP isr                       ; always jump to isr

800                             ;;============================================================================
800                             ;;
800                             ;;============================================================================


PSM files that have been assembled
----------------------------------
    /home/adnan/Documents/School/EE178/fpga_video_game/latest_fpga_video_game/software/software.psm


List of defined constants
-------------------------
   CONSTANT name      Value  Source PSM file
   -------------      -----  ---------------
   BEL                07
   BS                 08
   CR                 0D
   CREDITS_STATE      03     software.psm
   DCS                90
   DEL                7F
   ESC                1B
   GAMEOVER_STATE     02     software.psm
   HT                 09
   LF                 0A
   NUL                00
   PLAY_STATE         01     software.psm
   ST                 9C
   START_STATE        00     software.psm
   VT                 0B
   beam               05     software.psm
   beam_hi            0f     software.psm
   beam_lo            03     software.psm
   beam_md            07     software.psm
   blue               11     software.psm
   busy               04     software.psm
   busy_go            01     software.psm
   buttons            0f     software.psm
   buttons_ct         10     software.psm
   buttons_dn         04     software.psm
   buttons_lf         02     software.psm
   buttons_rt         01     software.psm
   buttons_up         08     software.psm
   datestamp_day      01
   datestamp_month    0C
   datestamp_year     0F
   endx               02     software.psm
   endy               03     software.psm
   green              11     software.psm
   leds_hi            09     software.psm
   leds_lo            08     software.psm
   mode               06     software.psm
   mode_clr           01     software.psm
   mode_exp           03     software.psm
   mode_hld           00     software.psm
   mode_lin           02     software.psm
   one                01     software.psm
   prng               07     software.psm
   qssd_dp            0c     software.psm
   qssd_hi            0b     software.psm
   qssd_lo            0a     software.psm
   red                10     software.psm
   start_menu_1       00     software.psm
   start_menu_2       3C     software.psm
   start_menu_3       78     software.psm
   stax               00     software.psm
   stay               01     software.psm
   switches_hi        0e     software.psm
   switches_lo        0d     software.psm
   timestamp_hours    16
   timestamp_minutes  13
   timestamp_seconds  05
   zero               00     software.psm


  No tables defined


List of text strings
--------------------
   STRING name  Value          Source PSM file
   -----------  -----          ---------------
   datestamp$   "01 Dec 2015"
   timestamp$   "22:19:05"


List of line labels
-------------------
    Label                    Addr  Source PSM file
 --------                    ----  ---------------
 *  boot                     000   software.psm
    check_collision          38F   software.psm
    check_other_bound_range  2CF   software.psm
    check_vertical           3DA   software.psm
    collision_occurred       3F9   software.psm
    decrement                2D7   software.psm
    distance                 402   software.psm
    distance2                407   software.psm
    draw_block               298   software.psm
    draw_gameover            28F   software.psm
    draw_helicopter          294   software.psm
    draw_helicopter_blades   34D   software.psm
    draw_helicopter_cockpit  2D9   software.psm
 *  draw_helicopter_smoke    361   software.psm
    draw_helicopter_tail     318   software.psm
    draw_line                37F   software.psm
    enter_play_state         021   software.psm
    enter_play_state2        034   software.psm
    finished1                2AC   software.psm
    gameover                 024   software.psm
    in_middle                2A9   software.psm
    isr                      014   software.psm
 *  isr_vector               7FF   software.psm
    left_edge                2A5   software.psm
    loop                     3DC   software.psm
    main                     013   software.psm
    map                      049   software.psm
    move_heli_up             2D3   software.psm
    new_random               2CB   software.psm
    no_collision             3E4   software.psm
    old_draw_line            389   software.psm
    play                     03F   software.psm
    random_block_location    2C5   software.psm
    right_edge               2A1   software.psm
    skip_everything          2CA   software.psm
 *  speed2                   3EE   software.psm
    stage2_check             3EA   software.psm
    stage3_check             3EF   software.psm
    stage4_check             3F3   software.psm
    stage5_check             3F7   software.psm
    start                    01B   software.psm
    start_screen             054   software.psm
    stay_in_gameover_state   03E   software.psm
    stay_in_start_state      023   software.psm
    wait                     385   software.psm
    wait0                    38B   software.psm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          23
   ADDCY        -
   AND          -
   CALL         146
   CALL@        -
   COMPARE      41
   COMPARECY    -
   DISABLE      -
   ENABLE       1
   FETCH        -
   HWBUILD      -
   INPUT        12
   JUMP         47
   JUMP@        -
   LOAD         489
   LOAD&RETURN  -
   OR           -
   OUTPUT       196
   OUTPUTK      -
   REGBANK      -
   RETURN       28
   RETURNI      1
   RL           -
   RR           -
   SL0          -
   SL1          -
   SLA          -
   SLX          -
   SR0          -
   SR1          -
   SRA          -
   SRX          -
   STAR         -
   STORE        -
   SUB          53
   SUBCY        -
   TEST         -
   TESTCY       -
   XOR          -
