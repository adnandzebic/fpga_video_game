Open Picoblaze Assembler log for program "software.psm"
Generated by opbasm v 1.2
  Assembled on 2015-12-01T17:16:37
  Picoblaze-6 mode

  Last occupied address: 7FF hex
  Nominal program memory size: 2K (2048)  address(10:0)
  Actual memory size: 4096
  Occupied memory locations: 1021
  Memory locations available: 3075
  Scratchpad size: 256


Assembly listing
----------------
000                             ;;============================================================================
000                             ;; File: software.psm
000                             ;; This is the PicoBlaze program for EE178 Lab #8.
000                             ;;============================================================================

000                             ;;============================================================================
000                             ;; Port address declarations.
000                             ;;============================================================================

000                             CONSTANT stax, 00              ; port for 8-bit start-x
000                             CONSTANT stay, 01              ; port for 8-bit start-y
000                             CONSTANT endx, 02              ; port for 8-bit end-x
000                             CONSTANT endy, 03              ; port for 8-bit end-y
000                             CONSTANT busy, 04              ; port for 8-bit busy
000                             CONSTANT beam, 05              ; port for 8-bit beam
000                             CONSTANT mode, 06              ; port for 8-bit mode
000                             CONSTANT prng, 07              ; port for 8-bit prng
000                             CONSTANT leds_lo, 08           ; port for 8-bit led data out
000                             CONSTANT leds_hi, 09           ; port for 8-bit led data out
000                             CONSTANT qssd_lo, 0a           ; port for 8-bit qssd data out
000                             CONSTANT qssd_hi, 0b           ; port for 8-bit qssd data out
000                             CONSTANT qssd_dp, 0c           ; port for 8-bit qssd data out
000                             CONSTANT switches_lo, 0d       ; port for 8-bit switch input
000                             CONSTANT switches_hi, 0e       ; port for 8-bit switch input
000                             CONSTANT buttons, 0f           ; port for 8-bit button input

000                             CONSTANT zero, 00              ; zero
000                             CONSTANT one, 01               ; one

000                             CONSTANT busy_go, 01           ; go command and busy status

000                             CONSTANT beam_hi, 0f           ; beam high intensity
000                             CONSTANT beam_md, 07           ; beam med intensity
000                             CONSTANT beam_lo, 03           ; beam low intensity

000                             CONSTANT mode_hld, 00          ; mode hold framebuffer
000                             CONSTANT mode_clr, 01          ; mode clear framebuffer
000                             CONSTANT mode_lin, 02          ; mode linear decay
000                             CONSTANT mode_exp, 03          ; mode exponential decay

000                             CONSTANT buttons_ct, 10        ; center
000                             CONSTANT buttons_up, 08        ; up
000                             CONSTANT buttons_dn, 04        ; down
000                             CONSTANT buttons_lf, 02        ; left
000                             CONSTANT buttons_rt, 01        ; right

000                             ;;============================================================================
000                             ;; Macro State declarations
000                             ;;============================================================================

000                             CONSTANT START_STATE, 00       ; start screen state
000                             CONSTANT PLAY_STATE, 01        ; play state
000                             CONSTANT GAMEOVER_STATE, 02    ; game over screen state
000                             CONSTANT CREDITS_STATE, 03     ; credits screen state (not used for now)

000                             ;;============================================================================
000                             ;; Boot.
000                             ;;============================================================================

000  01000                boot: LOAD s0, zero                  ; initialize
001  01100                      LOAD s1, zero                  ; initialize
002  01200                      LOAD s2, zero                  ; initialize
003  01300                      LOAD s3, zero                  ; initialize
004  01400                      LOAD s4, zero                  ; initialize
005  01900                      LOAD s9, START_STATE           ; initial state is to enter start screen
006  01A00                      LOAD sa, 00                    ; initial distance (score)
007  01B00                      LOAD sb, 00                    ; initial distance (score)
008  01C80                      LOAD sc, 80                    ; starting helicopter position
009  01D05                      LOAD sd, 05                    ; initialize (needed later)
00A  01EFF                      LOAD se, FF                    ; load 255 into sE (horizontal coordinate of block)
00B  01F62                      LOAD sf, 62                    ; load 108 into sF (vertical coordinate of block)
00C  01503                      LOAD s5, mode_exp              ; load desired mode
00D  2D506                      OUTPUT s5, mode                ; set desired mode
00E  0150F                      LOAD s5, beam_hi               ; load desired beam
00F  2D505                      OUTPUT s5, beam                ; set desired beam
010  28001                      ENABLE INTERRUPT               ; enable interrupts

011                             ;;============================================================================
011                             ;; Main.
011                             ;;============================================================================

011                       main:
011  22011                      JUMP main                      ; go back and repeat

012                             ;;============================================================================
012                             ;; Interrupt - Service Routine.
012                             ;;============================================================================

012  1D900                 isr: COMPARE s9, START_STATE        ; check if in the start state
013  30019                      CALL Z, start                  ; call the start screen state
014  1D901                      COMPARE s9, PLAY_STATE         ; check if in the play state
015  30034                      CALL Z, play                   ; call play subroutine
016  1D902                      COMPARE s9, GAMEOVER_STATE     ; check if in the gameover state
017  30022                      CALL Z, gameover               ; call the gameover subroutine

018  29001                      RETURNI ENABLE                 ; done with isr

019                             ;;============================================================================
019                             ;; Start - Start Subroutine
019                             ;;============================================================================

019  0950F               start: INPUT s5, buttons              ; get center button values
01A  20049                      CALL start_screen              ; draw the map using map subroutine

01B  0950F                      INPUT s5, buttons              ; get button values
01C  1D510                      COMPARE s5, buttons_ct         ; check if center button is pressed
01D  3201F                      JUMP Z, enter_play_state       ; jump to enter_play_state
01E  36021                      JUMP NZ, stay_in_start_state   ; remain in current state with a jump to stay_in_start_state

01F           enter_play_state:
01F  01901                      LOAD s9, PLAY_STATE            ; load play_state and enter play mode
020  25000                      RETURN                         ; return from start subroutine

021        stay_in_start_state:
021  25000                      RETURN                         ; return from start subroutine

022                             ;;============================================================================
022                             ;; Game Over - Game Over Subroutine
022                             ;;============================================================================

022  0950F            gameover: INPUT s5, buttons              ; get center button values
023  2003E                      CALL map                       ; draw the map using map subroutine
024  20284                      CALL draw_helicopter           ; draw the helicopter

025  0950F                      INPUT s5, buttons              ; get button values
026  1D508                      COMPARE s5, buttons_up         ; check if up button is pressed
027  32029                      JUMP Z, enter_play_state2      ; jump to enter_play_state2
028  36033                      JUMP NZ, stay_in_gameover_state ; remain in current state with a jump to stay_in_gameover_state

029          enter_play_state2:
029  01901                      LOAD s9, PLAY_STATE            ; load play_state and enter play mode

02A                             ;; RESET EVERYTHING BEFORE RETURNING
02A  01A00                      LOAD sa, 00                    ; initial distance (score)
02B  01B00                      LOAD sb, 00                    ; initial distance (score)
02C  2DB0A                      OUTPUT sb, qssd_lo             ; reset qssd_lo
02D  2DA0B                      OUTPUT sa, qssd_hi             ; reset qssd_hi
02E  01C80                      LOAD sc, 80                    ; starting helicopter position
02F  01D05                      LOAD sd, 05                    ; initialize (needed later)
030  01EFF                      LOAD se, FF                    ; load 255 into sE (horizontal coordinate of block)
031  01F62                      LOAD sf, 62                    ; load 108 into sF (vertical coordinate of block)
032  25000                      RETURN                         ; return from start subroutine

033        stay_in_gameover_state:
033  25000                      RETURN                         ; return from start subroutine

034                             ;;============================================================================
034                             ;; Play - Play Subroutine
034                             ;;============================================================================

034  0950F                play: INPUT s5, buttons              ; get center button values
035  2003E                      CALL map                       ; draw the map using map subroutine

036  0950F                      INPUT s5, buttons              ; get button values
037  1D510                      COMPARE s5, buttons_ct         ; check if center button is pressed
038  302C3                      CALL Z, move_heli_up           ; call subroutine that moves the helicopter up

039  20284                      CALL draw_helicopter           ; draw the helicopter
03A  202B5                      CALL random_block_location     ; determines a random place for the block (y direction only)
03B  20288                      CALL draw_block                ; draw the block using draw_block subroutine
03C  2037F                      CALL check_collision           ; check if any collisions happen

03D  25000                      RETURN                         ; finished with play subroutine

03E                             ;;============================================================================
03E                             ;; Map - Draw Map Subroutine
03E                             ;;============================================================================

03E                        map:

03E                             ;;============================================================================
03E                             ;; Draws Top Line of Map (Line 1)
03E                             ;;============================================================================

03E  01000                      LOAD s0, 00                    ; load 00 into s0
03F  0110F                      LOAD s1, 0F                    ; load 0F into s1
040  012FF                      LOAD s2, FF                    ; load FF into s2
041  0130F                      LOAD s3, 0F                    ; load 0F into s3
042  2036F                      CALL draw_line                 ; draws the line

043                             ;;============================================================================
043                             ;; Draws Bottom Line of Map (Line 2)
043                             ;;============================================================================

043  01000                      LOAD s0, 00                    ; load 00 into s0
044  011F0                      LOAD s1, F0                    ; load 0F into s1
045  012FF                      LOAD s2, FF                    ; load FF into s2
046  013F0                      LOAD s3, F0                    ; load F0 into s3
047  2036F                      CALL draw_line                 ; draws the line

048  25000                      RETURN                         ; go back from drawing map

049                             ;;============================================================================
049                             ;; Start Screen - Draw Start Screen Subroutine
049                             ;;============================================================================

049               start_screen:
049                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
049                             ;; Code for PRESS START [START MENU] ;;
049                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

049                             ;;;;;;;;;;;;;;;
049                             ;;BEGIN PRESS;;
049                             ;;;;;;;;;;;;;;;

049                             ;; LINE 1 (LEFT) FOR P
049  01041                      LOAD s0, 41                    ; stax 65
04A  011C8                      LOAD s1, C8                    ; stay 200
04B  01241                      LOAD s2, 41                    ; endx 65
04C  013D2                      LOAD s3, D2                    ; endy 210
04D  2036F                      CALL draw_line                 ;

04E                             ;; LINE 2 (TOP) FOR P
04E  01041                      LOAD s0, 41                    ; stax 65
04F  011C8                      LOAD s1, C8                    ; stay 200
050  01246                      LOAD s2, 46                    ; endx 70
051  013C8                      LOAD s3, C8                    ; endy 200
052  2036F                      CALL draw_line                 ;

053                             ;; LINE 3 (RIGHT) FOR P
053  01046                      LOAD s0, 46                    ; stax 70
054  011C8                      LOAD s1, C8                    ; stay 200
055  01246                      LOAD s2, 46                    ; endx 70
056  013CD                      LOAD s3, CD                    ; endy 205
057  2036F                      CALL draw_line                 ;

058                             ;; LINE 4 (MIDDLE) FOR P
058  01041                      LOAD s0, 41                    ; stax 65
059  011CD                      LOAD s1, CD                    ; stay 205
05A  01246                      LOAD s2, 46                    ; endx 70
05B  013CD                      LOAD s3, CD                    ; endy 205
05C  2036F                      CALL draw_line                 ;

05D                             ;; LINE 1 (LEFT) FOR R
05D  0104B                      LOAD s0, 4B                    ; stax 75
05E  011C8                      LOAD s1, C8                    ; stay 200
05F  0124B                      LOAD s2, 4B                    ; endx 75
060  013D2                      LOAD s3, D2                    ; endy 210
061  2036F                      CALL draw_line                 ;

062                             ;; LINE 2 (TOP) FOR R
062  0104B                      LOAD s0, 4B                    ; stax 75
063  011C8                      LOAD s1, C8                    ; stay 200
064  01250                      LOAD s2, 50                    ; endx 80
065  013C8                      LOAD s3, C8                    ; endy 200
066  2036F                      CALL draw_line                 ;

067                             ;; LINE 3 (RIGHT) FOR R
067  01050                      LOAD s0, 50                    ; stax 80
068  011C8                      LOAD s1, C8                    ; stay 200
069  01250                      LOAD s2, 50                    ; endx 80
06A  013CD                      LOAD s3, CD                    ; endy 205
06B  2036F                      CALL draw_line                 ;

06C                             ;; LINE 4 (MIDDLE) FOR R
06C  0104B                      LOAD s0, 4B                    ; stax 75
06D  011CD                      LOAD s1, CD                    ; stay 205
06E  01250                      LOAD s2, 50                    ; endx 80
06F  013CD                      LOAD s3, CD                    ; endy 205
070  2036F                      CALL draw_line                 ;

071                             ;; LINE 5 (ANGLED) FOR R
071  0104B                      LOAD s0, 4B                    ; stax 75
072  011CD                      LOAD s1, CD                    ; stay 205
073  01250                      LOAD s2, 50                    ; endx 80
074  013D2                      LOAD s3, D2                    ; endy 210
075  2036F                      CALL draw_line                 ;


076                             ;; LINE 6 (ANGLED2) FOR R
076  0104B                      LOAD s0, 4B                    ; stax 75
077  011CE                      LOAD s1, CE                    ; stay 204
078  0124F                      LOAD s2, 4F                    ; endx 79
079  013D2                      LOAD s3, D2                    ; endy 210
07A  2036F                      CALL draw_line                 ;

07B                             ;; LINE 1 (LEFT) FOR E
07B  01055                      LOAD s0, 55                    ; stax 85
07C  011C8                      LOAD s1, C8                    ; stay 200
07D  01255                      LOAD s2, 55                    ; endx 85
07E  013D2                      LOAD s3, D2                    ; endy 210
07F  2036F                      CALL draw_line                 ;

080                             ;; LINE 2 (TOP) FOR E
080  01055                      LOAD s0, 55                    ; stax 85
081  011C8                      LOAD s1, C8                    ; stay 200
082  0125A                      LOAD s2, 5A                    ; endx 90
083  013C8                      LOAD s3, C8                    ; endy 200
084  2036F                      CALL draw_line                 ;

085                             ;; LINE 3 (MIDDLE) FOR E
085  01055                      LOAD s0, 55                    ; stax 85
086  011CD                      LOAD s1, CD                    ; stay 205
087  0125A                      LOAD s2, 5A                    ; endx 90
088  013CD                      LOAD s3, CD                    ; endy 205
089  2036F                      CALL draw_line                 ;

08A                             ;; LINE 4 (BOTTOM) FOR E
08A  01055                      LOAD s0, 55                    ; stax 85
08B  011D2                      LOAD s1, D2                    ; stay 210
08C  0125A                      LOAD s2, 5A                    ; endx 90
08D  013D2                      LOAD s3, D2                    ; endy 210
08E  2036F                      CALL draw_line                 ;

08F                             ;; LINE 1 (TOP) FOR S1
08F  0105F                      LOAD s0, 5F                    ; stax 95
090  011C8                      LOAD s1, C8                    ; stay 200
091  01264                      LOAD s2, 64                    ; endx 100
092  013C8                      LOAD s3, C8                    ; endy 200
093  2036F                      CALL draw_line                 ;

094                             ;; LINE 2 (TOPLEFT) FOR S1
094  0105F                      LOAD s0, 5F                    ; stax 95
095  011C8                      LOAD s1, C8                    ; stay 200
096  0125F                      LOAD s2, 5F                    ; endx 95
097  013CD                      LOAD s3, CD                    ; endy 205
098  2036F                      CALL draw_line                 ;

099                             ;; LINE 3 (MIDDLE) FOR S1
099  0105F                      LOAD s0, 5F                    ; stax 95
09A  011CD                      LOAD s1, CD                    ; stay 205
09B  01264                      LOAD s2, 64                    ; endx 100
09C  013CD                      LOAD s3, CD                    ; endy 205
09D  2036F                      CALL draw_line                 ;

09E                             ;; LINE 4 (BOTTOMRIGHT) FOR S1
09E  01064                      LOAD s0, 64                    ; stax 100
09F  011CD                      LOAD s1, CD                    ; stay 205
0A0  01264                      LOAD s2, 64                    ; endx 100
0A1  013D2                      LOAD s3, D2                    ; endy 210
0A2  2036F                      CALL draw_line                 ;

0A3                             ;; LINE 5 (BOTTOM) FOR S1
0A3  0105F                      LOAD s0, 5F                    ; stax 95
0A4  011D2                      LOAD s1, D2                    ; stay 210
0A5  01264                      LOAD s2, 64                    ; endx 100
0A6  013D2                      LOAD s3, D2                    ; endy 210
0A7  2036F                      CALL draw_line                 ;

0A8                             ;; LINE 1 (TOP) FOR S2
0A8  01069                      LOAD s0, 69                    ; stax 105
0A9  011C8                      LOAD s1, C8                    ; stay 200
0AA  0126E                      LOAD s2, 6E                    ; endx 110
0AB  013C8                      LOAD s3, C8                    ; endy 200
0AC  2036F                      CALL draw_line                 ;

0AD                             ;; LINE 2 (TOPLEFT) FOR S2
0AD  01069                      LOAD s0, 69                    ; stax 105
0AE  011C8                      LOAD s1, C8                    ; stay 200
0AF  01269                      LOAD s2, 69                    ; endx 105
0B0  013CD                      LOAD s3, CD                    ; endy 205
0B1  2036F                      CALL draw_line                 ;

0B2                             ;; LINE 3 (MIDDLE) FOR S2
0B2  01069                      LOAD s0, 69                    ; stax 105
0B3  011CD                      LOAD s1, CD                    ; stay 205
0B4  0126E                      LOAD s2, 6E                    ; endx 110
0B5  013CD                      LOAD s3, CD                    ; endy 205
0B6  2036F                      CALL draw_line                 ;

0B7                             ;; LINE 4 (BOTTOMRIGHT) FOR S2
0B7  0106E                      LOAD s0, 6E                    ; stax 110
0B8  011CD                      LOAD s1, CD                    ; stay 205
0B9  0126E                      LOAD s2, 6E                    ; endx 110
0BA  013D2                      LOAD s3, D2                    ; endy 210
0BB  2036F                      CALL draw_line                 ;

0BC                             ;; LINE 5 (BOTTOM) FOR S2
0BC  01069                      LOAD s0, 69                    ; stax 105
0BD  011D2                      LOAD s1, D2                    ; stay 210
0BE  0126E                      LOAD s2, 6E                    ; endx 110
0BF  013D2                      LOAD s3, D2                    ; endy 210
0C0  2036F                      CALL draw_line                 ;

0C1                             ;;;;;;;;;;;;;;;
0C1                             ;;BEGIN START;;
0C1                             ;;;;;;;;;;;;;;;

0C1                             ;; LINE 1 (TOP) FOR S
0C1  01082                      LOAD s0, 82                    ; stax 130
0C2  011C8                      LOAD s1, C8                    ; stay 200
0C3  01288                      LOAD s2, 88                    ; endx 135
0C4  013C8                      LOAD s3, C8                    ; endy 200
0C5  2036F                      CALL draw_line                 ;

0C6                             ;; LINE 2 (TOPLEFT) FOR S
0C6  01082                      LOAD s0, 82                    ; stax 130
0C7  011C8                      LOAD s1, C8                    ; stay 200
0C8  01282                      LOAD s2, 82                    ; endx 130
0C9  013CD                      LOAD s3, CD                    ; endy 205
0CA  2036F                      CALL draw_line                 ;

0CB                             ;; LINE 3 (MIDDLE) FOR S
0CB  01082                      LOAD s0, 82                    ; stax 130
0CC  011CD                      LOAD s1, CD                    ; stay 205
0CD  01287                      LOAD s2, 87                    ; endx 135
0CE  013CD                      LOAD s3, CD                    ; endy 205
0CF  2036F                      CALL draw_line                 ;

0D0                             ;; LINE 4 (BOTTOMRIGHT) FOR S
0D0  01087                      LOAD s0, 87                    ; stax 135
0D1  011CD                      LOAD s1, CD                    ; stay 205
0D2  01287                      LOAD s2, 87                    ; endx 135
0D3  013D2                      LOAD s3, D2                    ; endy 210
0D4  2036F                      CALL draw_line                 ;

0D5                             ;; LINE 5 (BOTTOM) FOR S
0D5  01082                      LOAD s0, 82                    ; stax 130
0D6  011D2                      LOAD s1, D2                    ; stay 210
0D7  01287                      LOAD s2, 87                    ; endx 135
0D8  013D2                      LOAD s3, D2                    ; endy 210
0D9  2036F                      CALL draw_line                 ;

0DA                             ;; LINE 1 (TOP) FOR T1
0DA  0108C                      LOAD s0, 8C                    ; stax 140
0DB  011C8                      LOAD s1, C8                    ; stay 200
0DC  01293                      LOAD s2, 93                    ; endx 147
0DD  013C8                      LOAD s3, C8                    ; endy 200
0DE  2036F                      CALL draw_line                 ;

0DF                             ;; LINE 2 (MIDDLE) FOR T1
0DF  0108F                      LOAD s0, 8F                    ; stax 143
0E0  011C8                      LOAD s1, C8                    ; stay 200
0E1  0128F                      LOAD s2, 8F                    ; endx 143
0E2  013D2                      LOAD s3, D2                    ; endy 210
0E3  2036F                      CALL draw_line                 ;

0E4                             ;; LINE 1 (LEFT) FOR A
0E4  01096                      LOAD s0, 96                    ; stax 150
0E5  011C8                      LOAD s1, C8                    ; stay 200
0E6  01296                      LOAD s2, 96                    ; endx 150
0E7  013D2                      LOAD s3, D2                    ; endy 210
0E8  2036F                      CALL draw_line                 ;

0E9                             ;; LINE 2 (TOP) FOR A
0E9  01096                      LOAD s0, 96                    ; stax 150
0EA  011C8                      LOAD s1, C8                    ; stay 200
0EB  0129B                      LOAD s2, 9B                    ; endx 155
0EC  013C8                      LOAD s3, C8                    ; endy 200
0ED  2036F                      CALL draw_line                 ;

0EE                             ;; LINE 3 (MIDDLE) FOR A
0EE  01096                      LOAD s0, 96                    ; stax 150
0EF  011CD                      LOAD s1, CD                    ; stay 205
0F0  0129B                      LOAD s2, 9B                    ; endx 155
0F1  013CD                      LOAD s3, CD                    ; endy 205
0F2  2036F                      CALL draw_line                 ;

0F3                             ;; LINE 4 (RIGHT) FOR A
0F3  0109B                      LOAD s0, 9B                    ; stax 155
0F4  011C8                      LOAD s1, C8                    ; stay 200
0F5  0129B                      LOAD s2, 9B                    ; endx 155
0F6  013D2                      LOAD s3, D2                    ; endy 210
0F7  2036F                      CALL draw_line                 ;

0F8                             ;; LINE 1 (LEFT) FOR R
0F8  010A0                      LOAD s0, A0                    ; stax 160
0F9  011C8                      LOAD s1, C8                    ; stay 200
0FA  012A0                      LOAD s2, A0                    ; endx 160
0FB  013D2                      LOAD s3, D2                    ; endy 210
0FC  2036F                      CALL draw_line                 ;

0FD                             ;; LINE 2 (TOP) FOR R
0FD  010A0                      LOAD s0, A0                    ; stax 160
0FE  011C8                      LOAD s1, C8                    ; stay 200
0FF  012A5                      LOAD s2, A5                    ; endx 165
100  013C8                      LOAD s3, C8                    ; endy 200
101  2036F                      CALL draw_line                 ;

102                             ;; LINE 3 (RIGHT) FOR R
102  010A5                      LOAD s0, A5                    ; stax 165
103  011C8                      LOAD s1, C8                    ; stay 200
104  012A5                      LOAD s2, A5                    ; endx 165
105  013CD                      LOAD s3, CD                    ; endy 205
106  2036F                      CALL draw_line                 ;

107                             ;; LINE 4 (MIDDLE) FOR R
107  010A0                      LOAD s0, A0                    ; stax 160
108  011CD                      LOAD s1, CD                    ; stay 205
109  012A5                      LOAD s2, A5                    ; endx 165
10A  013CD                      LOAD s3, CD                    ; endy 205
10B  2036F                      CALL draw_line                 ;

10C                             ;; LINE 5 (ANGLED) FOR R
10C  010A0                      LOAD s0, A0                    ; stax 160
10D  011CD                      LOAD s1, CD                    ; stay 205
10E  012A5                      LOAD s2, A5                    ; endx 165
10F  013D2                      LOAD s3, D2                    ; endy 210
110  2036F                      CALL draw_line                 ;

111                             ;; LINE 6 (ANGLED2) FOR R
111  010A0                      LOAD s0, A0                    ; stax 160
112  011CE                      LOAD s1, CE                    ; stay 206
113  012A4                      LOAD s2, A4                    ; endx 164
114  013D2                      LOAD s3, D2                    ; endy 210
115  2036F                      CALL draw_line                 ;

116                             ;; LINE 1 (TOP) FOR T2
116  010AA                      LOAD s0, AA                    ; stax 170
117  011C8                      LOAD s1, C8                    ; stay 200
118  012B1                      LOAD s2, B1                    ; endx 177
119  013C8                      LOAD s3, C8                    ; endy 200
11A  2036F                      CALL draw_line                 ;

11B                             ;; LINE 2 (MIDDLE) FOR T2
11B  010AD                      LOAD s0, AD                    ; stax 173
11C  011C8                      LOAD s1, C8                    ; stay 200
11D  012AD                      LOAD s2, AD                    ; endx 173
11E  013D2                      LOAD s3, D2                    ; endy 210
11F  2036F                      CALL draw_line                 ;



120                             ;;============================================================================
120                             ;; Draws Decoration (Line 1a)
120                             ;;============================================================================

120  01000                      LOAD s0, 00                    ; load 00 into s0
121  0110A                      LOAD s1, 0A                    ; load 0A into s1
122  012FF                      LOAD s2, FF                    ; load FF into s2
123  0130A                      LOAD s3, 0A                    ; load 0A into s3
124  2036F                      CALL draw_line                 ; draws the line

125                             ;;===========================================================================
125                             ;; Draws Decoration (Line 2a)
125                             ;;============================================================================

125  01000                      LOAD s0, 00                    ; load 00 into s0
126  0110C                      LOAD s1, 0C                    ; load 0C into s1
127  012FF                      LOAD s2, FF                    ; load FF into s2
128  0130C                      LOAD s3, 0C                    ; load 0C into s3
129  2036F                      CALL draw_line                 ; draws the line

12A                             ;;===========================================================================
12A                             ;; Draws Decoration (Line 3a)
12A                             ;;============================================================================

12A  01000                      LOAD s0, 00                    ; load 00 into s0
12B  0110E                      LOAD s1, 0E                    ; load 0E into s1
12C  012FF                      LOAD s2, FF                    ; load FF into s2
12D  0130E                      LOAD s3, 0E                    ; load 0E into s3
12E  2036F                      CALL draw_line                 ; draws the line

12F                             ;;============================================================================
12F                             ;; Draws Decoration (Line 1b)
12F                             ;;============================================================================

12F  01000                      LOAD s0, 00                    ; load 00 into s0
130  01188                      LOAD s1, 88                    ; load 88 into s1
131  012FF                      LOAD s2, FF                    ; load FF into s2
132  01388                      LOAD s3, 88                    ; load 88 into s3
133  2036F                      CALL draw_line                 ; draws the line

134                             ;;===========================================================================
134                             ;; Draws Decoration (Line 2b)
134                             ;;============================================================================

134  01000                      LOAD s0, 00                    ; load 00 into s0
135  0118A                      LOAD s1, 8A                    ; load 8A into s1
136  012FF                      LOAD s2, FF                    ; load FF into s2
137  0138A                      LOAD s3, 8A                    ; load 8A into s3
138  2036F                      CALL draw_line                 ; draws the line

139                             ;;===========================================================================
139                             ;; Draws Decoration (Line 3b)
139                             ;;============================================================================

139  01000                      LOAD s0, 00                    ; load 00 into s0
13A  0118C                      LOAD s1, 8C                    ; load 8A into s1
13B  012FF                      LOAD s2, FF                    ; load FF into s2
13C  0138C                      LOAD s3, 8C                    ; load 8C into s3
13D  2036F                      CALL draw_line                 ; draws the line

13E                             ;;============================================================================
13E                             ;; Draws the letter H (Line 1)
13E                             ;;============================================================================

13E                             ;; STARTING POINT
13E  0150A                      LOAD s5, 0A                    ; load 10 into s5
13F  2D500                      OUTPUT s5, stax                ; set desired stax
140  0161E                      LOAD s6, 1E                    ; load 30 into s6
141  2D601                      OUTPUT s6, stay                ; set desired stay

142                             ;; ENDING POINT
142  2D502                      OUTPUT s5, endx                ; set desired endx
143  0163C                      LOAD s6, 3C                    ; load 60 into s6
144  2D603                      OUTPUT s6, endy                ; set desired endy
145  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

146                             ;;============================================================================
146                             ;; Draws the letter H (Line 2)
146                             ;;============================================================================

146                             ;; STARTING POINT
146  0150A                      LOAD s5, 0A                    ; load 10 into s5
147  2D500                      OUTPUT s5, stax                ; set desired stax
148  0162D                      LOAD s6, 2D                    ; load 45 into s6
149  2D601                      OUTPUT s6, stay                ; set desired stay

14A                             ;; ENDING POINT
14A  0151E                      LOAD s5, 1E                    ; load 30 into s5
14B  2D502                      OUTPUT s5, endx                ; set desired endx
14C  2D603                      OUTPUT s6, endy                ; set desired endy
14D  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

14E                             ;;============================================================================
14E                             ;; Draws the letter H (Line 3)
14E                             ;;============================================================================

14E                             ;; STARTING POINT
14E  0151E                      LOAD s5, 1E                    ; load 30 into s5
14F  2D500                      OUTPUT s5, stax                ; set desired stax
150  0161E                      LOAD s6, 1E                    ; load 30 into s6
151  2D601                      OUTPUT s6, stay                ; set desired stay

152                             ;; ENDING POINT
152  2D502                      OUTPUT s5, endx                ; set desired endx
153  0163C                      LOAD s6, 3C                    ; load 60 into s6
154  2D603                      OUTPUT s6, endy                ; set desired endy
155  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

156                             ;;============================================================================
156                             ;; Draws the letter E (Line 1)
156                             ;;============================================================================

156                             ;; STARTING POINT
156  01528                      LOAD s5, 28                    ; load 40 into s5
157  2D500                      OUTPUT s5, stax                ; set desired stax
158  0161E                      LOAD s6, 1E                    ; load 30 into s6
159  2D601                      OUTPUT s6, stay                ; set desired stay

15A                             ;; ENDING POINT
15A  2D502                      OUTPUT s5, endx                ; set desired endx
15B  0163C                      LOAD s6, 3C                    ; load 60 into s6
15C  2D603                      OUTPUT s6, endy                ; set desired endy
15D  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

15E                             ;;============================================================================
15E                             ;; Draws the letter E (Line 2)
15E                             ;;============================================================================

15E                             ;; STARTING POINT
15E  01528                      LOAD s5, 28                    ; load 40 into s5
15F  2D500                      OUTPUT s5, stax                ; set desired stax
160  0161E                      LOAD s6, 1E                    ; load 30 into s6
161  2D601                      OUTPUT s6, stay                ; set desired stay

162                             ;; ENDING POINT
162  0153C                      LOAD s5, 3C                    ; load 60 into s5
163  2D502                      OUTPUT s5, endx                ; set desired endx
164  2D603                      OUTPUT s6, endy                ; set desired endy
165  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

166                             ;;============================================================================
166                             ;; Draws the letter E (Line 3)
166                             ;;============================================================================

166                             ;; STARTING POINT
166  01528                      LOAD s5, 28                    ; load 40 into s5
167  2D500                      OUTPUT s5, stax                ; set desired stax
168  0162D                      LOAD s6, 2D                    ; load 45 into s6
169  2D601                      OUTPUT s6, stay                ; set desired stay

16A                             ;; ENDING POINT
16A  0153C                      LOAD s5, 3C                    ; load 60 into s5
16B  2D502                      OUTPUT s5, endx                ; set desired endx
16C  2D603                      OUTPUT s6, endy                ; set desired endy
16D  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

16E                             ;;============================================================================
16E                             ;; Draws the letter E (Line 3)
16E                             ;;============================================================================

16E                             ;; STARTING POINT
16E  01528                      LOAD s5, 28                    ; load 40 into s5
16F  2D500                      OUTPUT s5, stax                ; set desired stax
170  0163C                      LOAD s6, 3C                    ; load 45 into s6
171  2D601                      OUTPUT s6, stay                ; set desired stay

172                             ;; ENDING POINT
172  0153C                      LOAD s5, 3C                    ; load 60 into s5
173  2D502                      OUTPUT s5, endx                ; set desired endx
174  2D603                      OUTPUT s6, endy                ; set desired endy
175  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

176                             ;;============================================================================
176                             ;; Draws the letter L (Line 1)
176                             ;;============================================================================

176                             ;; STARTING POINT
176  01546                      LOAD s5, 46                    ; load 70 into s5
177  2D500                      OUTPUT s5, stax                ; set desired stax
178  0161E                      LOAD s6, 1E                    ; load 30 into s6
179  2D601                      OUTPUT s6, stay                ; set desired stay

17A                             ;; ENDING POINT
17A  2D502                      OUTPUT s5, endx                ; set desired endx
17B  0163C                      LOAD s6, 3C                    ; load 60 into s6
17C  2D603                      OUTPUT s6, endy                ; set desired endy
17D  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

17E                             ;;============================================================================
17E                             ;; Draws the letter L (Line 2)
17E                             ;;============================================================================

17E                             ;; STARTING POINT
17E  01546                      LOAD s5, 46                    ; load 70 into s5
17F  2D500                      OUTPUT s5, stax                ; set desired stax
180  0163C                      LOAD s6, 3C                    ; load 45 into s6
181  2D601                      OUTPUT s6, stay                ; set desired stay

182                             ;; ENDING POINT
182  0155A                      LOAD s5, 5A                    ; load 90 into s5
183  2D502                      OUTPUT s5, endx                ; set desired endx
184  2D603                      OUTPUT s6, endy                ; set desired endy
185  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

186                             ;;============================================================================
186                             ;; Draws the letter I (Line 1)
186                             ;;============================================================================

186                             ;; STARTING POINT
186  01564                      LOAD s5, 64                    ; load 70 into s5
187  2D500                      OUTPUT s5, stax                ; set desired stax
188  0161E                      LOAD s6, 1E                    ; load 30 into s6
189  2D601                      OUTPUT s6, stay                ; set desired stay

18A                             ;; ENDING POINT
18A  2D502                      OUTPUT s5, endx                ; set desired endx
18B  0163C                      LOAD s6, 3C                    ; load 60 into s6
18C  2D603                      OUTPUT s6, endy                ; set desired endy
18D  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

18E                             ;;============================================================================
18E                             ;; Draws the letter C (Line 1)
18E                             ;;============================================================================

18E                             ;; STARTING POINT
18E  01582                      LOAD s5, 82                    ; load 130 into s5
18F  2D500                      OUTPUT s5, stax                ; set desired stax
190  0161E                      LOAD s6, 1E                    ; load 45 into s6
191  2D601                      OUTPUT s6, stay                ; set desired stay

192                             ;; ENDING POINT
192  01573                      LOAD s5, 73                    ; load 115 into s5
193  2D502                      OUTPUT s5, endx                ; set desired endx
194  2D603                      OUTPUT s6, endy                ; set desired endy
195  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

196                             ;;============================================================================
196                             ;; Draws the letter C (Line 2)
196                             ;;============================================================================

196                             ;; STARTING POINT
196  01573                      LOAD s5, 73                    ; load 115 into s5
197  2D500                      OUTPUT s5, stax                ; set desired stax
198  0161E                      LOAD s6, 1E                    ; load 45 into s6
199  2D601                      OUTPUT s6, stay                ; set desired stay

19A                             ;; ENDING POINT
19A  0156E                      LOAD s5, 6E                    ; load 110 into s5
19B  2D502                      OUTPUT s5, endx                ; set desired endx
19C  01623                      LOAD s6, 23                    ; load 35 into s6
19D  2D603                      OUTPUT s6, endy                ; set desired endy
19E  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

19F                             ;;============================================================================
19F                             ;; Draws the letter C (Line 3)
19F                             ;;============================================================================

19F                             ;; STARTING POINT
19F  0156E                      LOAD s5, 6E                    ; load 110 into s5
1A0  2D500                      OUTPUT s5, stax                ; set desired stax
1A1  01623                      LOAD s6, 23                    ; load 35 into s6
1A2  2D601                      OUTPUT s6, stay                ; set desired stay

1A3                             ;; ENDING POINT
1A3  2D502                      OUTPUT s5, endx                ; set desired endx
1A4  01637                      LOAD s6, 37                    ; load 55 into s6
1A5  2D603                      OUTPUT s6, endy                ; set desired endy
1A6  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1A7                             ;;============================================================================
1A7                             ;; Draws the letter C (Line 4)
1A7                             ;;============================================================================

1A7                             ;; STARTING POINT
1A7  0156E                      LOAD s5, 6E                    ; load 110 into s5
1A8  2D500                      OUTPUT s5, stax                ; set desired stax
1A9  01637                      LOAD s6, 37                    ; load 55 into s6
1AA  2D601                      OUTPUT s6, stay                ; set desired stay

1AB                             ;; ENDING POINT
1AB  01573                      LOAD s5, 73                    ; load 130 into s5
1AC  2D502                      OUTPUT s5, endx                ; set desired endx
1AD  0163B                      LOAD s6, 3B                    ; load 44 into s6
1AE  2D603                      OUTPUT s6, endy                ; set desired endy
1AF  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1B0                             ;;============================================================================
1B0                             ;; Draws the letter C (Line 5)
1B0                             ;;============================================================================

1B0                             ;; STARTING POINT
1B0  01582                      LOAD s5, 82                    ; load 130 into s5
1B1  2D500                      OUTPUT s5, stax                ; set desired stax
1B2  0163C                      LOAD s6, 3C                    ; load 45 into s6
1B3  2D601                      OUTPUT s6, stay                ; set desired stay

1B4                             ;; ENDING POINT
1B4  01573                      LOAD s5, 73                    ; load 115 into s5
1B5  2D502                      OUTPUT s5, endx                ; set desired endx
1B6  2D603                      OUTPUT s6, endy                ; set desired endy
1B7  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1B8                             ;;============================================================================
1B8                             ;; Draws the letter O (Line 1)
1B8                             ;;============================================================================

1B8                             ;; STARTING POINT
1B8  01591                      LOAD s5, 91                    ; load 145 into s5
1B9  2D500                      OUTPUT s5, stax                ; set desired stax
1BA  0161E                      LOAD s6, 1E                    ; load 30 into s6
1BB  2D601                      OUTPUT s6, stay                ; set desired stay

1BC                             ;; ENDING POINT
1BC  0159B                      LOAD s5, 9B                    ; load 155 into s5
1BD  2D502                      OUTPUT s5, endx                ; set desired endx
1BE  2D603                      OUTPUT s6, endy                ; set desired endy
1BF  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1C0                             ;;============================================================================
1C0                             ;; Draws the letter O (Line 2)
1C0                             ;;============================================================================

1C0                             ;; STARTING POINT
1C0  01591                      LOAD s5, 91                    ; load 145 into s5
1C1  2D500                      OUTPUT s5, stax                ; set desired stax
1C2  0161E                      LOAD s6, 1E                    ; load 45 into s6
1C3  2D601                      OUTPUT s6, stay                ; set desired stay

1C4                             ;; ENDING POINT
1C4  0158C                      LOAD s5, 8C                    ; load 110 into s5
1C5  2D502                      OUTPUT s5, endx                ; set desired endx
1C6  0161E                      LOAD s6, 1E                    ; load 35 into s6
1C7  2D603                      OUTPUT s6, endy                ; set desired endy
1C8  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1C9                             ;;============================================================================
1C9                             ;; Draws the letter O (Line 3)
1C9                             ;;============================================================================

1C9                             ;; STARTING POINT
1C9  0158C                      LOAD s5, 8C                    ; load 140 into s5
1CA  2D500                      OUTPUT s5, stax                ; set desired stax
1CB  0161E                      LOAD s6, 1E                    ; load 30 into s6
1CC  2D601                      OUTPUT s6, stay                ; set desired stay

1CD                             ;; ENDING POINT
1CD  2D502                      OUTPUT s5, endx                ; set desired endx
1CE  0163C                      LOAD s6, 3C                    ; load 60 into s6
1CF  2D603                      OUTPUT s6, endy                ; set desired endy
1D0  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1D1                             ;;============================================================================
1D1                             ;; Draws the letter O (Line 4)
1D1                             ;;============================================================================

1D1                             ;; STARTING POINT
1D1  0158C                      LOAD s5, 8C                    ; load 110 into s5
1D2  2D500                      OUTPUT s5, stax                ; set desired stax
1D3  0163C                      LOAD s6, 3C                    ; load 55 into s6
1D4  2D601                      OUTPUT s6, stay                ; set desired stay

1D5                             ;; ENDING POINT
1D5  01591                      LOAD s5, 91                    ; load 145 into s5
1D6  2D502                      OUTPUT s5, endx                ; set desired endx
1D7  0163C                      LOAD s6, 3C                    ; load 30 into s6
1D8  2D603                      OUTPUT s6, endy                ; set desired endy
1D9  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1DA                             ;;============================================================================
1DA                             ;; Draws the letter O (Line 5)
1DA                             ;;============================================================================

1DA                             ;; STARTING POINT
1DA  01591                      LOAD s5, 91                    ; load 145 into s5
1DB  2D500                      OUTPUT s5, stax                ; set desired stax
1DC  0163C                      LOAD s6, 3C                    ; load 30 into s6
1DD  2D601                      OUTPUT s6, stay                ; set desired stay

1DE                             ;; ENDING POINT
1DE  0159B                      LOAD s5, 9B                    ; load 155 into s5
1DF  2D502                      OUTPUT s5, endx                ; set desired endx
1E0  2D603                      OUTPUT s6, endy                ; set desired endy
1E1  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1E2                             ;;============================================================================
1E2                             ;; Draws the letter O (Line 6)
1E2                             ;;============================================================================

1E2                             ;; STARTING POINT
1E2  0159B                      LOAD s5, 9B                    ; load 110 into s5
1E3  2D500                      OUTPUT s5, stax                ; set desired stax
1E4  0163C                      LOAD s6, 3C                    ; load 55 into s6
1E5  2D601                      OUTPUT s6, stay                ; set desired stay

1E6                             ;; ENDING POINT
1E6  015A0                      LOAD s5, A0                    ; load 160 into s5
1E7  2D502                      OUTPUT s5, endx                ; set desired endx
1E8  0163C                      LOAD s6, 3C                    ; load 30 into s6
1E9  2D603                      OUTPUT s6, endy                ; set desired endy
1EA  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1EB                             ;;============================================================================
1EB                             ;; Draws the letter O (Line 7)
1EB                             ;;============================================================================

1EB                             ;; STARTING POINT
1EB  015A0                      LOAD s5, A0                    ; load 160 into s5
1EC  2D500                      OUTPUT s5, stax                ; set desired stax
1ED  0161E                      LOAD s6, 1E                    ; load 30 into s6
1EE  2D601                      OUTPUT s6, stay                ; set desired stay

1EF                             ;; ENDING POINT
1EF  2D502                      OUTPUT s5, endx                ; set desired endx
1F0  0163C                      LOAD s6, 3C                    ; load 60 into s6
1F1  2D603                      OUTPUT s6, endy                ; set desired endy
1F2  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1F3                             ;;============================================================================
1F3                             ;; Draws the letter O (Line 8)
1F3                             ;;============================================================================

1F3                             ;; STARTING POINT
1F3  015A0                      LOAD s5, A0                    ; load 160 into s5
1F4  2D500                      OUTPUT s5, stax                ; set desired stax
1F5  0161E                      LOAD s6, 1E                    ; load 30 into s6
1F6  2D601                      OUTPUT s6, stay                ; set desired stay

1F7                             ;; ENDING POINT
1F7  0159B                      LOAD s5, 9B                    ; load 155 into s5
1F8  2D502                      OUTPUT s5, endx                ; set desired endx
1F9  0161E                      LOAD s6, 1E                    ; load 30 into s6
1FA  2D603                      OUTPUT s6, endy                ; set desired endy
1FB  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1FC                             ;;============================================================================
1FC                             ;; Draws the letter P (Line 1)
1FC                             ;;============================================================================
1FC  010AA                      LOAD s0, AA                    ; load 170 into s0
1FD  0111E                      LOAD s1, 1E                    ; load 30 into s1
1FE  012BE                      LOAD s2, BE                    ; load 190 into s2
1FF  0131E                      LOAD s3, 1E                    ; keep s3 set at 30
200  2036F                      CALL draw_line                 ; call the draw_line subroutine

201                             ;;============================================================================
201                             ;; Draws the letter P (Line 2)
201                             ;;============================================================================
201  010AA                      LOAD s0, AA                    ; load 170 into s0
202  0111E                      LOAD s1, 1E                    ; load 30 into s1
203  012AA                      LOAD s2, AA                    ; load 170 into s2
204  0133C                      LOAD s3, 3C                    ; load 60 into s3
205  2036F                      CALL draw_line                 ; call the draw_line subroutine

206                             ;;============================================================================
206                             ;; Draws the letter P (Line 3)
206                             ;;============================================================================
206  010AA                      LOAD s0, AA                    ; load 170 into s0
207  0112D                      LOAD s1, 2D                    ; load 45 into s1
208  012BE                      LOAD s2, BE                    ; load 190 into s2
209  0132D                      LOAD s3, 2D                    ; keep s0 set at 45
20A  2036F                      CALL draw_line                 ; call the draw_line subroutine

20B                             ;;============================================================================
20B                             ;; Draws the letter P (Line 4)
20B                             ;;============================================================================
20B  010BE                      LOAD s0, BE                    ; load 190 into s0
20C  0111E                      LOAD s1, 1E                    ; load 30 into s1
20D  012BE                      LOAD s2, BE                    ; load 190 into s2
20E  0132D                      LOAD s3, 2D                    ; load 45 to s3
20F  2036F                      CALL draw_line                 ; call the draw_line subroutine

210                             ;;============================================================================
210                             ;; Draws the letter T (Line 1)
210                             ;;============================================================================
210  010C8                      LOAD s0, C8                    ; load 200 into s0
211  0111E                      LOAD s1, 1E                    ; load 30 into s1
212  012DC                      LOAD s2, DC                    ; load 220 into s2
213  0131E                      LOAD s3, 1E                    ; load 30 to s3
214  2036F                      CALL draw_line                 ; call the draw_line subroutine

215                             ;;============================================================================
215                             ;; Draws the letter T (Line 2)
215                             ;;============================================================================
215  010D2                      LOAD s0, D2                    ; load 200 into s0
216  0111E                      LOAD s1, 1E                    ; load 30 into s1
217  012D2                      LOAD s2, D2                    ; load 220 into s2
218  0133C                      LOAD s3, 3C                    ; load 60 to s3
219  2036F                      CALL draw_line                 ; call the draw_line subroutine

21A                             ;;============================================================================
21A                             ;; Draws the letter E (Line 1)
21A                             ;;============================================================================
21A  010E6                      LOAD s0, E6                    ; load 230 into s0
21B  0111E                      LOAD s1, 1E                    ; load 30 into s1
21C  012E6                      LOAD s2, E6                    ; load 230 into s2
21D  0133C                      LOAD s3, 3C                    ; load 30 to s3
21E  2036F                      CALL draw_line                 ; call the draw_line subroutine

21F                             ;;============================================================================
21F                             ;; Draws the letter E (Line 2)
21F                             ;;============================================================================
21F  010E6                      LOAD s0, E6                    ; load 230 into s0
220  0111E                      LOAD s1, 1E                    ; load 30 into s1
221  012FA                      LOAD s2, FA                    ; load 250 into s2
222  0131E                      LOAD s3, 1E                    ; load 30 to s3
223  2036F                      CALL draw_line                 ; call the draw_line subroutine

224                             ;;============================================================================
224                             ;; Draws the letter E (Line 3)
224                             ;;============================================================================
224  010E6                      LOAD s0, E6                    ; load 230 into s0
225  0112D                      LOAD s1, 2D                    ; load 30 into s1
226  012FA                      LOAD s2, FA                    ; load 250 into s2
227  0132D                      LOAD s3, 2D                    ; load 30 to s3
228  2036F                      CALL draw_line                 ; call the draw_line subroutine

229                             ;;============================================================================
229                             ;; Draws the letter E (Line 4)
229                             ;;============================================================================
229  010E6                      LOAD s0, E6                    ; load 230 into s0
22A  0113C                      LOAD s1, 3C                    ; load 30 into s1
22B  012FA                      LOAD s2, FA                    ; load 250 into s2
22C  0133C                      LOAD s3, 3C                    ; load 30 to s3
22D  2036F                      CALL draw_line                 ; call the draw_line subroutine

22E                             ;;============================================================================
22E                             ;; NEW LINE STARTS HERE (GAME)
22E                             ;;============================================================================

22E                             ;;============================================================================
22E                             ;; Draws the letter G (Line 1)
22E                             ;;============================================================================
22E  01046                      LOAD s0, 46                    ; load 70 into s0
22F  0115A                      LOAD s1, 5A                    ; load 90 into s1
230  0125A                      LOAD s2, 5A                    ; load 90 into s2
231  0135A                      LOAD s3, 5A                    ; load 90 to s3
232  2036F                      CALL draw_line                 ; call the draw_line subroutine

233                             ;;============================================================================
233                             ;; Draws the letter G (Line 2)
233                             ;;============================================================================
233  01046                      LOAD s0, 46                    ; load 70 into s0
234  0115A                      LOAD s1, 5A                    ; load 90 into s1
235  01246                      LOAD s2, 46                    ; load 90 into s2
236  01378                      LOAD s3, 78                    ; load 90 to s3
237  2036F                      CALL draw_line                 ; call the draw_line subroutine

238                             ;;============================================================================
238                             ;; Draws the letter G (Line 3)
238                             ;;============================================================================
238  01046                      LOAD s0, 46                    ; load 70 into s0
239  01178                      LOAD s1, 78                    ; load 90 into s1
23A  0125A                      LOAD s2, 5A                    ; load 90 into s2
23B  01378                      LOAD s3, 78                    ; load 90 to s3
23C  2036F                      CALL draw_line                 ; call the draw_line subroutine

23D                             ;;============================================================================
23D                             ;; Draws the letter G (Line 4)
23D                             ;;============================================================================
23D  0105A                      LOAD s0, 5A                    ; load 70 into s0
23E  01169                      LOAD s1, 69                    ; load 90 into s1
23F  0125A                      LOAD s2, 5A                    ; load 90 into s2
240  01378                      LOAD s3, 78                    ; load 90 to s3
241  2036F                      CALL draw_line                 ; call the draw_line subroutine

242                             ;;============================================================================
242                             ;; Draws the letter G (Line 5)
242                             ;;============================================================================
242  0105A                      LOAD s0, 5A                    ; load 70 into s0
243  01169                      LOAD s1, 69                    ; load 90 into s1
244  01250                      LOAD s2, 50                    ; load 90 into s2
245  01369                      LOAD s3, 69                    ; load 90 to s3
246  2036F                      CALL draw_line                 ; call the draw_line subroutine

247                             ;;============================================================================
247                             ;; Draws the letter A (Line 1)
247                             ;;============================================================================
247  01064                      LOAD s0, 64                    ; 100
248  0115A                      LOAD s1, 5A                    ; 90
249  01278                      LOAD s2, 78                    ; 120
24A  0135A                      LOAD s3, 5A                    ; 90
24B  2036F                      CALL draw_line                 ; call the draw_line subroutine

24C                             ;;============================================================================
24C                             ;; Draws the letter A (Line 2)
24C                             ;;============================================================================
24C  01064                      LOAD s0, 64                    ; 100
24D  01169                      LOAD s1, 69                    ; 105
24E  01278                      LOAD s2, 78                    ; 120
24F  01369                      LOAD s3, 69                    ; 105
250  2036F                      CALL draw_line                 ; call the draw_line subroutine

251                             ;;============================================================================
251                             ;; Draws the letter A (Line 3)
251                             ;;============================================================================
251  01064                      LOAD s0, 64                    ; 100
252  0115A                      LOAD s1, 5A                    ; 90
253  01264                      LOAD s2, 64                    ; 100
254  01378                      LOAD s3, 78                    ; 120
255  2036F                      CALL draw_line                 ; call the draw_line subroutine

256                             ;;============================================================================
256                             ;; Draws the letter A (Line 4)
256                             ;;============================================================================
256  01078                      LOAD s0, 78                    ; 120
257  0115A                      LOAD s1, 5A                    ; 90
258  01278                      LOAD s2, 78                    ; 120
259  01378                      LOAD s3, 78                    ; 120
25A  2036F                      CALL draw_line                 ; call the draw_line subroutine

25B                             ;;============================================================================
25B                             ;; Draws the letter M (Line 1)
25B                             ;;============================================================================
25B  01082                      LOAD s0, 82                    ; 130
25C  0115A                      LOAD s1, 5A                    ; 90
25D  01282                      LOAD s2, 82                    ; 130
25E  01378                      LOAD s3, 78                    ; 120
25F  2036F                      CALL draw_line                 ; call the draw_line subroutine

260                             ;;============================================================================
260                             ;; Draws the letter M (Line 2)
260                             ;;============================================================================
260  01096                      LOAD s0, 96                    ; 150
261  0115A                      LOAD s1, 5A                    ; 90
262  01296                      LOAD s2, 96                    ; 150
263  01378                      LOAD s3, 78                    ; 120
264  2036F                      CALL draw_line                 ; call the draw_line subroutine

265                             ;;============================================================================
265                             ;; Draws the letter M (Line 3)
265                             ;;============================================================================
265  01096                      LOAD s0, 96                    ; 150
266  0115A                      LOAD s1, 5A                    ; 90
267  0128C                      LOAD s2, 8C                    ; 140
268  01369                      LOAD s3, 69                    ; 105
269  2036F                      CALL draw_line                 ; call the draw_line subroutine

26A                             ;;============================================================================
26A                             ;; Draws the letter M (Line 4)
26A                             ;;============================================================================
26A  01082                      LOAD s0, 82                    ; 130
26B  0115A                      LOAD s1, 5A                    ; 90
26C  0128C                      LOAD s2, 8C                    ; 140
26D  01369                      LOAD s3, 69                    ; 105
26E  2036F                      CALL draw_line                 ; call the draw_line subroutine

26F                             ;;============================================================================
26F                             ;; Draws the letter E (Line 1)
26F                             ;;============================================================================
26F  010A0                      LOAD s0, A0                    ; 160
270  0115A                      LOAD s1, 5A                    ; 90
271  012A0                      LOAD s2, A0                    ; 160
272  01378                      LOAD s3, 78                    ; 120
273  2036F                      CALL draw_line                 ; call the draw_line subroutine

274                             ;;============================================================================
274                             ;; Draws the letter E (Line 2)
274                             ;;============================================================================
274  010A0                      LOAD s0, A0                    ; 160
275  0115A                      LOAD s1, 5A                    ; 90
276  012B4                      LOAD s2, B4                    ; 180
277  0135A                      LOAD s3, 5A                    ; 90
278  2036F                      CALL draw_line                 ; call the draw_line subroutine

279                             ;;============================================================================
279                             ;; Draws the letter E (Line 3)
279                             ;;============================================================================
279  010A0                      LOAD s0, A0                    ; 160
27A  01169                      LOAD s1, 69                    ; 105
27B  012B4                      LOAD s2, B4                    ; 180
27C  01369                      LOAD s3, 69                    ; 105
27D  2036F                      CALL draw_line                 ; call the draw_line subroutine

27E                             ;;============================================================================
27E                             ;; Draws the letter E (Line 4)
27E                             ;;============================================================================
27E  010A0                      LOAD s0, A0                    ; 160
27F  01178                      LOAD s1, 78                    ; 120
280  012B4                      LOAD s2, B4                    ; 180
281  01378                      LOAD s3, 78                    ; 120
282  2036F                      CALL draw_line                 ; call the draw_line subroutine

283  25000                      RETURN                         ; leave start_screen subroutine

284                             ;;============================================================================
284                             ;; Draw Helicopter - Draw Helicopter Subroutine
284                             ;;============================================================================

284            draw_helicopter:

284  202C9                      CALL draw_helicopter_cockpit   ; call the subroutine to draw the cockpit
285  2033D                      CALL draw_helicopter_blades    ; call the subroutine to draw the blades
286  20308                      CALL draw_helicopter_tail      ; call the subroutine to draw the tail
287                             ;CALL draw_helicopter_smoke         ; call the subroutine to draw the smoke

287  25000                      RETURN                         ; go back from drawing helicopter


288                             ;;============================================================================
288                             ;; Draw Block - Draw Block Subroutine
288                             ;;============================================================================

288                 draw_block:

288                             ;;============================================================================
288                             ;; Draws Top Line of Block
288                             ;;============================================================================

288  005E0                      LOAD s5, se                    ; load 255 into s5 (horizontal center of block)
289  016E1                      LOAD s6, E1                    ; load 245 into s6
28A  1C650                      COMPARE s6, s5                 ; checking if the block is done "peaking out" from the right (initial compare: 245 ? 255)
28B  3A291                      JUMP C, right_edge             ; jump to right_edge
28C  0160A                      LOAD s6, 0A                    ; load 10 into s6
28D  1C560                      COMPARE s5, s6                 ; comparing s5 and s6
28E  3A295                      JUMP C, left_edge              ; jump to left_edge
28F  32295                      JUMP Z, left_edge              ; jump to left_edge
290  22299                      JUMP in_middle                 ; jump to in_middle

291  2D500          right_edge: OUTPUT s5, stax                ; set desired stax
292  1950A                      SUB s5, 0A                     ;
293  2D502                      OUTPUT s5, endx                ; set desired stax
294  2229C                      JUMP finished1                 ; jump to draw_ys

295  2D500           left_edge: OUTPUT s5, stax                ; set desired stax
296  01600                      LOAD s6, 00                    ; put 255 into s5
297  2D602                      OUTPUT s6, endx                ; set desired stax
298  2229C                      JUMP finished1                 ; jump to draw_ys

299                  in_middle:
299  2D500                      OUTPUT s5, stax                ; set desired stax
29A  1950A                      SUB s5, 0A                     ; subtract the width of block to get the other x coordinate
29B  2D502                      OUTPUT s5, endx                ; set desired endx

29C  2DF01           finished1: OUTPUT sf, stay                ; set desired stay
29D  2DF03                      OUTPUT sf, endy                ; set desired endy
29E  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

29F                             ;;============================================================================
29F                             ;; Draws Bottom Line of Block
29F                             ;;============================================================================

29F  005F0                      LOAD s5, sf                    ; load sF into s5
2A0  1153C                      ADD s5, 3C                     ; add 40 to s5
2A1  2D501                      OUTPUT s5, stay                ; set desired stay
2A2  2D503                      OUTPUT s5, endy                ; set desired endy
2A3  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2A4                             ;;============================================================================
2A4                             ;; Draws Right Vertical Line of Block
2A4                             ;;============================================================================

2A4  2DE00                      OUTPUT se, stax                ; set desired stax
2A5  2DE02                      OUTPUT se, endx                ; set desired endx
2A6  2DF01                      OUTPUT sf, stay                ; set desired stay
2A7  005F0                      LOAD s5, sf                    ; load sF into s5
2A8  1153C                      ADD s5, 3C                     ; add 60 to y coordinate
2A9  2D503                      OUTPUT s5, endy                ; set desired endy
2AA  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2AB                             ;;============================================================================
2AB                             ;; Draws Left Vertical Line of Block
2AB                             ;;============================================================================

2AB  005E0                      LOAD s5, se                    ; load sE into s5
2AC  1950A                      SUB s5, 0A                     ; subtract 10 from s5
2AD  2D500                      OUTPUT s5, stax                ; set desired stax
2AE  2D502                      OUTPUT s5, endx                ; set desired endx
2AF  2DF01                      OUTPUT sf, stay                ; set desired stay
2B0  005F0                      LOAD s5, sf                    ; load sF into s5
2B1  1153C                      ADD s5, 3C                     ; add 60 to y coordinate
2B2  2D503                      OUTPUT s5, endy                ; set desired endy
2B3  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)
2B4  25000                      RETURN                         ; finished with draw_block subroutine



2B5                             ;;============================================================================
2B5                             ;; Random Block Location - Random Block Location Subroutine
2B5                             ;;============================================================================

2B5        random_block_location:
2B5  1DE00                      COMPARE se, 00                 ; is it time to create a new variable?
2B6  322BB                      JUMP Z, new_random             ; jump to new random creator
2B7  1DEFF                      COMPARE se, FF                 ; is it time to create a new variable?
2B8  322BB                      JUMP Z, new_random             ; jump to new random creator
2B9  362BA                      JUMP NZ, skip_everything       ; goes back

2BA  25000     skip_everything: RETURN                         ; returns back (no new rand. number)

2BB  09507          new_random: INPUT s5, prng                 ; create to new random number
2BC  1D50F                      COMPARE s5, 0F                 ; check if it's in range
2BD  3E2BF                      JUMP NC, check_other_bound_range ; check lower bound of map
2BE  3A2BB                      JUMP C, new_random             ; get new variable

2BF        check_other_bound_range:
2BF  1D5B4                      COMPARE s5, B4                 ; compare s5 to 180
2C0  3E2BB                      JUMP NC, new_random            ; get a new random number
2C1  00F50                      LOAD sf, s5                    ; a new y coordinate generated
2C2  25000                      RETURN                         ; get out of subroutine

2C3                             ;;============================================================================
2C3                             ;; Move Helicopter Up - Move Helicopter Up Subroutine
2C3                             ;;============================================================================

2C3               move_heli_up:
2C3  1DC15                      COMPARE sc, 15                 ; check if the helicopter is colliding with top wall
2C4  362C7                      JUMP NZ, decrement             ; if not colliding, then move helicopter appropriately
2C5  3E2C7                      JUMP NC, decrement             ; necessary as well
2C6  25000                      RETURN                         ; do not increment if colliding with top wall
2C7                  decrement:
2C7  19C04                      SUB sc, 04                     ; move the helicopter up
2C8  25000                      RETURN                         ; get out of subroutine

2C9                             ;;============================================================================
2C9                             ;; Draw Helicopter Cockpit - Draw Helicopter Cockpit Subroutine
2C9                             ;;============================================================================

2C9        draw_helicopter_cockpit:

2C9                             ;;============================================================================
2C9                             ;; Draws Cockpit of Helicopter (Line 1a)
2C9                             ;;============================================================================

2C9                             ;; STARTING POINT
2C9  01564                      LOAD s5, 64                    ; load 100 into s5
2CA  2D500                      OUTPUT s5, stax                ; set desired stax
2CB  006C0                      LOAD s6, sc                    ; load sC into s5
2CC  2D601                      OUTPUT s6, stay                ; set desired stay

2CD                             ;; ENDING POINT
2CD  19501                      SUB s5, 01                     ; subtract 7 from s5
2CE  2D502                      OUTPUT s5, endx                ; set desired endx
2CF  19603                      SUB s6, 03                     ; go up by 5
2D0  2D603                      OUTPUT s6, endy                ; set desired endy
2D1  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2D2                             ;;============================================================================
2D2                             ;; Draws Cockpit of Helicopter (Line 1b)
2D2                             ;;============================================================================

2D2                             ;; STARTING POINT
2D2  01564                      LOAD s5, 64                    ; load 100 into s5
2D3  19501                      SUB s5, 01                     ; subtract 7 from s5
2D4  2D500                      OUTPUT s5, stax                ; set desired stax
2D5  006C0                      LOAD s6, sc                    ; load sC into s5
2D6  19603                      SUB s6, 03                     ; go up by 5
2D7  2D601                      OUTPUT s6, stay                ; set desired stay

2D8                             ;; ENDING POINT
2D8  19504                      SUB s5, 04                     ; subtract 7 from s5
2D9  2D502                      OUTPUT s5, endx                ; set desired endx
2DA  19602                      SUB s6, 02                     ; go up by 5
2DB  2D603                      OUTPUT s6, endy                ; set desired endy
2DC  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)


2DD                             ;;============================================================================
2DD                             ;; Draws Cockpit of Helicopter (Line 2a)
2DD                             ;;============================================================================

2DD                             ;; STARTING POINT
2DD  01564                      LOAD s5, 64                    ; load 100 into s5
2DE  2D500                      OUTPUT s5, stax                ; set desired stax
2DF  006C0                      LOAD s6, sc                    ; load sC into s5
2E0  2D601                      OUTPUT s6, stay                ; set desired stay

2E1                             ;; ENDING POINT
2E1  19501                      SUB s5, 01                     ; subtract 1 from s5
2E2  2D502                      OUTPUT s5, endx                ; set desired endx
2E3  11603                      ADD s6, 03                     ; go down by 3
2E4  2D603                      OUTPUT s6, endy                ; set desired endy
2E5  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2E6                             ;;============================================================================
2E6                             ;; Draws Cockpit of Helicopter (Line 2b)
2E6                             ;;============================================================================

2E6                             ;; STARTING POINT
2E6  01564                      LOAD s5, 64                    ; load 100 into s5
2E7  19501                      SUB s5, 01                     ; subtract 1 from s5
2E8  2D500                      OUTPUT s5, stax                ; set desired stax
2E9  006C0                      LOAD s6, sc                    ; load sC into s5
2EA  11603                      ADD s6, 03                     ; go down by 3
2EB  2D601                      OUTPUT s6, stay                ; set desired stay

2EC                             ;; ENDING POINT
2EC  19504                      SUB s5, 04                     ; subtract 7 from s5
2ED  2D502                      OUTPUT s5, endx                ; set desired endx
2EE  11602                      ADD s6, 02                     ; go down by 5
2EF  2D603                      OUTPUT s6, endy                ; set desired endy
2F0  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2F1                             ;;============================================================================
2F1                             ;; Draws Cockpit of Helicopter (Line 3)
2F1                             ;;============================================================================

2F1                             ;; STARTING POINT
2F1  01564                      LOAD s5, 64                    ; load 100 into s5
2F2  19505                      SUB s5, 05                     ; load 7 into s5
2F3  2D500                      OUTPUT s5, stax                ; set desired stax
2F4  006C0                      LOAD s6, sc                    ; load sC into s5
2F5  19605                      SUB s6, 05                     ; go up by 5 using subtraction
2F6  2D601                      OUTPUT s6, stay                ; set desired stay

2F7                             ;; ENDING POINT
2F7  19507                      SUB s5, 07                     ; subtract 5 from s5
2F8  2D502                      OUTPUT s5, endx                ; set desired endx
2F9  11605                      ADD s6, 05                     ; go down by 5
2FA  2D603                      OUTPUT s6, endy                ; set desired endy
2FB  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2FC                             ;;============================================================================
2FC                             ;; Draws Cockpit of Helicopter (Line 4)
2FC                             ;;============================================================================

2FC                             ;; STARTING POINT
2FC  01564                      LOAD s5, 64                    ; load 100 into s5
2FD  19505                      SUB s5, 05                     ; load 7 into s5
2FE  2D500                      OUTPUT s5, stax                ; set desired stax
2FF  006C0                      LOAD s6, sc                    ; load sC into s5
300  11605                      ADD s6, 05                     ; go down by 5 using addition
301  2D601                      OUTPUT s6, stay                ; set desired stay

302                             ;; ENDING POINT
302  19507                      SUB s5, 07                     ; subtract 5 from s5
303  2D502                      OUTPUT s5, endx                ; set desired endx
304  19605                      SUB s6, 05                     ; go back up by 5
305  2D603                      OUTPUT s6, endy                ; set desired endy
306  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

307  25000                      RETURN                         ; go back from subroutine

308                             ;;============================================================================
308                             ;; Draw Helicopter Tail - Draw Helicopter Tail Subroutine
308                             ;;============================================================================

308        draw_helicopter_tail:

308                             ;;============================================================================
308                             ;; Draws Tail of Helicopter (Line 1)
308                             ;;============================================================================

308                             ;; STARTING POINT
308  01564                      LOAD s5, 64                    ; load 100 into s5
309  1950A                      SUB s5, 0A                     ; subtract 0xA from s5
30A  2D500                      OUTPUT s5, stax                ; set desired stax
30B  006C0                      LOAD s6, sc                    ; load sC into s5
30C  19602                      SUB s6, 02                     ; subtract 2 from s6
30D  2D601                      OUTPUT s6, stay                ; set desired stay

30E                             ;; ENDING POINT
30E  19507                      SUB s5, 07                     ; subtract 7 from s5
30F  2D502                      OUTPUT s5, endx                ; set desired endx
310  2D603                      OUTPUT s6, endy                ; set desired endy
311  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

312                             ;;============================================================================
312                             ;; Draws Tail of Helicopter (Line 2)
312                             ;;============================================================================

312                             ;; STARTING POINT
312  01564                      LOAD s5, 64                    ; load 100 into s5
313  1950C                      SUB s5, 0C                     ; subtract 0xC from s5
314  2D500                      OUTPUT s5, stax                ; set desired stax
315  006C0                      LOAD s6, sc                    ; load sC into s5
316  2D601                      OUTPUT s6, stay                ; set desired stay

317                             ;; ENDING POINT
317  19508                      SUB s5, 08                     ; subtract 7 from s5
318  2D502                      OUTPUT s5, endx                ; set desired endx
319  2D603                      OUTPUT s6, endy                ; set desired endy
31A  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

31B                             ;;============================================================================
31B                             ;; Draws Tail of Helicopter (Line 3)
31B                             ;;============================================================================

31B                             ;; STARTING POINT
31B  01564                      LOAD s5, 64                    ; load 100 into s5
31C  1950A                      SUB s5, 0A                     ; subtract 0x0A from s5
31D  19508                      SUB s5, 08                     ; subtract 0x10 from s5
31E  2D500                      OUTPUT s5, stax                ; set desired stax
31F  006C0                      LOAD s6, sc                    ; load sC into s5
320  19602                      SUB s6, 02                     ; subtract 2 from s6
321  2D601                      OUTPUT s6, stay                ; set desired stay

322                             ;; ENDING POINT
322  19502                      SUB s5, 02                     ; subtract 2 from s5
323  2D502                      OUTPUT s5, endx                ; set desired endx
324  19602                      SUB s6, 02                     ; subtract 2 from s6
325  2D603                      OUTPUT s6, endy                ; set desired endy
326  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

327                             ;;============================================================================
327                             ;; Draws Tail of Helicopter (Line 4)
327                             ;;============================================================================

327                             ;; STARTING POINT
327  01564                      LOAD s5, 64                    ; load 100 into s5
328  1950C                      SUB s5, 0C                     ; subtract 0x0C from s5
329  19509                      SUB s5, 09                     ; subtract 0x09 from s5
32A  2D500                      OUTPUT s5, stax                ; set desired stax
32B  006C0                      LOAD s6, sc                    ; load sC into s5
32C  2D601                      OUTPUT s6, stay                ; set desired stay

32D                             ;; ENDING POINT
32D                             ;SUB s5, 01                          ; subtract 2 from s5
32D  2D502                      OUTPUT s5, endx                ; set desired endx
32E  11601                      ADD s6, 01                     ; add 1 to s6
32F  2D603                      OUTPUT s6, endy                ; set desired endy
330  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

331                             ;;============================================================================
331                             ;; Draws Tail of Helicopter (Line 5)
331                             ;;============================================================================

331                             ;; STARTING POINT
331  01564                      LOAD s5, 64                    ; load 100 into s5
332  1950A                      SUB s5, 0A                     ; subtract 0x0A from s5
333  1950A                      SUB s5, 0A                     ; subtract 0x0A from s5
334  2D500                      OUTPUT s5, stax                ; set desired stax
335  006C0                      LOAD s6, sc                    ; load sC into s5
336  19604                      SUB s6, 04                     ; subtract 4 from s6
337  2D601                      OUTPUT s6, stay                ; set desired stay

338                             ;; ENDING POINT
338  2D502                      OUTPUT s5, endx                ; set desired endx
339  11605                      ADD s6, 05                     ; add 1 to s6
33A  2D603                      OUTPUT s6, endy                ; set desired endy
33B  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

33C  25000                      RETURN                         ; go back from subroutine

33D                             ;;============================================================================
33D                             ;; Draw Helicopter Blades - Draw Helicopter Blades Subroutine
33D                             ;;============================================================================

33D        draw_helicopter_blades:

33D                             ;;============================================================================
33D                             ;; Draws Blades of Helicopter (Line 1)
33D                             ;;============================================================================

33D                             ;; STARTING POINT
33D  01564                      LOAD s5, 64                    ; load 100 into s5
33E  19505                      SUB s5, 05                     ; subtract 0xA from s5
33F  2D500                      OUTPUT s5, stax                ; set desired stax
340  006C0                      LOAD s6, sc                    ; load sC into s5
341  19605                      SUB s6, 05                     ; subtract 2 from s6
342  2D601                      OUTPUT s6, stay                ; set desired stay

343                             ;; ENDING POINT
343  2D502                      OUTPUT s5, endx                ; set desired endx
344  19602                      SUB s6, 02                     ; subtract 2 from s6
345  2D603                      OUTPUT s6, endy                ; set desired endy
346  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

347                             ;;============================================================================
347                             ;; Draws Blades of Helicopter (Line 2)
347                             ;;============================================================================

347                             ;; STARTING POINT
347  01564                      LOAD s5, 64                    ; load 100 into s5
348  2D500                      OUTPUT s5, stax                ; set desired stax
349  006C0                      LOAD s6, sc                    ; load sC into s5
34A  19607                      SUB s6, 07                     ; subtract 2 from s6
34B  2D601                      OUTPUT s6, stay                ; set desired stay

34C                             ;; ENDING POINT
34C  1950A                      SUB s5, 0A                     ; subtract 10 from s5
34D  2D502                      OUTPUT s5, endx                ; set desired endx
34E  2D603                      OUTPUT s6, endy                ; set desired endy
34F  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

350  25000                      RETURN                         ; go back from subroutine

351                             ;;============================================================================
351                             ;; Draw Helicopter Smoke - Draw Helicopter Smoke Subroutine
351                             ;;============================================================================

351        draw_helicopter_smoke:

351                             ;;============================================================================
351                             ;; Draws Smoke of Helicopter (Line 1)
351                             ;;============================================================================

351                             ;; Start Point
351  01564                      LOAD s5, 64                    ; load 100 into s5
352  19528                      SUB s5, 28                     ; position starting smoke right point of line 1
353  2D500                      OUTPUT s5, stax                ; output to starting x position of line 1

354  006C0                      LOAD s6, sc                    ; load helicopter smoke vertical position for line 1
355  2D601                      OUTPUT s6, stay                ; output to starting y position of line 1
356                             ;;

356                             ;; End Point
356  19504                      SUB s5, 04                     ; position starting smoke left point of line 1
357  2D502                      OUTPUT s5, endx                ; output to starting y position of line 1

358  2D603                      OUTPUT s6, endy                ; output to ending y position of line 1, matching helicopter
359  20379                      CALL old_draw_line             ;draws a line (careful: this subroutine overwrites s5)
35A                             ;;

35A                             ;;============================================================================
35A                             ;; Draws Smoke of Helicopter (Line 2)
35A                             ;;============================================================================

35A                             ;; Start Point
35A  01564                      LOAD s5, 64                    ; load 100 into s5
35B  19534                      SUB s5, 34                     ; position starting smoke right point of line 2
35C  2D500                      OUTPUT s5, stax                ; output to starting x position of line 2

35D  006C0                      LOAD s6, sc                    ; load starting smoke vertical position for line 2
35E  11604                      ADD s6, 04                     ; add 4 to s6 (shift down by 4)
35F  2D601                      OUTPUT s6, stay                ; output to starting y position of line 2
360                             ;;

360                             ;; End Point
360  19504                      SUB s5, 04                     ; subtract s5 by 4 for length of line
361  2D502                      OUTPUT s5, endx                ; output to endx

362  2D603                      OUTPUT s6, endy                ; outputs vertical locaton of smoke line 2
363  20379                      CALL old_draw_line             ;draws a line (careful: this subroutine overwrites s5)
364                             ;;

364                             ;;============================================================================
364                             ;; Draws Smoke of Helicopter (Line 3)
364                             ;;============================================================================

364                             ;; Start Point
364  01564                      LOAD s5, 64                    ; load 100 into s5
365  19540                      SUB s5, 40                     ; position starting smoke right point of line 3
366  2D500                      OUTPUT s5, stax                ; output to starting x position of line 3

367  006C0                      LOAD s6, sc                    ; load starting smoke vertical position for line 3
368  19604                      SUB s6, 04                     ; add 4 to s6 (shift down by 4)
369  2D601                      OUTPUT s6, stay                ; output to starting y position of line 3
36A                             ;;

36A                             ;; End Point
36A  19504                      SUB s5, 04                     ; subtract s5 by 4 for length of line
36B  2D502                      OUTPUT s5, endx                ; output to endx

36C  2D603                      OUTPUT s6, endy                ; output same y position of line 3
36D  20379                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)
36E                             ;;

36E  25000                      RETURN                         ; go back to subroutine



36F                             ;;============================================================================
36F                             ;; Draw Line - Draw Line Subroutine
36F                             ;;============================================================================

36F  2D000           draw_line: OUTPUT s0, stax                ; write stax
370  2D101                      OUTPUT s1, stay                ; write stay
371  2D202                      OUTPUT s2, endx                ; write endx
372  2D303                      OUTPUT s3, endy                ; write endy
373  01501                      LOAD s5, busy_go               ; load go command
374  2D504                      OUTPUT s5, busy                ; send go command
375  09504                wait: INPUT s5, busy                 ; read busy status
376  1D501                      COMPARE s5, busy_go            ; check busy status
377  32375                      JUMP Z, wait                   ; if busy, wait more
378  25000                      RETURN                         ; leave line drawing subroutine

379                             ;;============================================================================
379                             ;; Old Draw Line - Old Draw Line Subroutine (WILL DELETE LATER)
379                             ;;============================================================================

379              old_draw_line:
379  01501                      LOAD s5, busy_go               ; load go command
37A  2D504                      OUTPUT s5, busy                ; send go command
37B  09504               wait0: INPUT s5, busy                 ; read busy status
37C  1D501                      COMPARE s5, busy_go            ; check busy status
37D  3237B                      JUMP Z, wait0                  ; if busy, wait more
37E  25000                      RETURN                         ; leave line drawing subroutine

37F                             ;;============================================================================
37F                             ;; Check Collisions - Check Collisions Subroutine
37F                             ;;============================================================================

37F            check_collision:
37F                             ;;============================================================================
37F                             ;; Check Collisions with Map (top wall)
37F                             ;;============================================================================
37F  01560                      LOAD s5, 60                    ; position of heli/wall collision
380  0180F                      LOAD s8, 0F                    ; top wall vertical coordinate (15)
381  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
382  1960A                      SUB s6, 0A                     ; the helicopter's blades 10 pixels higher
383  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
384  1C860                      COMPARE s8, s6                 ; check if the two intersect
385  323E9                      JUMP Z, collision_occurred     ; jump to collision occurred
386  3E3E9                      JUMP NC, collision_occurred    ; jump to collision occurred (necessary)

387                             ;;============================================================================
387                             ;; Check Collisions with Map (bottom wall)
387                             ;;============================================================================
387  018F0                      LOAD s8, F0                    ; bottom wall vertical coordinate (240)
388  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
389  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
38A  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
38B  1C860                      COMPARE s8, s6                 ; check if the two intersect
38C  323E9                      JUMP Z, collision_occurred     ; jump to collision occurred

38D  018F1                      LOAD s8, F1                    ; bottom wall vertical coordinate (241)
38E  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
38F  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
390  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
391  1C860                      COMPARE s8, s6                 ; check if the two intersect
392  323E9                      JUMP Z, collision_occurred     ; jump to collision occurred

393  018F2                      LOAD s8, F2                    ; bottom wall vertical coordinate (242)
394  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
395  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
396  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
397  1C860                      COMPARE s8, s6                 ; check if the two intersect
398  323E9                      JUMP Z, collision_occurred     ; jump to collision occurred

399  018F3                      LOAD s8, F3                    ; bottom wall vertical coordinate (243)
39A  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
39B  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
39C  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
39D  1C860                      COMPARE s8, s6                 ; check if the two intersect
39E  323E9                      JUMP Z, collision_occurred     ; jump to collision occurred

39F  018F4                      LOAD s8, F4                    ; bottom wall vertical coordinate (244)
3A0  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
3A1  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
3A2  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
3A3  1C860                      COMPARE s8, s6                 ; check if the two intersect
3A4  323E9                      JUMP Z, collision_occurred     ; jump to collision occurred

3A5  018F5                      LOAD s8, F5                    ; bottom wall vertical coordinate (245)
3A6  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
3A7  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
3A8  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
3A9  1C860                      COMPARE s8, s6                 ; check if the two intersect
3AA  323E9                      JUMP Z, collision_occurred     ; jump to collision occurred

3AB  018F6                      LOAD s8, F6                    ; bottom wall vertical coordinate (246)
3AC  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
3AD  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
3AE  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
3AF  1C860                      COMPARE s8, s6                 ; check if the two intersect
3B0  323E9                      JUMP Z, collision_occurred     ; jump to collision occurred

3B1                             ;;============================================================================
3B1                             ;; Check Collisions with Block
3B1                             ;;============================================================================

3B1  005E0                      LOAD s5, se                    ; get current horizontal position of block
3B2  1950A                      SUB s5, 0A                     ; actual block is 10 pixels back
3B3  1D564                      COMPARE s5, 64                 ; check if s5 coincides with heli (horizontal check)
3B4  323CA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3B5  1D563                      COMPARE s5, 63                 ; check if s5 coincides with heli (horizontal check)
3B6  323CA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3B7  1D562                      COMPARE s5, 62                 ; check if s5 coincides with heli (horizontal check)
3B8  323CA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3B9  1D561                      COMPARE s5, 61                 ; check if s5 coincides with heli (horizontal check)
3BA  323CA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3BB  1D560                      COMPARE s5, 60                 ; check if s5 coincides with heli (horizontal check)
3BC  323CA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3BD  1D559                      COMPARE s5, 59                 ; check if s5 coincides with heli (horizontal check)
3BE  323CA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3BF  1D558                      COMPARE s5, 58                 ; check if s5 coincides with heli (horizontal check)
3C0  323CA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3C1  1D557                      COMPARE s5, 57                 ; check if s5 coincides with heli (horizontal check)
3C2  323CA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3C3  1D556                      COMPARE s5, 56                 ; check if s5 coincides with heli (horizontal check)
3C4  323CA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3C5  1D555                      COMPARE s5, 55                 ; check if s5 coincides with heli (horizontal check)
3C6  323CA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3C7  1D554                      COMPARE s5, 54                 ; check if s5 coincides with heli (horizontal check)
3C8  323CA                      JUMP Z, check_vertical         ; jump to check vertical positioning
3C9  363D4                      JUMP NZ, no_collision          ; jump to no_collision routine

3CA             check_vertical:
3CA  006F0                      LOAD s6, sf                    ; get current vertical position of block
3CB  007C0                      LOAD s7, sc                    ; load helicopter front position
3CC  1C760                loop: COMPARE s7, s6                 ; compare s7 and s6
3CD  323E9                      JUMP Z, collision_occurred     ; jump to collision_occured
3CE  11601                      ADD s6, 01                     ; add one to s6
3CF  008F0                      LOAD s8, sf                    ; load original value for reference only
3D0  1183C                      ADD s8, 3c                     ; add 60 to s8
3D1  1C680                      COMPARE s6, s8                 ; compare s6 to bottom of block (s8)
3D2  323D4                      JUMP Z, no_collision           ; jump to no_collision routine
3D3  363CC                      JUMP NZ, loop                  ; keep looping

3D4  19E01        no_collision: SUB se, 01                     ; move block forwards
3D5  1DA01                      COMPARE sa, 01                 ; check if score is above 500
3D6  3C3DA                      CALL NC, stage2_check          ; call second stage check

3D7  11C02                      ADD sc, 02                     ; increment sC
3D8  203F2                      CALL distance                  ; used for keeping the score (increments distance)
3D9  25000                      RETURN                         ; leave, since no collisions occurred

3DA               stage2_check:
3DA  19E01                      SUB se, 01                     ; subtract 1 from sE
3DB  1DA05                      COMPARE sa, 05                 ; check if score is above 1000
3DC  3C3DF                      CALL NC, stage3_check          ; call speed2
3DD  25000                      RETURN                         ; leave routine

3DE                     speed2:
3DE                             ;SUB sE, 01                          ; decrement by 2
3DE  25000                      RETURN                         ; go back

3DF               stage3_check:
3DF  19E01                      SUB se, 01                     ; decrement by 3
3E0  1DA08                      COMPARE sa, 08                 ; check if score is above 1000
3E1  3C3E3                      CALL NC, stage4_check          ; call speed2
3E2  25000                      RETURN                         ; go back

3E3               stage4_check:
3E3  19E01                      SUB se, 01                     ; decrement by 3
3E4  1DA10                      COMPARE sa, 10                 ; check if score is above 1000
3E5  3C3E7                      CALL NC, stage5_check          ; call speed2
3E6  25000                      RETURN

3E7               stage5_check:
3E7  19E01                      SUB se, 01                     ; decrement by 3
3E8  25000                      RETURN

3E9         collision_occurred:
3E9  2D500                      OUTPUT s5, stax                ; set desired stax
3EA  2D701                      OUTPUT s7, stay                ; set desired stay
3EB  09807                      INPUT s8, prng                 ; load random endx
3EC  2D802                      OUTPUT s8, endx                ; set random endx
3ED  09807                      INPUT s8, prng                 ; load random endy
3EE  2D803                      OUTPUT s8, endy                ; set random endy
3EF  2036F                      CALL draw_line                 ; draw random line

3F0  01902                      LOAD s9, GAMEOVER_STATE        ; should go to gameover state instead
3F1  25000                      RETURN                         ; return from routine without any increments

3F2                             ;;============================================================================
3F2                             ;; Distance - Distance Subroutine
3F2                             ;;============================================================================

3F2  2DB0A            distance: OUTPUT sb, qssd_lo             ; put distance value to qssd
3F3  1DBFF                      COMPARE sb, FF                 ; check if max (FF) was reached
3F4  323F7                      JUMP Z, distance2              ; jump to distance2
3F5  11B01                      ADD sb, one                    ; increment distance value
3F6  25000                      RETURN                         ; finished with distance subroutine

3F7  11A01           distance2: ADD sa, one                    ; add one to the next degree
3F8  01B00                      LOAD sb, zero                  ; reset sB
3F9  2DB0A                      OUTPUT sb, qssd_lo             ; put distance value to qssd
3FA  2DA0B                      OUTPUT sa, qssd_hi             ; put distance value to qssd
3FB  25000                      RETURN                         ; finished with distance subroutine

7FF                             ;;============================================================================
7FF                             ;; Interrupt - Vector.
7FF                             ;;============================================================================

7FF                             ADDRESS 7FF                    ; must be located here
7FF  22012          isr_vector: JUMP isr                       ; always jump to isr

800                             ;;============================================================================
800                             ;;
800                             ;;============================================================================


PSM files that have been assembled
----------------------------------
    /home/adnan/Documents/School/EE178/fpga_video_game/latest_fpga_video_game/software/software.psm


List of defined constants
-------------------------
   CONSTANT name      Value  Source PSM file
   -------------      -----  ---------------
   BEL                07
   BS                 08
   CR                 0D
   CREDITS_STATE      03     software.psm
   DCS                90
   DEL                7F
   ESC                1B
   GAMEOVER_STATE     02     software.psm
   HT                 09
   LF                 0A
   NUL                00
   PLAY_STATE         01     software.psm
   ST                 9C
   START_STATE        00     software.psm
   VT                 0B
   beam               05     software.psm
   beam_hi            0f     software.psm
   beam_lo            03     software.psm
   beam_md            07     software.psm
   busy               04     software.psm
   busy_go            01     software.psm
   buttons            0f     software.psm
   buttons_ct         10     software.psm
   buttons_dn         04     software.psm
   buttons_lf         02     software.psm
   buttons_rt         01     software.psm
   buttons_up         08     software.psm
   datestamp_day      01
   datestamp_month    0C
   datestamp_year     0F
   endx               02     software.psm
   endy               03     software.psm
   leds_hi            09     software.psm
   leds_lo            08     software.psm
   mode               06     software.psm
   mode_clr           01     software.psm
   mode_exp           03     software.psm
   mode_hld           00     software.psm
   mode_lin           02     software.psm
   one                01     software.psm
   prng               07     software.psm
   qssd_dp            0c     software.psm
   qssd_hi            0b     software.psm
   qssd_lo            0a     software.psm
   stax               00     software.psm
   stay               01     software.psm
   switches_hi        0e     software.psm
   switches_lo        0d     software.psm
   timestamp_hours    11
   timestamp_minutes  10
   timestamp_seconds  25
   zero               00     software.psm


  No tables defined


List of text strings
--------------------
   STRING name  Value          Source PSM file
   -----------  -----          ---------------
   datestamp$   "01 Dec 2015"
   timestamp$   "17:16:37"


List of line labels
-------------------
    Label                    Addr  Source PSM file
 --------                    ----  ---------------
 *  boot                     000   software.psm
    check_collision          37F   software.psm
    check_other_bound_range  2BF   software.psm
    check_vertical           3CA   software.psm
    collision_occurred       3E9   software.psm
    decrement                2C7   software.psm
    distance                 3F2   software.psm
    distance2                3F7   software.psm
    draw_block               288   software.psm
    draw_helicopter          284   software.psm
    draw_helicopter_blades   33D   software.psm
    draw_helicopter_cockpit  2C9   software.psm
 *  draw_helicopter_smoke    351   software.psm
    draw_helicopter_tail     308   software.psm
    draw_line                36F   software.psm
    enter_play_state         01F   software.psm
    enter_play_state2        029   software.psm
    finished1                29C   software.psm
    gameover                 022   software.psm
    in_middle                299   software.psm
    isr                      012   software.psm
 *  isr_vector               7FF   software.psm
    left_edge                295   software.psm
    loop                     3CC   software.psm
    main                     011   software.psm
    map                      03E   software.psm
    move_heli_up             2C3   software.psm
    new_random               2BB   software.psm
    no_collision             3D4   software.psm
    old_draw_line            379   software.psm
    play                     034   software.psm
    random_block_location    2B5   software.psm
    right_edge               291   software.psm
    skip_everything          2BA   software.psm
 *  speed2                   3DE   software.psm
    stage2_check             3DA   software.psm
    stage3_check             3DF   software.psm
    stage4_check             3E3   software.psm
    stage5_check             3E7   software.psm
    start                    019   software.psm
    start_screen             049   software.psm
    stay_in_gameover_state   033   software.psm
    stay_in_start_state      021   software.psm
    wait                     375   software.psm
    wait0                    37B   software.psm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          23
   ADDCY        -
   AND          -
   CALL         142
   CALL@        -
   COMPARE      41
   COMPARECY    -
   DISABLE      -
   ENABLE       1
   FETCH        -
   HWBUILD      -
   INPUT        11
   JUMP         47
   JUMP@        -
   LOAD         483
   LOAD&RETURN  -
   OR           -
   OUTPUT       191
   OUTPUTK      -
   REGBANK      -
   RETURN       28
   RETURNI      1
   RL           -
   RR           -
   SL0          -
   SL1          -
   SLA          -
   SLX          -
   SR0          -
   SR1          -
   SRA          -
   SRX          -
   STAR         -
   STORE        -
   SUB          53
   SUBCY        -
   TEST         -
   TESTCY       -
   XOR          -
