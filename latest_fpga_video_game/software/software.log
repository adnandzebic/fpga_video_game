Open Picoblaze Assembler log for program "software.psm"
Generated by opbasm v 1.2
  Assembled on 2015-11-30T22:33:53
  Picoblaze-6 mode

  Last occupied address: 7FF hex
  Nominal program memory size: 2K (2048)  address(10:0)
  Actual memory size: 4096
  Occupied memory locations: 885
  Memory locations available: 3211
  Scratchpad size: 256


Assembly listing
----------------
000                             ;;============================================================================
000                             ;; File: software.psm
000                             ;; This is the PicoBlaze program for EE178 Lab #8.
000                             ;;============================================================================

000                             ;;============================================================================
000                             ;; Port address declarations.
000                             ;;============================================================================

000                             CONSTANT stax, 00              ; port for 8-bit start-x
000                             CONSTANT stay, 01              ; port for 8-bit start-y
000                             CONSTANT endx, 02              ; port for 8-bit end-x
000                             CONSTANT endy, 03              ; port for 8-bit end-y
000                             CONSTANT busy, 04              ; port for 8-bit busy
000                             CONSTANT beam, 05              ; port for 8-bit beam
000                             CONSTANT mode, 06              ; port for 8-bit mode
000                             CONSTANT prng, 07              ; port for 8-bit prng
000                             CONSTANT leds_lo, 08           ; port for 8-bit led data out
000                             CONSTANT leds_hi, 09           ; port for 8-bit led data out
000                             CONSTANT qssd_lo, 0a           ; port for 8-bit qssd data out
000                             CONSTANT qssd_hi, 0b           ; port for 8-bit qssd data out
000                             CONSTANT qssd_dp, 0c           ; port for 8-bit qssd data out
000                             CONSTANT switches_lo, 0d       ; port for 8-bit switch input
000                             CONSTANT switches_hi, 0e       ; port for 8-bit switch input
000                             CONSTANT buttons, 0f           ; port for 8-bit button input

000                             CONSTANT zero, 00              ; zero
000                             CONSTANT one, 01               ; one

000                             CONSTANT busy_go, 01           ; go command and busy status

000                             CONSTANT beam_hi, 0f           ; beam high intensity
000                             CONSTANT beam_md, 07           ; beam med intensity
000                             CONSTANT beam_lo, 03           ; beam low intensity

000                             CONSTANT mode_hld, 00          ; mode hold framebuffer
000                             CONSTANT mode_clr, 01          ; mode clear framebuffer
000                             CONSTANT mode_lin, 02          ; mode linear decay
000                             CONSTANT mode_exp, 03          ; mode exponential decay

000                             CONSTANT buttons_ct, 10        ; center
000                             CONSTANT buttons_up, 08        ; up
000                             CONSTANT buttons_dn, 04        ; down
000                             CONSTANT buttons_lf, 02        ; left
000                             CONSTANT buttons_rt, 01        ; right

000                             ;;============================================================================
000                             ;; Macro State declarations
000                             ;;============================================================================

000                             CONSTANT START_STATE, 00       ; start screen state
000                             CONSTANT PLAY_STATE, 01        ; play state
000                             CONSTANT GAMEOVER_STATE, 02    ; game over screen state
000                             CONSTANT CREDITS_STATE, 03     ; credits screen state (not used for now)

000                             ;;============================================================================
000                             ;; Boot.
000                             ;;============================================================================

000  01000                boot: LOAD s0, zero                  ; initialize
001  01100                      LOAD s1, zero                  ; initialize
002  01200                      LOAD s2, zero                  ; initialize
003  01300                      LOAD s3, zero                  ; initialize
004  01400                      LOAD s4, zero                  ; initialize
005  01900                      LOAD s9, START_STATE           ; initial state is to enter start screen
006  01A00                      LOAD sa, 00                    ; initial distance (score)
007  01B00                      LOAD sb, 00                    ; initial distance (score)
008  01C80                      LOAD sc, 80                    ; starting helicopter position
009  01D05                      LOAD sd, 05                    ; initialize (needed later)
00A  01EFF                      LOAD se, FF                    ; load 255 into sE (horizontal coordinate of block)
00B  01F62                      LOAD sf, 62                    ; load 108 into sF (vertical coordinate of block)
00C  01503                      LOAD s5, mode_exp              ; load desired mode
00D  2D506                      OUTPUT s5, mode                ; set desired mode
00E  0150F                      LOAD s5, beam_hi               ; load desired beam
00F  2D505                      OUTPUT s5, beam                ; set desired beam
010  28001                      ENABLE INTERRUPT               ; enable interrupts

011                             ;;============================================================================
011                             ;; Main.
011                             ;;============================================================================

011                       main:
011  22011                      JUMP main                      ; go back and repeat

012                             ;;============================================================================
012                             ;; Interrupt - Service Routine.
012                             ;;============================================================================

012  1D900                 isr: COMPARE s9, START_STATE        ; check if in the start state
013  30019                      CALL Z, start                  ; call the start screen state
014  1D901                      COMPARE s9, PLAY_STATE         ; check if in the play state
015  30032                      CALL Z, play                   ; call play subroutine
016  1D902                      COMPARE s9, GAMEOVER_STATE     ; check if in the gameover state
017  30022                      CALL Z, gameover               ; call the gameover subroutine

018  29001                      RETURNI ENABLE                 ; done with isr

019                             ;;============================================================================
019                             ;; Start - Start Subroutine
019                             ;;============================================================================

019  0950F               start: INPUT s5, buttons              ; get center button values
01A  20047                      CALL start_screen              ; draw the map using map subroutine

01B  0950F                      INPUT s5, buttons              ; get button values
01C  1D510                      COMPARE s5, buttons_ct         ; check if center button is pressed
01D  3201F                      JUMP Z, enter_play_state       ; jump to enter_play_state
01E  36021                      JUMP NZ, stay_in_start_state   ; remain in current state with a jump to stay_in_start_state

01F           enter_play_state:
01F  01901                      LOAD s9, PLAY_STATE            ; load play_state and enter play mode
020  25000                      RETURN                         ; return from start subroutine

021        stay_in_start_state:
021  25000                      RETURN                         ; return from start subroutine

022                             ;;============================================================================
022                             ;; Game Over - Game Over Subroutine
022                             ;;============================================================================

022  0950F            gameover: INPUT s5, buttons              ; get center button values
023                             ;CALL map                            ; draw the map using map subroutine

023  0950F                      INPUT s5, buttons              ; get button values
024  1D510                      COMPARE s5, buttons_ct         ; check if center button is pressed
025  32027                      JUMP Z, enter_play_state2      ; jump to enter_play_state2
026  36031                      JUMP NZ, stay_in_gameover_state ; remain in current state with a jump to stay_in_gameover_state

027          enter_play_state2:
027  01901                      LOAD s9, PLAY_STATE            ; load play_state and enter play mode

028                             ;; RESET EVERYTHING BEFORE RETURNING
028  01A00                      LOAD sa, 00                    ; initial distance (score)
029  01B00                      LOAD sb, 00                    ; initial distance (score)
02A  2DB0A                      OUTPUT sb, qssd_lo             ; reset qssd_lo
02B  2DA0B                      OUTPUT sa, qssd_hi             ; reset qssd_hi
02C  01C80                      LOAD sc, 80                    ; starting helicopter position
02D  01D05                      LOAD sd, 05                    ; initialize (needed later)
02E  01EFF                      LOAD se, FF                    ; load 255 into sE (horizontal coordinate of block)
02F  01F62                      LOAD sf, 62                    ; load 108 into sF (vertical coordinate of block)
030  25000                      RETURN                         ; return from start subroutine

031        stay_in_gameover_state:
031  25000                      RETURN                         ; return from start subroutine

032                             ;;============================================================================
032                             ;; Play - Play Subroutine
032                             ;;============================================================================

032  0950F                play: INPUT s5, buttons              ; get center button values
033  2003C                      CALL map                       ; draw the map using map subroutine

034  0950F                      INPUT s5, buttons              ; get button values
035  1D510                      COMPARE s5, buttons_ct         ; check if center button is pressed
036  30284                      CALL Z, move_heli_up           ; call subroutine that moves the helicopter up

037  20246                      CALL draw_helicopter           ; draw the helicopter
038  20278                      CALL random_block_location     ; determines a random place for the block (y direction only)
039  2024B                      CALL draw_block                ; draw the block using draw_block subroutine
03A  20340                      CALL check_collision           ; check if any collisions happen

03B  25000                      RETURN                         ; finished with play subroutine

03C                             ;;============================================================================
03C                             ;; Map - Draw Map Subroutine
03C                             ;;============================================================================

03C                        map:

03C                             ;;============================================================================
03C                             ;; Draws Top Line of Map (Line 1)
03C                             ;;============================================================================

03C  01000                      LOAD s0, 00                    ; load 00 into s0
03D  0110F                      LOAD s1, 0F                    ; load 0F into s1
03E  012FF                      LOAD s2, FF                    ; load FF into s2
03F  0130F                      LOAD s3, 0F                    ; load 0F into s3
040  20330                      CALL draw_line                 ; draws the line

041                             ;;============================================================================
041                             ;; Draws Bottom Line of Map (Line 2)
041                             ;;============================================================================

041  01000                      LOAD s0, 00                    ; load 00 into s0
042  011F0                      LOAD s1, F0                    ; load 0F into s1
043  012FF                      LOAD s2, FF                    ; load FF into s2
044  013F0                      LOAD s3, F0                    ; load F0 into s3
045  20330                      CALL draw_line                 ; draws the line

046  25000                      RETURN                         ; go back from drawing map

047                             ;;============================================================================
047                             ;; Start Screen - Draw Start Screen Subroutine
047                             ;;============================================================================

047               start_screen:
047                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
047                             ;; Code for PRESS START [START MENU] ;;
047                             ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

047                             ;;;;;;;;;;;;;;;
047                             ;;BEGIN PRESS;;
047                             ;;;;;;;;;;;;;;;

047                             ;; LINE 1 (LEFT) FOR P
047  01041                      LOAD s0, 41                    ; stax 65
048  011C8                      LOAD s1, C8                    ; stay 200
049  01241                      LOAD s2, 41                    ; endx 65
04A  013D2                      LOAD s3, D2                    ; endy 210
04B  20330                      CALL draw_line                 ;

04C                             ;; LINE 2 (TOP) FOR P
04C  01041                      LOAD s0, 41                    ; stax 65
04D  011C8                      LOAD s1, C8                    ; stay 200
04E  01246                      LOAD s2, 46                    ; endx 70
04F  013C8                      LOAD s3, C8                    ; endy 200
050  20330                      CALL draw_line                 ;

051                             ;; LINE 3 (RIGHT) FOR P
051  01046                      LOAD s0, 46                    ; stax 70
052  011C8                      LOAD s1, C8                    ; stay 200
053  01246                      LOAD s2, 46                    ; endx 70
054  013CD                      LOAD s3, CD                    ; endy 205
055  20330                      CALL draw_line                 ;

056                             ;; LINE 4 (MIDDLE) FOR P
056  01041                      LOAD s0, 41                    ; stax 65
057  011CD                      LOAD s1, CD                    ; stay 205
058  01246                      LOAD s2, 46                    ; endx 70
059  013CD                      LOAD s3, CD                    ; endy 205
05A  20330                      CALL draw_line                 ;

05B                             ;; LINE 1 (LEFT) FOR R
05B  0104B                      LOAD s0, 4B                    ; stax 75
05C  011C8                      LOAD s1, C8                    ; stay 200
05D  0124B                      LOAD s2, 4B                    ; endx 75
05E  013D2                      LOAD s3, D2                    ; endy 210
05F  20330                      CALL draw_line                 ;

060                             ;; LINE 2 (TOP) FOR R
060  0104B                      LOAD s0, 4B                    ; stax 75
061  011C8                      LOAD s1, C8                    ; stay 200
062  01250                      LOAD s2, 50                    ; endx 80
063  013C8                      LOAD s3, C8                    ; endy 200
064  20330                      CALL draw_line                 ;

065                             ;; LINE 3 (RIGHT) FOR R
065  01050                      LOAD s0, 50                    ; stax 80
066  011C8                      LOAD s1, C8                    ; stay 200
067  01250                      LOAD s2, 50                    ; endx 80
068  013CD                      LOAD s3, CD                    ; endy 205
069  20330                      CALL draw_line                 ;

06A                             ;; LINE 4 (MIDDLE) FOR R
06A  0104B                      LOAD s0, 4B                    ; stax 75
06B  011CD                      LOAD s1, CD                    ; stay 205
06C  01250                      LOAD s2, 50                    ; endx 80
06D  013CD                      LOAD s3, CD                    ; endy 205
06E  20330                      CALL draw_line                 ;

06F                             ;; LINE 5 (ANGLED) FOR R
06F  0104B                      LOAD s0, 4B                    ; stax 75
070  011CD                      LOAD s1, CD                    ; stay 205
071  01250                      LOAD s2, 50                    ; endx 80
072  013D2                      LOAD s3, D2                    ; endy 210
073  20330                      CALL draw_line                 ;


074                             ;; LINE 5 (ANGLED) FOR R
074  0104B                      LOAD s0, 4B                    ; stax 75
075  011CD                      LOAD s1, CD                    ; stay 205
076  01250                      LOAD s2, 50                    ; endx 80
077  013D2                      LOAD s3, D2                    ; endy 210
078  20330                      CALL draw_line                 ;


079                             ;; LINE 6 (ANGLED2) FOR R
079                             ;;LOAD s0, 4B             ; stax 75
079                             ;;LOAD s1, CE             ; stay 204
079                             ;;LOAD s2, 4F             ; endx 79
079                             ;;LOAD s3, D2             ; endy 210
079                             ;;CALL draw_line          ;

079                             ;; LINE 1 (LEFT) FOR E
079  01055                      LOAD s0, 55                    ; stax 85
07A  011C8                      LOAD s1, C8                    ; stay 200
07B  01255                      LOAD s2, 55                    ; endx 85
07C  013D2                      LOAD s3, D2                    ; endy 210
07D  20330                      CALL draw_line                 ;

07E                             ;; LINE 2 (TOP) FOR E
07E  01055                      LOAD s0, 55                    ; stax 85
07F  011C8                      LOAD s1, C8                    ; stay 200
080  0125A                      LOAD s2, 5A                    ; endx 90
081  013C8                      LOAD s3, C8                    ; endy 200
082  20330                      CALL draw_line                 ;

083                             ;; LINE 3 (MIDDLE) FOR E
083  01055                      LOAD s0, 55                    ; stax 85
084  011CD                      LOAD s1, CD                    ; stay 205
085  0125A                      LOAD s2, 5A                    ; endx 90
086  013CD                      LOAD s3, CD                    ; endy 205
087  20330                      CALL draw_line                 ;

088                             ;; LINE 4 (BOTTOM) FOR E
088  01055                      LOAD s0, 55                    ; stax 85
089  011D2                      LOAD s1, D2                    ; stay 210
08A  0125A                      LOAD s2, 5A                    ; endx 90
08B  013D2                      LOAD s3, D2                    ; endy 210
08C  20330                      CALL draw_line                 ;

08D                             ;; LINE 1 (TOP) FOR S1
08D  0105F                      LOAD s0, 5F                    ; stax 95
08E  011C8                      LOAD s1, C8                    ; stay 200
08F  01264                      LOAD s2, 64                    ; endx 100
090  013C8                      LOAD s3, C8                    ; endy 200
091  20330                      CALL draw_line                 ;

092                             ;; LINE 2 (TOPLEFT) FOR S1
092  0105F                      LOAD s0, 5F                    ; stax 95
093  011C8                      LOAD s1, C8                    ; stay 200
094  0125F                      LOAD s2, 5F                    ; endx 95
095  013CD                      LOAD s3, CD                    ; endy 205
096  20330                      CALL draw_line                 ;

097                             ;; LINE 3 (MIDDLE) FOR S1
097  0105F                      LOAD s0, 5F                    ; stax 95
098  011CD                      LOAD s1, CD                    ; stay 205
099  01264                      LOAD s2, 64                    ; endx 100
09A  013CD                      LOAD s3, CD                    ; endy 205
09B  20330                      CALL draw_line                 ;

09C                             ;; LINE 4 (BOTTOMRIGHT) FOR S1
09C  01064                      LOAD s0, 64                    ; stax 100
09D  011CD                      LOAD s1, CD                    ; stay 205
09E  01264                      LOAD s2, 64                    ; endx 100
09F  013D2                      LOAD s3, D2                    ; endy 210
0A0  20330                      CALL draw_line                 ;

0A1                             ;; LINE 5 (BOTTOM) FOR S1
0A1  0105F                      LOAD s0, 5F                    ; stax 95
0A2  011D2                      LOAD s1, D2                    ; stay 210
0A3  01264                      LOAD s2, 64                    ; endx 100
0A4  013D2                      LOAD s3, D2                    ; endy 210
0A5  20330                      CALL draw_line                 ;

0A6                             ;; LINE 1 (TOP) FOR S2
0A6  01069                      LOAD s0, 69                    ; stax 105
0A7  011C8                      LOAD s1, C8                    ; stay 200
0A8  0126E                      LOAD s2, 6E                    ; endx 110
0A9  013C8                      LOAD s3, C8                    ; endy 200
0AA  20330                      CALL draw_line                 ;

0AB                             ;; LINE 2 (TOPLEFT) FOR S2
0AB  01069                      LOAD s0, 69                    ; stax 105
0AC  011C8                      LOAD s1, C8                    ; stay 200
0AD  01269                      LOAD s2, 69                    ; endx 105
0AE  013CD                      LOAD s3, CD                    ; endy 205
0AF  20330                      CALL draw_line                 ;

0B0                             ;; LINE 3 (MIDDLE) FOR S2
0B0  01069                      LOAD s0, 69                    ; stax 105
0B1  011CD                      LOAD s1, CD                    ; stay 205
0B2  0126E                      LOAD s2, 6E                    ; endx 110
0B3  013CD                      LOAD s3, CD                    ; endy 205
0B4  20330                      CALL draw_line                 ;

0B5                             ;; LINE 4 (BOTTOMRIGHT) FOR S2
0B5  0106E                      LOAD s0, 6E                    ; stax 110
0B6  011CD                      LOAD s1, CD                    ; stay 205
0B7  0126E                      LOAD s2, 6E                    ; endx 110
0B8  013D2                      LOAD s3, D2                    ; endy 210
0B9  20330                      CALL draw_line                 ;

0BA                             ;; LINE 5 (BOTTOM) FOR S2
0BA  01069                      LOAD s0, 69                    ; stax 105
0BB  011D2                      LOAD s1, D2                    ; stay 210
0BC  0126E                      LOAD s2, 6E                    ; endx 110
0BD  013D2                      LOAD s3, D2                    ; endy 210
0BE  20330                      CALL draw_line                 ;

0BF                             ;;;;;;;;;;;;;;;
0BF                             ;;BEGIN START;;
0BF                             ;;;;;;;;;;;;;;;

0BF                             ;; LINE 1 (TOP) FOR S
0BF  01082                      LOAD s0, 82                    ; stax 130
0C0  011C8                      LOAD s1, C8                    ; stay 200
0C1  01288                      LOAD s2, 88                    ; endx 135
0C2  013C8                      LOAD s3, C8                    ; endy 200
0C3  20330                      CALL draw_line                 ;

0C4                             ;; LINE 2 (TOPLEFT) FOR S
0C4  01082                      LOAD s0, 82                    ; stax 130
0C5  011C8                      LOAD s1, C8                    ; stay 200
0C6  01282                      LOAD s2, 82                    ; endx 130
0C7  013CD                      LOAD s3, CD                    ; endy 205
0C8  20330                      CALL draw_line                 ;

0C9                             ;; LINE 3 (MIDDLE) FOR S
0C9  01082                      LOAD s0, 82                    ; stax 130
0CA  011CD                      LOAD s1, CD                    ; stay 205
0CB  01287                      LOAD s2, 87                    ; endx 135
0CC  013CD                      LOAD s3, CD                    ; endy 205
0CD  20330                      CALL draw_line                 ;

0CE                             ;; LINE 4 (BOTTOMRIGHT) FOR S
0CE  01087                      LOAD s0, 87                    ; stax 135
0CF  011CD                      LOAD s1, CD                    ; stay 205
0D0  01287                      LOAD s2, 87                    ; endx 135
0D1  013D2                      LOAD s3, D2                    ; endy 210
0D2  20330                      CALL draw_line                 ;

0D3                             ;; LINE 5 (BOTTOM) FOR S
0D3  01082                      LOAD s0, 82                    ; stax 130
0D4  011D2                      LOAD s1, D2                    ; stay 210
0D5  01287                      LOAD s2, 87                    ; endx 135
0D6  013D2                      LOAD s3, D2                    ; endy 210
0D7  20330                      CALL draw_line                 ;

0D8                             ;; LINE 1 (TOP) FOR T1
0D8  0108C                      LOAD s0, 8C                    ; stax 140
0D9  011C8                      LOAD s1, C8                    ; stay 200
0DA  01296                      LOAD s2, 96                    ; endx 150
0DB  013C8                      LOAD s3, C8                    ; endy 200
0DC  20330                      CALL draw_line                 ;

0DD                             ;; LINE 2 (MIDDLE) FOR T1
0DD  0108F                      LOAD s0, 8F                    ; stax 143
0DE  011C8                      LOAD s1, C8                    ; stay 200
0DF  0128F                      LOAD s2, 8F                    ; endx 143
0E0  013D2                      LOAD s3, D2                    ; endy 210
0E1  20330                      CALL draw_line                 ;

0E2                             ;; LINE 1 (LEFT) FOR A
0E2  01096                      LOAD s0, 96                    ; stax 150
0E3  011C8                      LOAD s1, C8                    ; stay 200
0E4  01296                      LOAD s2, 96                    ; endx 150
0E5  013D2                      LOAD s3, D2                    ; endy 210
0E6  20330                      CALL draw_line                 ;

0E7                             ;; LINE 2 (TOP) FOR A
0E7  01096                      LOAD s0, 96                    ; stax 150
0E8  011C8                      LOAD s1, C8                    ; stay 200
0E9  0129B                      LOAD s2, 9B                    ; endx 155
0EA  013C8                      LOAD s3, C8                    ; endy 200
0EB  20330                      CALL draw_line                 ;

0EC                             ;; LINE 3 (MIDDLE) FOR A
0EC  01096                      LOAD s0, 96                    ; stax 150
0ED  011CD                      LOAD s1, CD                    ; stay 205
0EE  0129B                      LOAD s2, 9B                    ; endx 155
0EF  013CD                      LOAD s3, CD                    ; endy 205
0F0  20330                      CALL draw_line                 ;

0F1                             ;; LINE 4 (RIGHT) FOR A
0F1  0109B                      LOAD s0, 9B                    ; stax 155
0F2  011C8                      LOAD s1, C8                    ; stay 200
0F3  0129B                      LOAD s2, 9B                    ; endx 155
0F4  013D2                      LOAD s3, D2                    ; endy 210
0F5  20330                      CALL draw_line                 ;

0F6                             ;; LINE 1 (LEFT) FOR R
0F6  010A0                      LOAD s0, A0                    ; stax 160
0F7  011C8                      LOAD s1, C8                    ; stay 200
0F8  012A0                      LOAD s2, A0                    ; endx 160
0F9  013D2                      LOAD s3, D2                    ; endy 210
0FA  20330                      CALL draw_line                 ;

0FB                             ;; LINE 2 (TOP) FOR R
0FB  010A0                      LOAD s0, A0                    ; stax 160
0FC  011C8                      LOAD s1, C8                    ; stay 200
0FD  012A5                      LOAD s2, A5                    ; endx 165
0FE  013C8                      LOAD s3, C8                    ; endy 200
0FF  20330                      CALL draw_line                 ;

100                             ;; LINE 3 (RIGHT) FOR R
100  010A5                      LOAD s0, A5                    ; stax 165
101  011C8                      LOAD s1, C8                    ; stay 200
102  012A5                      LOAD s2, A5                    ; endx 165
103  013CD                      LOAD s3, CD                    ; endy 205
104  20330                      CALL draw_line                 ;

105                             ;; LINE 4 (MIDDLE) FOR R
105  010A0                      LOAD s0, A0                    ; stax 160
106  011CD                      LOAD s1, CD                    ; stay 205
107  012A5                      LOAD s2, A5                    ; endx 165
108  013CD                      LOAD s3, CD                    ; endy 205
109  20330                      CALL draw_line                 ;

10A                             ;; LINE 5 (ANGLED) FOR R
10A  010A0                      LOAD s0, A0                    ; stax 160
10B  011CD                      LOAD s1, CD                    ; stay 205
10C  012A5                      LOAD s2, A5                    ; endx 165
10D  013D2                      LOAD s3, D2                    ; endy 210
10E  20330                      CALL draw_line                 ;

10F                             ;; LINE 6 (ANGLED2) FOR R
10F  010A0                      LOAD s0, A0                    ; stax 160
110  011CE                      LOAD s1, CE                    ; stay 206
111  012A4                      LOAD s2, A4                    ; endx 164
112  013D2                      LOAD s3, D2                    ; endy 210
113  20330                      CALL draw_line                 ;

114                             ;; LINE 1 (TOP) FOR T2
114  010AA                      LOAD s0, AA                    ; stax 170
115  011C8                      LOAD s1, C8                    ; stay 200
116  012B4                      LOAD s2, B4                    ; endx 180
117  013C8                      LOAD s3, C8                    ; endy 200
118  20330                      CALL draw_line                 ;

119                             ;; LINE 2 (MIDDLE) FOR T2
119  010AD                      LOAD s0, AD                    ; stax 173
11A  011C8                      LOAD s1, C8                    ; stay 200
11B  012AD                      LOAD s2, AD                    ; endx 173
11C  013D2                      LOAD s3, D2                    ; endy 210
11D  20330                      CALL draw_line                 ;



11E                             ;;============================================================================
11E                             ;; Draws Decoration (Line 1a)
11E                             ;;============================================================================

11E  01000                      LOAD s0, 00                    ; load 00 into s0
11F  0110A                      LOAD s1, 0A                    ; load 0A into s1
120  012FF                      LOAD s2, FF                    ; load FF into s2
121  0130A                      LOAD s3, 0A                    ; load 0A into s3
122  20330                      CALL draw_line                 ; draws the line

123                             ;;===========================================================================
123                             ;; Draws Decoration (Line 2a)
123                             ;;============================================================================

123  01000                      LOAD s0, 00                    ; load 00 into s0
124  0110C                      LOAD s1, 0C                    ; load 0C into s1
125  012FF                      LOAD s2, FF                    ; load FF into s2
126  0130C                      LOAD s3, 0C                    ; load 0C into s3
127  20330                      CALL draw_line                 ; draws the line

128                             ;;===========================================================================
128                             ;; Draws Decoration (Line 3a)
128                             ;;============================================================================

128  01000                      LOAD s0, 00                    ; load 00 into s0
129  0110E                      LOAD s1, 0E                    ; load 0E into s1
12A  012FF                      LOAD s2, FF                    ; load FF into s2
12B  0130E                      LOAD s3, 0E                    ; load 0E into s3
12C  20330                      CALL draw_line                 ; draws the line

12D                             ;;============================================================================
12D                             ;; Draws Decoration (Line 1b)
12D                             ;;============================================================================

12D  01000                      LOAD s0, 00                    ; load 00 into s0
12E  01188                      LOAD s1, 88                    ; load 88 into s1
12F  012FF                      LOAD s2, FF                    ; load FF into s2
130  01388                      LOAD s3, 88                    ; load 88 into s3
131  20330                      CALL draw_line                 ; draws the line

132                             ;;===========================================================================
132                             ;; Draws Decoration (Line 2b)
132                             ;;============================================================================

132  01000                      LOAD s0, 00                    ; load 00 into s0
133  0118A                      LOAD s1, 8A                    ; load 8A into s1
134  012FF                      LOAD s2, FF                    ; load FF into s2
135  0138A                      LOAD s3, 8A                    ; load 8A into s3
136  20330                      CALL draw_line                 ; draws the line

137                             ;;===========================================================================
137                             ;; Draws Decoration (Line 3b)
137                             ;;============================================================================

137  01000                      LOAD s0, 00                    ; load 00 into s0
138  0118C                      LOAD s1, 8C                    ; load 8A into s1
139  012FF                      LOAD s2, FF                    ; load FF into s2
13A  0138C                      LOAD s3, 8C                    ; load 8C into s3
13B  20330                      CALL draw_line                 ; draws the line

13C                             ;;============================================================================
13C                             ;; Draws the letter H (Line 1)
13C                             ;;============================================================================

13C                             ;; STARTING POINT
13C  0150A                      LOAD s5, 0A                    ; load 10 into s5
13D  2D500                      OUTPUT s5, stax                ; set desired stax
13E  0161E                      LOAD s6, 1E                    ; load 30 into s6
13F  2D601                      OUTPUT s6, stay                ; set desired stay

140                             ;; ENDING POINT
140  2D502                      OUTPUT s5, endx                ; set desired endx
141  0163C                      LOAD s6, 3C                    ; load 60 into s6
142  2D603                      OUTPUT s6, endy                ; set desired endy
143  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

144                             ;;============================================================================
144                             ;; Draws the letter H (Line 2)
144                             ;;============================================================================

144                             ;; STARTING POINT
144  0150A                      LOAD s5, 0A                    ; load 10 into s5
145  2D500                      OUTPUT s5, stax                ; set desired stax
146  0162D                      LOAD s6, 2D                    ; load 45 into s6
147  2D601                      OUTPUT s6, stay                ; set desired stay

148                             ;; ENDING POINT
148  0151E                      LOAD s5, 1E                    ; load 30 into s5
149  2D502                      OUTPUT s5, endx                ; set desired endx
14A  2D603                      OUTPUT s6, endy                ; set desired endy
14B  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

14C                             ;;============================================================================
14C                             ;; Draws the letter H (Line 3)
14C                             ;;============================================================================

14C                             ;; STARTING POINT
14C  0151E                      LOAD s5, 1E                    ; load 30 into s5
14D  2D500                      OUTPUT s5, stax                ; set desired stax
14E  0161E                      LOAD s6, 1E                    ; load 30 into s6
14F  2D601                      OUTPUT s6, stay                ; set desired stay

150                             ;; ENDING POINT
150  2D502                      OUTPUT s5, endx                ; set desired endx
151  0163C                      LOAD s6, 3C                    ; load 60 into s6
152  2D603                      OUTPUT s6, endy                ; set desired endy
153  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

154                             ;;============================================================================
154                             ;; Draws the letter E (Line 1)
154                             ;;============================================================================

154                             ;; STARTING POINT
154  01528                      LOAD s5, 28                    ; load 40 into s5
155  2D500                      OUTPUT s5, stax                ; set desired stax
156  0161E                      LOAD s6, 1E                    ; load 30 into s6
157  2D601                      OUTPUT s6, stay                ; set desired stay

158                             ;; ENDING POINT
158  2D502                      OUTPUT s5, endx                ; set desired endx
159  0163C                      LOAD s6, 3C                    ; load 60 into s6
15A  2D603                      OUTPUT s6, endy                ; set desired endy
15B  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

15C                             ;;============================================================================
15C                             ;; Draws the letter E (Line 2)
15C                             ;;============================================================================

15C                             ;; STARTING POINT
15C  01528                      LOAD s5, 28                    ; load 40 into s5
15D  2D500                      OUTPUT s5, stax                ; set desired stax
15E  0161E                      LOAD s6, 1E                    ; load 30 into s6
15F  2D601                      OUTPUT s6, stay                ; set desired stay

160                             ;; ENDING POINT
160  0153C                      LOAD s5, 3C                    ; load 60 into s5
161  2D502                      OUTPUT s5, endx                ; set desired endx
162  2D603                      OUTPUT s6, endy                ; set desired endy
163  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

164                             ;;============================================================================
164                             ;; Draws the letter E (Line 3)
164                             ;;============================================================================

164                             ;; STARTING POINT
164  01528                      LOAD s5, 28                    ; load 40 into s5
165  2D500                      OUTPUT s5, stax                ; set desired stax
166  0162D                      LOAD s6, 2D                    ; load 45 into s6
167  2D601                      OUTPUT s6, stay                ; set desired stay

168                             ;; ENDING POINT
168  0153C                      LOAD s5, 3C                    ; load 60 into s5
169  2D502                      OUTPUT s5, endx                ; set desired endx
16A  2D603                      OUTPUT s6, endy                ; set desired endy
16B  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

16C                             ;;============================================================================
16C                             ;; Draws the letter E (Line 3)
16C                             ;;============================================================================

16C                             ;; STARTING POINT
16C  01528                      LOAD s5, 28                    ; load 40 into s5
16D  2D500                      OUTPUT s5, stax                ; set desired stax
16E  0163C                      LOAD s6, 3C                    ; load 45 into s6
16F  2D601                      OUTPUT s6, stay                ; set desired stay

170                             ;; ENDING POINT
170  0153C                      LOAD s5, 3C                    ; load 60 into s5
171  2D502                      OUTPUT s5, endx                ; set desired endx
172  2D603                      OUTPUT s6, endy                ; set desired endy
173  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

174                             ;;============================================================================
174                             ;; Draws the letter L (Line 1)
174                             ;;============================================================================

174                             ;; STARTING POINT
174  01546                      LOAD s5, 46                    ; load 70 into s5
175  2D500                      OUTPUT s5, stax                ; set desired stax
176  0161E                      LOAD s6, 1E                    ; load 30 into s6
177  2D601                      OUTPUT s6, stay                ; set desired stay

178                             ;; ENDING POINT
178  2D502                      OUTPUT s5, endx                ; set desired endx
179  0163C                      LOAD s6, 3C                    ; load 60 into s6
17A  2D603                      OUTPUT s6, endy                ; set desired endy
17B  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

17C                             ;;============================================================================
17C                             ;; Draws the letter L (Line 2)
17C                             ;;============================================================================

17C                             ;; STARTING POINT
17C  01546                      LOAD s5, 46                    ; load 70 into s5
17D  2D500                      OUTPUT s5, stax                ; set desired stax
17E  0163C                      LOAD s6, 3C                    ; load 45 into s6
17F  2D601                      OUTPUT s6, stay                ; set desired stay

180                             ;; ENDING POINT
180  0155A                      LOAD s5, 5A                    ; load 90 into s5
181  2D502                      OUTPUT s5, endx                ; set desired endx
182  2D603                      OUTPUT s6, endy                ; set desired endy
183  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

184                             ;;============================================================================
184                             ;; Draws the letter I (Line 1)
184                             ;;============================================================================

184                             ;; STARTING POINT
184  01564                      LOAD s5, 64                    ; load 70 into s5
185  2D500                      OUTPUT s5, stax                ; set desired stax
186  0161E                      LOAD s6, 1E                    ; load 30 into s6
187  2D601                      OUTPUT s6, stay                ; set desired stay

188                             ;; ENDING POINT
188  2D502                      OUTPUT s5, endx                ; set desired endx
189  0163C                      LOAD s6, 3C                    ; load 60 into s6
18A  2D603                      OUTPUT s6, endy                ; set desired endy
18B  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

18C                             ;;============================================================================
18C                             ;; Draws the letter C (Line 1)
18C                             ;;============================================================================

18C                             ;; STARTING POINT
18C  01582                      LOAD s5, 82                    ; load 130 into s5
18D  2D500                      OUTPUT s5, stax                ; set desired stax
18E  0161E                      LOAD s6, 1E                    ; load 45 into s6
18F  2D601                      OUTPUT s6, stay                ; set desired stay

190                             ;; ENDING POINT
190  01573                      LOAD s5, 73                    ; load 115 into s5
191  2D502                      OUTPUT s5, endx                ; set desired endx
192  2D603                      OUTPUT s6, endy                ; set desired endy
193  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

194                             ;;============================================================================
194                             ;; Draws the letter C (Line 2)
194                             ;;============================================================================

194                             ;; STARTING POINT
194  01573                      LOAD s5, 73                    ; load 115 into s5
195  2D500                      OUTPUT s5, stax                ; set desired stax
196  0161E                      LOAD s6, 1E                    ; load 45 into s6
197  2D601                      OUTPUT s6, stay                ; set desired stay

198                             ;; ENDING POINT
198  0156E                      LOAD s5, 6E                    ; load 110 into s5
199  2D502                      OUTPUT s5, endx                ; set desired endx
19A  01623                      LOAD s6, 23                    ; load 35 into s6
19B  2D603                      OUTPUT s6, endy                ; set desired endy
19C  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

19D                             ;;============================================================================
19D                             ;; Draws the letter C (Line 3)
19D                             ;;============================================================================

19D                             ;; STARTING POINT
19D  0156E                      LOAD s5, 6E                    ; load 110 into s5
19E  2D500                      OUTPUT s5, stax                ; set desired stax
19F  01623                      LOAD s6, 23                    ; load 35 into s6
1A0  2D601                      OUTPUT s6, stay                ; set desired stay

1A1                             ;; ENDING POINT
1A1  2D502                      OUTPUT s5, endx                ; set desired endx
1A2  01637                      LOAD s6, 37                    ; load 55 into s6
1A3  2D603                      OUTPUT s6, endy                ; set desired endy
1A4  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1A5                             ;;============================================================================
1A5                             ;; Draws the letter C (Line 4)
1A5                             ;;============================================================================

1A5                             ;; STARTING POINT
1A5  0156E                      LOAD s5, 6E                    ; load 110 into s5
1A6  2D500                      OUTPUT s5, stax                ; set desired stax
1A7  01637                      LOAD s6, 37                    ; load 55 into s6
1A8  2D601                      OUTPUT s6, stay                ; set desired stay

1A9                             ;; ENDING POINT
1A9  01573                      LOAD s5, 73                    ; load 130 into s5
1AA  2D502                      OUTPUT s5, endx                ; set desired endx
1AB  0163B                      LOAD s6, 3B                    ; load 44 into s6
1AC  2D603                      OUTPUT s6, endy                ; set desired endy
1AD  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1AE                             ;;============================================================================
1AE                             ;; Draws the letter C (Line 5)
1AE                             ;;============================================================================

1AE                             ;; STARTING POINT
1AE  01582                      LOAD s5, 82                    ; load 130 into s5
1AF  2D500                      OUTPUT s5, stax                ; set desired stax
1B0  0163C                      LOAD s6, 3C                    ; load 45 into s6
1B1  2D601                      OUTPUT s6, stay                ; set desired stay

1B2                             ;; ENDING POINT
1B2  01573                      LOAD s5, 73                    ; load 115 into s5
1B3  2D502                      OUTPUT s5, endx                ; set desired endx
1B4  2D603                      OUTPUT s6, endy                ; set desired endy
1B5  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1B6                             ;;============================================================================
1B6                             ;; Draws the letter O (Line 1)
1B6                             ;;============================================================================

1B6                             ;; STARTING POINT
1B6  01591                      LOAD s5, 91                    ; load 145 into s5
1B7  2D500                      OUTPUT s5, stax                ; set desired stax
1B8  0161E                      LOAD s6, 1E                    ; load 30 into s6
1B9  2D601                      OUTPUT s6, stay                ; set desired stay

1BA                             ;; ENDING POINT
1BA  0159B                      LOAD s5, 9B                    ; load 155 into s5
1BB  2D502                      OUTPUT s5, endx                ; set desired endx
1BC  2D603                      OUTPUT s6, endy                ; set desired endy
1BD  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1BE                             ;;============================================================================
1BE                             ;; Draws the letter O (Line 2)
1BE                             ;;============================================================================

1BE                             ;; STARTING POINT
1BE  01591                      LOAD s5, 91                    ; load 145 into s5
1BF  2D500                      OUTPUT s5, stax                ; set desired stax
1C0  0161E                      LOAD s6, 1E                    ; load 45 into s6
1C1  2D601                      OUTPUT s6, stay                ; set desired stay

1C2                             ;; ENDING POINT
1C2  0158C                      LOAD s5, 8C                    ; load 110 into s5
1C3  2D502                      OUTPUT s5, endx                ; set desired endx
1C4  0161E                      LOAD s6, 1E                    ; load 35 into s6
1C5  2D603                      OUTPUT s6, endy                ; set desired endy
1C6  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1C7                             ;;============================================================================
1C7                             ;; Draws the letter O (Line 3)
1C7                             ;;============================================================================

1C7                             ;; STARTING POINT
1C7  0158C                      LOAD s5, 8C                    ; load 140 into s5
1C8  2D500                      OUTPUT s5, stax                ; set desired stax
1C9  0161E                      LOAD s6, 1E                    ; load 30 into s6
1CA  2D601                      OUTPUT s6, stay                ; set desired stay

1CB                             ;; ENDING POINT
1CB  2D502                      OUTPUT s5, endx                ; set desired endx
1CC  0163C                      LOAD s6, 3C                    ; load 60 into s6
1CD  2D603                      OUTPUT s6, endy                ; set desired endy
1CE  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1CF                             ;;============================================================================
1CF                             ;; Draws the letter O (Line 4)
1CF                             ;;============================================================================

1CF                             ;; STARTING POINT
1CF  0158C                      LOAD s5, 8C                    ; load 110 into s5
1D0  2D500                      OUTPUT s5, stax                ; set desired stax
1D1  0163C                      LOAD s6, 3C                    ; load 55 into s6
1D2  2D601                      OUTPUT s6, stay                ; set desired stay

1D3                             ;; ENDING POINT
1D3  01591                      LOAD s5, 91                    ; load 145 into s5
1D4  2D502                      OUTPUT s5, endx                ; set desired endx
1D5  0163C                      LOAD s6, 3C                    ; load 30 into s6
1D6  2D603                      OUTPUT s6, endy                ; set desired endy
1D7  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1D8                             ;;============================================================================
1D8                             ;; Draws the letter O (Line 5)
1D8                             ;;============================================================================

1D8                             ;; STARTING POINT
1D8  01591                      LOAD s5, 91                    ; load 145 into s5
1D9  2D500                      OUTPUT s5, stax                ; set desired stax
1DA  0163C                      LOAD s6, 3C                    ; load 30 into s6
1DB  2D601                      OUTPUT s6, stay                ; set desired stay

1DC                             ;; ENDING POINT
1DC  0159B                      LOAD s5, 9B                    ; load 155 into s5
1DD  2D502                      OUTPUT s5, endx                ; set desired endx
1DE  2D603                      OUTPUT s6, endy                ; set desired endy
1DF  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1E0                             ;;============================================================================
1E0                             ;; Draws the letter O (Line 6)
1E0                             ;;============================================================================

1E0                             ;; STARTING POINT
1E0  0159B                      LOAD s5, 9B                    ; load 110 into s5
1E1  2D500                      OUTPUT s5, stax                ; set desired stax
1E2  0163C                      LOAD s6, 3C                    ; load 55 into s6
1E3  2D601                      OUTPUT s6, stay                ; set desired stay

1E4                             ;; ENDING POINT
1E4  015A0                      LOAD s5, A0                    ; load 160 into s5
1E5  2D502                      OUTPUT s5, endx                ; set desired endx
1E6  0163C                      LOAD s6, 3C                    ; load 30 into s6
1E7  2D603                      OUTPUT s6, endy                ; set desired endy
1E8  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1E9                             ;;============================================================================
1E9                             ;; Draws the letter O (Line 7)
1E9                             ;;============================================================================

1E9                             ;; STARTING POINT
1E9  015A0                      LOAD s5, A0                    ; load 160 into s5
1EA  2D500                      OUTPUT s5, stax                ; set desired stax
1EB  0161E                      LOAD s6, 1E                    ; load 30 into s6
1EC  2D601                      OUTPUT s6, stay                ; set desired stay

1ED                             ;; ENDING POINT
1ED  2D502                      OUTPUT s5, endx                ; set desired endx
1EE  0163C                      LOAD s6, 3C                    ; load 60 into s6
1EF  2D603                      OUTPUT s6, endy                ; set desired endy
1F0  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1F1                             ;;============================================================================
1F1                             ;; Draws the letter O (Line 8)
1F1                             ;;============================================================================

1F1                             ;; STARTING POINT
1F1  015A0                      LOAD s5, A0                    ; load 160 into s5
1F2  2D500                      OUTPUT s5, stax                ; set desired stax
1F3  0161E                      LOAD s6, 1E                    ; load 30 into s6
1F4  2D601                      OUTPUT s6, stay                ; set desired stay

1F5                             ;; ENDING POINT
1F5  0159B                      LOAD s5, 9B                    ; load 155 into s5
1F6  2D502                      OUTPUT s5, endx                ; set desired endx
1F7  0161E                      LOAD s6, 1E                    ; load 30 into s6
1F8  2D603                      OUTPUT s6, endy                ; set desired endy
1F9  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

1FA                             ;;============================================================================
1FA                             ;; Draws the letter P (Line 1)
1FA                             ;;============================================================================
1FA  010AA                      LOAD s0, AA                    ; load 170 into s0
1FB  0111E                      LOAD s1, 1E                    ; load 30 into s1
1FC  012BE                      LOAD s2, BE                    ; load 190 into s2
1FD  0131E                      LOAD s3, 1E                    ; keep s3 set at 30
1FE  20330                      CALL draw_line                 ; call the draw_line subroutine

1FF                             ;;============================================================================
1FF                             ;; Draws the letter P (Line 2)
1FF                             ;;============================================================================
1FF  010AA                      LOAD s0, AA                    ; load 170 into s0
200  0111E                      LOAD s1, 1E                    ; load 30 into s1
201  012AA                      LOAD s2, AA                    ; load 170 into s2
202  0133C                      LOAD s3, 3C                    ; load 60 into s3
203  20330                      CALL draw_line                 ; call the draw_line subroutine

204                             ;;============================================================================
204                             ;; Draws the letter P (Line 3)
204                             ;;============================================================================
204  010AA                      LOAD s0, AA                    ; load 170 into s0
205  0112D                      LOAD s1, 2D                    ; load 45 into s1
206  012BE                      LOAD s2, BE                    ; load 190 into s2
207  0132D                      LOAD s3, 2D                    ; keep s0 set at 45
208  20330                      CALL draw_line                 ; call the draw_line subroutine

209                             ;;============================================================================
209                             ;; Draws the letter P (Line 4)
209                             ;;============================================================================
209  010BE                      LOAD s0, BE                    ; load 190 into s0
20A  0111E                      LOAD s1, 1E                    ; load 30 into s1
20B  012BE                      LOAD s2, BE                    ; load 190 into s2
20C  0132D                      LOAD s3, 2D                    ; load 45 to s3
20D  20330                      CALL draw_line                 ; call the draw_line subroutine

20E                             ;;============================================================================
20E                             ;; Draws the letter T (Line 1)
20E                             ;;============================================================================
20E  010C8                      LOAD s0, C8                    ; load 200 into s0
20F  0111E                      LOAD s1, 1E                    ; load 30 into s1
210  012DC                      LOAD s2, DC                    ; load 220 into s2
211  0131E                      LOAD s3, 1E                    ; load 30 to s3
212  20330                      CALL draw_line                 ; call the draw_line subroutine

213                             ;;============================================================================
213                             ;; Draws the letter T (Line 2)
213                             ;;============================================================================
213  010D2                      LOAD s0, D2                    ; load 200 into s0
214  0111E                      LOAD s1, 1E                    ; load 30 into s1
215  012D2                      LOAD s2, D2                    ; load 220 into s2
216  0133C                      LOAD s3, 3C                    ; load 60 to s3
217  20330                      CALL draw_line                 ; call the draw_line subroutine

218                             ;;============================================================================
218                             ;; Draws the letter E (Line 1)
218                             ;;============================================================================
218  010E6                      LOAD s0, E6                    ; load 230 into s0
219  0111E                      LOAD s1, 1E                    ; load 30 into s1
21A  012E6                      LOAD s2, E6                    ; load 230 into s2
21B  0133C                      LOAD s3, 3C                    ; load 30 to s3
21C  20330                      CALL draw_line                 ; call the draw_line subroutine

21D                             ;;============================================================================
21D                             ;; Draws the letter E (Line 2)
21D                             ;;============================================================================
21D  010E6                      LOAD s0, E6                    ; load 230 into s0
21E  0111E                      LOAD s1, 1E                    ; load 30 into s1
21F  012FA                      LOAD s2, FA                    ; load 250 into s2
220  0131E                      LOAD s3, 1E                    ; load 30 to s3
221  20330                      CALL draw_line                 ; call the draw_line subroutine

222                             ;;============================================================================
222                             ;; Draws the letter E (Line 3)
222                             ;;============================================================================
222  010E6                      LOAD s0, E6                    ; load 230 into s0
223  0112D                      LOAD s1, 2D                    ; load 30 into s1
224  012FA                      LOAD s2, FA                    ; load 250 into s2
225  0132D                      LOAD s3, 2D                    ; load 30 to s3
226  20330                      CALL draw_line                 ; call the draw_line subroutine

227                             ;;============================================================================
227                             ;; Draws the letter E (Line 4)
227                             ;;============================================================================
227  010E6                      LOAD s0, E6                    ; load 230 into s0
228  0113C                      LOAD s1, 3C                    ; load 30 into s1
229  012FA                      LOAD s2, FA                    ; load 250 into s2
22A  0133C                      LOAD s3, 3C                    ; load 30 to s3
22B  20330                      CALL draw_line                 ; call the draw_line subroutine

22C                             ;;============================================================================
22C                             ;; NEW LINE STARTS HERE (GAME)
22C                             ;;============================================================================

22C                             ;;============================================================================
22C                             ;; Draws the letter G (Line 1)
22C                             ;;============================================================================
22C  01046                      LOAD s0, 46                    ; load 70 into s0
22D  0115A                      LOAD s1, 5A                    ; load 90 into s1
22E  0125A                      LOAD s2, 5A                    ; load 90 into s2
22F  0135A                      LOAD s3, 5A                    ; load 90 to s3
230  20330                      CALL draw_line                 ; call the draw_line subroutine

231                             ;;============================================================================
231                             ;; Draws the letter G (Line 2)
231                             ;;============================================================================
231  01046                      LOAD s0, 46                    ; load 70 into s0
232  0115A                      LOAD s1, 5A                    ; load 90 into s1
233  01246                      LOAD s2, 46                    ; load 90 into s2
234  01378                      LOAD s3, 78                    ; load 90 to s3
235  20330                      CALL draw_line                 ; call the draw_line subroutine

236                             ;;============================================================================
236                             ;; Draws the letter G (Line 3)
236                             ;;============================================================================
236  01046                      LOAD s0, 46                    ; load 70 into s0
237  01178                      LOAD s1, 78                    ; load 90 into s1
238  0125A                      LOAD s2, 5A                    ; load 90 into s2
239  01378                      LOAD s3, 78                    ; load 90 to s3
23A  20330                      CALL draw_line                 ; call the draw_line subroutine

23B                             ;;============================================================================
23B                             ;; Draws the letter G (Line 4)
23B                             ;;============================================================================
23B  0105A                      LOAD s0, 5A                    ; load 70 into s0
23C  01169                      LOAD s1, 69                    ; load 90 into s1
23D  0125A                      LOAD s2, 5A                    ; load 90 into s2
23E  01378                      LOAD s3, 78                    ; load 90 to s3
23F  20330                      CALL draw_line                 ; call the draw_line subroutine

240                             ;;============================================================================
240                             ;; Draws the letter G (Line 5)
240                             ;;============================================================================
240  0105A                      LOAD s0, 5A                    ; load 70 into s0
241  01169                      LOAD s1, 69                    ; load 90 into s1
242  01250                      LOAD s2, 50                    ; load 90 into s2
243  01369                      LOAD s3, 69                    ; load 90 to s3
244  20330                      CALL draw_line                 ; call the draw_line subroutine

245  25000                      RETURN                         ; leave start_screen subroutine

246                             ;;============================================================================
246                             ;; Draw Helicopter - Draw Helicopter Subroutine
246                             ;;============================================================================

246            draw_helicopter:

246  2028A                      CALL draw_helicopter_cockpit   ; call the subroutine to draw the cockpit
247  202FE                      CALL draw_helicopter_blades    ; call the subroutine to draw the blades
248  202C9                      CALL draw_helicopter_tail      ; call the subroutine to draw the tail
249  20312                      CALL draw_helicopter_smoke     ; call the subroutine to draw the smoke

24A  25000                      RETURN                         ; go back from drawing helicopter


24B                             ;;============================================================================
24B                             ;; Draw Block - Draw Block Subroutine
24B                             ;;============================================================================

24B                 draw_block:

24B                             ;;============================================================================
24B                             ;; Draws Top Line of Block
24B                             ;;============================================================================

24B  005E0                      LOAD s5, se                    ; load 255 into s5 (horizontal center of block)
24C  016E1                      LOAD s6, E1                    ; load 245 into s6
24D  1C650                      COMPARE s6, s5                 ; checking if the block is done "peaking out" from the right (initial compare: 245 ? 255)
24E  3A254                      JUMP C, right_edge             ; jump to right_edge
24F  0160A                      LOAD s6, 0A                    ; load 10 into s6
250  1C560                      COMPARE s5, s6                 ; comparing s5 and s6
251  3A258                      JUMP C, left_edge              ; jump to left_edge
252  32258                      JUMP Z, left_edge              ; jump to left_edge
253  2225C                      JUMP in_middle                 ; jump to in_middle

254  2D500          right_edge: OUTPUT s5, stax                ; set desired stax
255  1950A                      SUB s5, 0A                     ;
256  2D502                      OUTPUT s5, endx                ; set desired stax
257  2225F                      JUMP finished1                 ; jump to draw_ys

258  2D500           left_edge: OUTPUT s5, stax                ; set desired stax
259  01600                      LOAD s6, 00                    ; put 255 into s5
25A  2D602                      OUTPUT s6, endx                ; set desired stax
25B  2225F                      JUMP finished1                 ; jump to draw_ys

25C                  in_middle:
25C  2D500                      OUTPUT s5, stax                ; set desired stax
25D  1950A                      SUB s5, 0A                     ; subtract the width of block to get the other x coordinate
25E  2D502                      OUTPUT s5, endx                ; set desired endx

25F  2DF01           finished1: OUTPUT sf, stay                ; set desired stay
260  2DF03                      OUTPUT sf, endy                ; set desired endy
261  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

262                             ;;============================================================================
262                             ;; Draws Bottom Line of Block
262                             ;;============================================================================

262  005F0                      LOAD s5, sf                    ; load sF into s5
263  1153C                      ADD s5, 3C                     ; add 40 to s5
264  2D501                      OUTPUT s5, stay                ; set desired stay
265  2D503                      OUTPUT s5, endy                ; set desired endy
266  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

267                             ;;============================================================================
267                             ;; Draws Right Vertical Line of Block
267                             ;;============================================================================

267  2DE00                      OUTPUT se, stax                ; set desired stax
268  2DE02                      OUTPUT se, endx                ; set desired endx
269  2DF01                      OUTPUT sf, stay                ; set desired stay
26A  005F0                      LOAD s5, sf                    ; load sF into s5
26B  1153C                      ADD s5, 3C                     ; add 60 to y coordinate
26C  2D503                      OUTPUT s5, endy                ; set desired endy
26D  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

26E                             ;;============================================================================
26E                             ;; Draws Left Vertical Line of Block
26E                             ;;============================================================================

26E  005E0                      LOAD s5, se                    ; load sE into s5
26F  1950A                      SUB s5, 0A                     ; subtract 10 from s5
270  2D500                      OUTPUT s5, stax                ; set desired stax
271  2D502                      OUTPUT s5, endx                ; set desired endx
272  2DF01                      OUTPUT sf, stay                ; set desired stay
273  005F0                      LOAD s5, sf                    ; load sF into s5
274  1153C                      ADD s5, 3C                     ; add 60 to y coordinate
275  2D503                      OUTPUT s5, endy                ; set desired endy
276  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)
277  25000                      RETURN                         ; finished with draw_block subroutine



278                             ;;============================================================================
278                             ;; Random Block Location - Random Block Location Subroutine
278                             ;;============================================================================

278        random_block_location:
278  1DE00                      COMPARE se, 00                 ; is it time to create a new variable?
279  3227C                      JUMP Z, new_random             ; jump to new random creator
27A  3627B                      JUMP NZ, skip_everything       ; goes back

27B  25000     skip_everything: RETURN                         ; returns back (no new rand. number)

27C  09507          new_random: INPUT s5, prng                 ; create to new random number
27D  1D50F                      COMPARE s5, 0F                 ; check if it's in range
27E  3E280                      JUMP NC, check_other_bound_range ; check lower bound of map
27F  3A27C                      JUMP C, new_random             ; get new variable

280        check_other_bound_range:
280  1D5B4                      COMPARE s5, B4                 ; compare s5 to 180
281  3E27C                      JUMP NC, new_random            ; get a new random number
282  00F50                      LOAD sf, s5                    ; a new y coordinate generated
283  25000                      RETURN                         ; get out of subroutine

284                             ;;============================================================================
284                             ;; Move Helicopter Up - Move Helicopter Up Subroutine
284                             ;;============================================================================

284               move_heli_up:
284  1DC15                      COMPARE sc, 15                 ; check if the helicopter is colliding with top wall
285  36288                      JUMP NZ, decrement             ; if not colliding, then move helicopter appropriately
286  3E288                      JUMP NC, decrement             ; necessary as well
287  25000                      RETURN                         ; do not increment if colliding with top wall
288                  decrement:
288  19C02                      SUB sc, 02                     ; move the helicopter up
289  25000                      RETURN                         ; get out of subroutine

28A                             ;;============================================================================
28A                             ;; Draw Helicopter Cockpit - Draw Helicopter Cockpit Subroutine
28A                             ;;============================================================================

28A        draw_helicopter_cockpit:

28A                             ;;============================================================================
28A                             ;; Draws Cockpit of Helicopter (Line 1a)
28A                             ;;============================================================================

28A                             ;; STARTING POINT
28A  01564                      LOAD s5, 64                    ; load 100 into s5
28B  2D500                      OUTPUT s5, stax                ; set desired stax
28C  006C0                      LOAD s6, sc                    ; load sC into s5
28D  2D601                      OUTPUT s6, stay                ; set desired stay

28E                             ;; ENDING POINT
28E  19501                      SUB s5, 01                     ; subtract 7 from s5
28F  2D502                      OUTPUT s5, endx                ; set desired endx
290  19603                      SUB s6, 03                     ; go up by 5
291  2D603                      OUTPUT s6, endy                ; set desired endy
292  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

293                             ;;============================================================================
293                             ;; Draws Cockpit of Helicopter (Line 1b)
293                             ;;============================================================================

293                             ;; STARTING POINT
293  01564                      LOAD s5, 64                    ; load 100 into s5
294  19501                      SUB s5, 01                     ; subtract 7 from s5
295  2D500                      OUTPUT s5, stax                ; set desired stax
296  006C0                      LOAD s6, sc                    ; load sC into s5
297  19603                      SUB s6, 03                     ; go up by 5
298  2D601                      OUTPUT s6, stay                ; set desired stay

299                             ;; ENDING POINT
299  19504                      SUB s5, 04                     ; subtract 7 from s5
29A  2D502                      OUTPUT s5, endx                ; set desired endx
29B  19602                      SUB s6, 02                     ; go up by 5
29C  2D603                      OUTPUT s6, endy                ; set desired endy
29D  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)


29E                             ;;============================================================================
29E                             ;; Draws Cockpit of Helicopter (Line 2a)
29E                             ;;============================================================================

29E                             ;; STARTING POINT
29E  01564                      LOAD s5, 64                    ; load 100 into s5
29F  2D500                      OUTPUT s5, stax                ; set desired stax
2A0  006C0                      LOAD s6, sc                    ; load sC into s5
2A1  2D601                      OUTPUT s6, stay                ; set desired stay

2A2                             ;; ENDING POINT
2A2  19501                      SUB s5, 01                     ; subtract 1 from s5
2A3  2D502                      OUTPUT s5, endx                ; set desired endx
2A4  11603                      ADD s6, 03                     ; go down by 3
2A5  2D603                      OUTPUT s6, endy                ; set desired endy
2A6  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2A7                             ;;============================================================================
2A7                             ;; Draws Cockpit of Helicopter (Line 2b)
2A7                             ;;============================================================================

2A7                             ;; STARTING POINT
2A7  01564                      LOAD s5, 64                    ; load 100 into s5
2A8  19501                      SUB s5, 01                     ; subtract 1 from s5
2A9  2D500                      OUTPUT s5, stax                ; set desired stax
2AA  006C0                      LOAD s6, sc                    ; load sC into s5
2AB  11603                      ADD s6, 03                     ; go down by 3
2AC  2D601                      OUTPUT s6, stay                ; set desired stay

2AD                             ;; ENDING POINT
2AD  19504                      SUB s5, 04                     ; subtract 7 from s5
2AE  2D502                      OUTPUT s5, endx                ; set desired endx
2AF  11602                      ADD s6, 02                     ; go down by 5
2B0  2D603                      OUTPUT s6, endy                ; set desired endy
2B1  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2B2                             ;;============================================================================
2B2                             ;; Draws Cockpit of Helicopter (Line 3)
2B2                             ;;============================================================================

2B2                             ;; STARTING POINT
2B2  01564                      LOAD s5, 64                    ; load 100 into s5
2B3  19505                      SUB s5, 05                     ; load 7 into s5
2B4  2D500                      OUTPUT s5, stax                ; set desired stax
2B5  006C0                      LOAD s6, sc                    ; load sC into s5
2B6  19605                      SUB s6, 05                     ; go up by 5 using subtraction
2B7  2D601                      OUTPUT s6, stay                ; set desired stay

2B8                             ;; ENDING POINT
2B8  19507                      SUB s5, 07                     ; subtract 5 from s5
2B9  2D502                      OUTPUT s5, endx                ; set desired endx
2BA  11605                      ADD s6, 05                     ; go down by 5
2BB  2D603                      OUTPUT s6, endy                ; set desired endy
2BC  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2BD                             ;;============================================================================
2BD                             ;; Draws Cockpit of Helicopter (Line 4)
2BD                             ;;============================================================================

2BD                             ;; STARTING POINT
2BD  01564                      LOAD s5, 64                    ; load 100 into s5
2BE  19505                      SUB s5, 05                     ; load 7 into s5
2BF  2D500                      OUTPUT s5, stax                ; set desired stax
2C0  006C0                      LOAD s6, sc                    ; load sC into s5
2C1  11605                      ADD s6, 05                     ; go down by 5 using addition
2C2  2D601                      OUTPUT s6, stay                ; set desired stay

2C3                             ;; ENDING POINT
2C3  19507                      SUB s5, 07                     ; subtract 5 from s5
2C4  2D502                      OUTPUT s5, endx                ; set desired endx
2C5  19605                      SUB s6, 05                     ; go back up by 5
2C6  2D603                      OUTPUT s6, endy                ; set desired endy
2C7  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2C8  25000                      RETURN                         ; go back from subroutine

2C9                             ;;============================================================================
2C9                             ;; Draw Helicopter Tail - Draw Helicopter Tail Subroutine
2C9                             ;;============================================================================

2C9        draw_helicopter_tail:

2C9                             ;;============================================================================
2C9                             ;; Draws Tail of Helicopter (Line 1)
2C9                             ;;============================================================================

2C9                             ;; STARTING POINT
2C9  01564                      LOAD s5, 64                    ; load 100 into s5
2CA  1950A                      SUB s5, 0A                     ; subtract 0xA from s5
2CB  2D500                      OUTPUT s5, stax                ; set desired stax
2CC  006C0                      LOAD s6, sc                    ; load sC into s5
2CD  19602                      SUB s6, 02                     ; subtract 2 from s6
2CE  2D601                      OUTPUT s6, stay                ; set desired stay

2CF                             ;; ENDING POINT
2CF  19507                      SUB s5, 07                     ; subtract 7 from s5
2D0  2D502                      OUTPUT s5, endx                ; set desired endx
2D1  2D603                      OUTPUT s6, endy                ; set desired endy
2D2  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2D3                             ;;============================================================================
2D3                             ;; Draws Tail of Helicopter (Line 2)
2D3                             ;;============================================================================

2D3                             ;; STARTING POINT
2D3  01564                      LOAD s5, 64                    ; load 100 into s5
2D4  1950C                      SUB s5, 0C                     ; subtract 0xC from s5
2D5  2D500                      OUTPUT s5, stax                ; set desired stax
2D6  006C0                      LOAD s6, sc                    ; load sC into s5
2D7  2D601                      OUTPUT s6, stay                ; set desired stay

2D8                             ;; ENDING POINT
2D8  19508                      SUB s5, 08                     ; subtract 7 from s5
2D9  2D502                      OUTPUT s5, endx                ; set desired endx
2DA  2D603                      OUTPUT s6, endy                ; set desired endy
2DB  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2DC                             ;;============================================================================
2DC                             ;; Draws Tail of Helicopter (Line 3)
2DC                             ;;============================================================================

2DC                             ;; STARTING POINT
2DC  01564                      LOAD s5, 64                    ; load 100 into s5
2DD  1950A                      SUB s5, 0A                     ; subtract 0x0A from s5
2DE  19508                      SUB s5, 08                     ; subtract 0x10 from s5
2DF  2D500                      OUTPUT s5, stax                ; set desired stax
2E0  006C0                      LOAD s6, sc                    ; load sC into s5
2E1  19602                      SUB s6, 02                     ; subtract 2 from s6
2E2  2D601                      OUTPUT s6, stay                ; set desired stay

2E3                             ;; ENDING POINT
2E3  19502                      SUB s5, 02                     ; subtract 2 from s5
2E4  2D502                      OUTPUT s5, endx                ; set desired endx
2E5  19602                      SUB s6, 02                     ; subtract 2 from s6
2E6  2D603                      OUTPUT s6, endy                ; set desired endy
2E7  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2E8                             ;;============================================================================
2E8                             ;; Draws Tail of Helicopter (Line 4)
2E8                             ;;============================================================================

2E8                             ;; STARTING POINT
2E8  01564                      LOAD s5, 64                    ; load 100 into s5
2E9  1950C                      SUB s5, 0C                     ; subtract 0x0C from s5
2EA  19509                      SUB s5, 09                     ; subtract 0x09 from s5
2EB  2D500                      OUTPUT s5, stax                ; set desired stax
2EC  006C0                      LOAD s6, sc                    ; load sC into s5
2ED  2D601                      OUTPUT s6, stay                ; set desired stay

2EE                             ;; ENDING POINT
2EE                             ;SUB s5, 01                          ; subtract 2 from s5
2EE  2D502                      OUTPUT s5, endx                ; set desired endx
2EF  11601                      ADD s6, 01                     ; add 1 to s6
2F0  2D603                      OUTPUT s6, endy                ; set desired endy
2F1  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2F2                             ;;============================================================================
2F2                             ;; Draws Tail of Helicopter (Line 5)
2F2                             ;;============================================================================

2F2                             ;; STARTING POINT
2F2  01564                      LOAD s5, 64                    ; load 100 into s5
2F3  1950A                      SUB s5, 0A                     ; subtract 0x0A from s5
2F4  1950A                      SUB s5, 0A                     ; subtract 0x0A from s5
2F5  2D500                      OUTPUT s5, stax                ; set desired stax
2F6  006C0                      LOAD s6, sc                    ; load sC into s5
2F7  19604                      SUB s6, 04                     ; subtract 4 from s6
2F8  2D601                      OUTPUT s6, stay                ; set desired stay

2F9                             ;; ENDING POINT
2F9  2D502                      OUTPUT s5, endx                ; set desired endx
2FA  11605                      ADD s6, 05                     ; add 1 to s6
2FB  2D603                      OUTPUT s6, endy                ; set desired endy
2FC  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

2FD  25000                      RETURN                         ; go back from subroutine

2FE                             ;;============================================================================
2FE                             ;; Draw Helicopter Blades - Draw Helicopter Blades Subroutine
2FE                             ;;============================================================================

2FE        draw_helicopter_blades:

2FE                             ;;============================================================================
2FE                             ;; Draws Blades of Helicopter (Line 1)
2FE                             ;;============================================================================

2FE                             ;; STARTING POINT
2FE  01564                      LOAD s5, 64                    ; load 100 into s5
2FF  19505                      SUB s5, 05                     ; subtract 0xA from s5
300  2D500                      OUTPUT s5, stax                ; set desired stax
301  006C0                      LOAD s6, sc                    ; load sC into s5
302  19605                      SUB s6, 05                     ; subtract 2 from s6
303  2D601                      OUTPUT s6, stay                ; set desired stay

304                             ;; ENDING POINT
304  2D502                      OUTPUT s5, endx                ; set desired endx
305  19602                      SUB s6, 02                     ; subtract 2 from s6
306  2D603                      OUTPUT s6, endy                ; set desired endy
307  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

308                             ;;============================================================================
308                             ;; Draws Blades of Helicopter (Line 2)
308                             ;;============================================================================

308                             ;; STARTING POINT
308  01564                      LOAD s5, 64                    ; load 100 into s5
309  2D500                      OUTPUT s5, stax                ; set desired stax
30A  006C0                      LOAD s6, sc                    ; load sC into s5
30B  19607                      SUB s6, 07                     ; subtract 2 from s6
30C  2D601                      OUTPUT s6, stay                ; set desired stay

30D                             ;; ENDING POINT
30D  1950A                      SUB s5, 0A                     ; subtract 10 from s5
30E  2D502                      OUTPUT s5, endx                ; set desired endx
30F  2D603                      OUTPUT s6, endy                ; set desired endy
310  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)

311  25000                      RETURN                         ; go back from subroutine

312                             ;;============================================================================
312                             ;; Draw Helicopter Smoke - Draw Helicopter Smoke Subroutine
312                             ;;============================================================================

312        draw_helicopter_smoke:

312                             ;;============================================================================
312                             ;; Draws Smoke of Helicopter (Line 1)
312                             ;;============================================================================

312                             ;; Start Point
312  01564                      LOAD s5, 64                    ; load 100 into s5
313  19528                      SUB s5, 28                     ; position starting smoke right point of line 1
314  2D500                      OUTPUT s5, stax                ; output to starting x position of line 1

315  006C0                      LOAD s6, sc                    ; load helicopter smoke vertical position for line 1
316  2D601                      OUTPUT s6, stay                ; output to starting y position of line 1
317                             ;;

317                             ;; End Point
317  19504                      SUB s5, 04                     ; position starting smoke left point of line 1
318  2D502                      OUTPUT s5, endx                ; output to starting y position of line 1

319  2D603                      OUTPUT s6, endy                ; output to ending y position of line 1, matching helicopter
31A  2033A                      CALL old_draw_line             ;draws a line (careful: this subroutine overwrites s5)
31B                             ;;

31B                             ;;============================================================================
31B                             ;; Draws Smoke of Helicopter (Line 2)
31B                             ;;============================================================================

31B                             ;; Start Point
31B  01564                      LOAD s5, 64                    ; load 100 into s5
31C  19534                      SUB s5, 34                     ; position starting smoke right point of line 2
31D  2D500                      OUTPUT s5, stax                ; output to starting x position of line 2

31E  006C0                      LOAD s6, sc                    ; load starting smoke vertical position for line 2
31F  11604                      ADD s6, 04                     ; add 4 to s6 (shift down by 4)
320  2D601                      OUTPUT s6, stay                ; output to starting y position of line 2
321                             ;;

321                             ;; End Point
321  19504                      SUB s5, 04                     ; subtract s5 by 4 for length of line
322  2D502                      OUTPUT s5, endx                ; output to endx

323  2D603                      OUTPUT s6, endy                ; outputs vertical locaton of smoke line 2
324  2033A                      CALL old_draw_line             ;draws a line (careful: this subroutine overwrites s5)
325                             ;;

325                             ;;============================================================================
325                             ;; Draws Smoke of Helicopter (Line 3)
325                             ;;============================================================================

325                             ;; Start Point
325  01564                      LOAD s5, 64                    ; load 100 into s5
326  19540                      SUB s5, 40                     ; position starting smoke right point of line 3
327  2D500                      OUTPUT s5, stax                ; output to starting x position of line 3

328  006C0                      LOAD s6, sc                    ; load starting smoke vertical position for line 3
329  19604                      SUB s6, 04                     ; add 4 to s6 (shift down by 4)
32A  2D601                      OUTPUT s6, stay                ; output to starting y position of line 3
32B                             ;;

32B                             ;; End Point
32B  19504                      SUB s5, 04                     ; subtract s5 by 4 for length of line
32C  2D502                      OUTPUT s5, endx                ; output to endx

32D  2D603                      OUTPUT s6, endy                ; output same y position of line 3
32E  2033A                      CALL old_draw_line             ; draws a line (careful: this subroutine overwrites s5)
32F                             ;;

32F  25000                      RETURN                         ; go back to subroutine



330                             ;;============================================================================
330                             ;; Draw Line - Draw Line Subroutine
330                             ;;============================================================================

330  2D000           draw_line: OUTPUT s0, stax                ; write stax
331  2D101                      OUTPUT s1, stay                ; write stay
332  2D202                      OUTPUT s2, endx                ; write endx
333  2D303                      OUTPUT s3, endy                ; write endy
334  01501                      LOAD s5, busy_go               ; load go command
335  2D504                      OUTPUT s5, busy                ; send go command
336  09504                wait: INPUT s5, busy                 ; read busy status
337  1D501                      COMPARE s5, busy_go            ; check busy status
338  32336                      JUMP Z, wait                   ; if busy, wait more
339  25000                      RETURN                         ; leave line drawing subroutine

33A                             ;;============================================================================
33A                             ;; Old Draw Line - Old Draw Line Subroutine (WILL DELETE LATER)
33A                             ;;============================================================================

33A              old_draw_line:
33A  01501                      LOAD s5, busy_go               ; load go command
33B  2D504                      OUTPUT s5, busy                ; send go command
33C  09504               wait0: INPUT s5, busy                 ; read busy status
33D  1D501                      COMPARE s5, busy_go            ; check busy status
33E  3233C                      JUMP Z, wait0                  ; if busy, wait more
33F  25000                      RETURN                         ; leave line drawing subroutine

340                             ;;============================================================================
340                             ;; Check Collisions - Check Collisions Subroutine
340                             ;;============================================================================

340            check_collision:
340                             ;;============================================================================
340                             ;; Check Collisions with Map (top wall)
340                             ;;============================================================================
340  01560                      LOAD s5, 60                    ; position of heli/wall collision
341  0180F                      LOAD s8, 0F                    ; top wall vertical coordinate (15)
342  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
343  1960A                      SUB s6, 0A                     ; the helicopter's blades 10 pixels higher
344  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
345  1C860                      COMPARE s8, s6                 ; check if the two intersect
346  32361                      JUMP Z, collision_occurred     ; jump to collision occurred
347  3E361                      JUMP NC, collision_occurred    ; jump to collision occurred (necessary)

348                             ;;============================================================================
348                             ;; Check Collisions with Map (bottom wall)
348                             ;;============================================================================
348  018F0                      LOAD s8, F0                    ; bottom wall vertical coordinate (240)
349  006C0                      LOAD s6, sc                    ; get vertical position of helicopter
34A  11605                      ADD s6, 05                     ; the helicopter's bottom is 5 pixels below
34B  00760                      LOAD s7, s6                    ; used later for drawing the "spark"
34C  1C860                      COMPARE s8, s6                 ; check if the two intersect
34D  32361                      JUMP Z, collision_occurred     ; jump to collision occurred

34E                             ;;============================================================================
34E                             ;; Check Collisions with Block
34E                             ;;============================================================================

34E  005E0                      LOAD s5, se                    ; get current horizontal position of block
34F  1950A                      SUB s5, 0A                     ; actual block is 10 pixels back
350  1D564                      COMPARE s5, 64                 ; check if s5 coincides with heli (horizontal check)
351  32353                      JUMP Z, check_vertical         ; jump to check vertical positioning
352  3635D                      JUMP NZ, no_collision          ; jump to no_collision routine

353             check_vertical:
353  006F0                      LOAD s6, sf                    ; get current vertical position of block
354  007C0                      LOAD s7, sc                    ; load helicopter front position
355  1C760                loop: COMPARE s7, s6                 ; compare s7 and s6
356  32361                      JUMP Z, collision_occurred     ; jump to collision_occured
357  11601                      ADD s6, 01                     ; add one to s6
358  008F0                      LOAD s8, sf                    ; load original value for reference only
359  1183C                      ADD s8, 3c                     ; add 60 to s8
35A  1C680                      COMPARE s6, s8                 ; compare s6 to bottom of block (s8)
35B  3235D                      JUMP Z, no_collision           ; jump to no_collision routine
35C  36355                      JUMP NZ, loop                  ; keep looping

35D  19E01        no_collision: SUB se, 01                     ; decrement sE
35E  11C01                      ADD sc, 01                     ; increment sC
35F  2036A                      CALL distance                  ; used for keeping the score (increments distance)
360  25000                      RETURN                         ; leave, since no collisions occurred

361         collision_occurred:
361  2D500                      OUTPUT s5, stax                ; set desired stax
362  2D701                      OUTPUT s7, stay                ; set desired stay
363  09807                      INPUT s8, prng                 ; load random endx
364  2D802                      OUTPUT s8, endx                ; set random endx
365  09807                      INPUT s8, prng                 ; load random endy
366  2D803                      OUTPUT s8, endy                ; set random endy
367  20330                      CALL draw_line                 ; draw random line

368  01902                      LOAD s9, GAMEOVER_STATE        ; should go to gameover state instead
369  25000                      RETURN                         ; return from routine without any increments

36A                             ;;============================================================================
36A                             ;; Distance - Distance Subroutine
36A                             ;;============================================================================

36A  2DB0A            distance: OUTPUT sb, qssd_lo             ; put distance value to qssd
36B  1DBFF                      COMPARE sb, FF                 ; check if max (FF) was reached
36C  3236F                      JUMP Z, distance2              ; jump to distance2
36D  11B01                      ADD sb, one                    ; increment distance value
36E  25000                      RETURN                         ; finished with distance subroutine

36F  11A01           distance2: ADD sa, one                    ; add one to the next degree
370  01B00                      LOAD sb, zero                  ; reset sB
371  2DB0A                      OUTPUT sb, qssd_lo             ; put distance value to qssd
372  2DA0B                      OUTPUT sa, qssd_hi             ; put distance value to qssd
373  25000                      RETURN                         ; finished with distance subroutine

7FF                             ;;============================================================================
7FF                             ;; Interrupt - Vector.
7FF                             ;;============================================================================

7FF                             ADDRESS 7FF                    ; must be located here
7FF  22012          isr_vector: JUMP isr                       ; always jump to isr

800                             ;;============================================================================
800                             ;;
800                             ;;============================================================================


PSM files that have been assembled
----------------------------------
    /home/adnan/Documents/School/EE178/fpga_video_game/latest_fpga_video_game/software/software.psm


List of defined constants
-------------------------
   CONSTANT name      Value  Source PSM file
   -------------      -----  ---------------
   BEL                07
   BS                 08
   CR                 0D
   CREDITS_STATE      03     software.psm
   DCS                90
   DEL                7F
   ESC                1B
   GAMEOVER_STATE     02     software.psm
   HT                 09
   LF                 0A
   NUL                00
   PLAY_STATE         01     software.psm
   ST                 9C
   START_STATE        00     software.psm
   VT                 0B
   beam               05     software.psm
   beam_hi            0f     software.psm
   beam_lo            03     software.psm
   beam_md            07     software.psm
   busy               04     software.psm
   busy_go            01     software.psm
   buttons            0f     software.psm
   buttons_ct         10     software.psm
   buttons_dn         04     software.psm
   buttons_lf         02     software.psm
   buttons_rt         01     software.psm
   buttons_up         08     software.psm
   datestamp_day      1E
   datestamp_month    0B
   datestamp_year     0F
   endx               02     software.psm
   endy               03     software.psm
   leds_hi            09     software.psm
   leds_lo            08     software.psm
   mode               06     software.psm
   mode_clr           01     software.psm
   mode_exp           03     software.psm
   mode_hld           00     software.psm
   mode_lin           02     software.psm
   one                01     software.psm
   prng               07     software.psm
   qssd_dp            0c     software.psm
   qssd_hi            0b     software.psm
   qssd_lo            0a     software.psm
   stax               00     software.psm
   stay               01     software.psm
   switches_hi        0e     software.psm
   switches_lo        0d     software.psm
   timestamp_hours    16
   timestamp_minutes  21
   timestamp_seconds  35
   zero               00     software.psm


  No tables defined


List of text strings
--------------------
   STRING name  Value          Source PSM file
   -----------  -----          ---------------
   datestamp$   "30 Nov 2015"
   timestamp$   "22:33:53"


List of line labels
-------------------
    Label                    Addr  Source PSM file
 --------                    ----  ---------------
 *  boot                     000   software.psm
    check_collision          340   software.psm
    check_other_bound_range  280   software.psm
    check_vertical           353   software.psm
    collision_occurred       361   software.psm
    decrement                288   software.psm
    distance                 36A   software.psm
    distance2                36F   software.psm
    draw_block               24B   software.psm
    draw_helicopter          246   software.psm
    draw_helicopter_blades   2FE   software.psm
    draw_helicopter_cockpit  28A   software.psm
    draw_helicopter_smoke    312   software.psm
    draw_helicopter_tail     2C9   software.psm
    draw_line                330   software.psm
    enter_play_state         01F   software.psm
    enter_play_state2        027   software.psm
    finished1                25F   software.psm
    gameover                 022   software.psm
    in_middle                25C   software.psm
    isr                      012   software.psm
 *  isr_vector               7FF   software.psm
    left_edge                258   software.psm
    loop                     355   software.psm
    main                     011   software.psm
    map                      03C   software.psm
    move_heli_up             284   software.psm
    new_random               27C   software.psm
    no_collision             35D   software.psm
    old_draw_line            33A   software.psm
    play                     032   software.psm
    random_block_location    278   software.psm
    right_edge               254   software.psm
    skip_everything          27B   software.psm
    start                    019   software.psm
    start_screen             047   software.psm
    stay_in_gameover_state   031   software.psm
    stay_in_start_state      021   software.psm
    wait                     336   software.psm
    wait0                    33C   software.psm

       * Unreferenced label(s)


List of pragma blocks
---------------------
   Name  Addr range  Value
   ----  ----------  -----


Instruction usage statistics
----------------------------
   Instruction  Instances
   -----------  ---------
   ADD          17
   ADDCY        -
   AND          -
   CALL         125
   CALL@        -
   COMPARE      20
   COMPARECY    -
   DISABLE      -
   ENABLE       1
   FETCH        -
   HWBUILD      -
   INPUT        11
   JUMP         30
   JUMP@        -
   LOAD         417
   LOAD&RETURN  -
   OR           -
   OUTPUT       191
   OUTPUTK      -
   REGBANK      -
   RETURN       23
   RETURNI      1
   RL           -
   RR           -
   SL0          -
   SL1          -
   SLA          -
   SLX          -
   SR0          -
   SR1          -
   SRA          -
   SRX          -
   STAR         -
   STORE        -
   SUB          49
   SUBCY        -
   TEST         -
   TESTCY       -
   XOR          -
