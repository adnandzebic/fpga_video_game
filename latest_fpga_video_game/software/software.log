KCPSM6 Assembler log file for program 'C:\Users\hpm\Desktop\fpga_video_game\latest_fpga_video_game\software\software.psm'.
Generated by KCPSM6 version v2.51
Ken Chapman - Xilinx Ltd - 29th May 2013

Assembly datestamp: 01 Dec 2015
Assembly timestamp: 17:53:15

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 7FF hex
Nominal program memory size: 2K (2048)   address(10:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 1019
Memory locations available: 3077


Assembly listing

 Addr Code                            Instruction

 000                                  ;;============================================================================
 000                                  ;; File: software.psm
 000                                  ;; This is the PicoBlaze program for EE178 Lab #8.
 000                                  ;;============================================================================
 000                                  ;;============================================================================
 000                                  ;; Port address declarations.
 000                                  ;;============================================================================
 000                                  CONSTANT stax, 00                     ; port for 8-bit start-x
 000                                  CONSTANT stay, 01                     ; port for 8-bit start-y
 000                                  CONSTANT endx, 02                     ; port for 8-bit end-x
 000                                  CONSTANT endy, 03                     ; port for 8-bit end-y
 000                                  CONSTANT busy, 04                     ; port for 8-bit busy
 000                                  CONSTANT beam, 05                     ; port for 8-bit beam
 000                                  CONSTANT mode, 06                     ; port for 8-bit mode
 000                                  CONSTANT prng, 07                     ; port for 8-bit prng
 000                                  CONSTANT leds_lo, 08                  ; port for 8-bit led data out
 000                                  CONSTANT leds_hi, 09                  ; port for 8-bit led data out
 000                                  CONSTANT qssd_lo, 0A                  ; port for 8-bit qssd data out
 000                                  CONSTANT qssd_hi, 0B                  ; port for 8-bit qssd data out
 000                                  CONSTANT qssd_dp, 0C                  ; port for 8-bit qssd data out
 000                                  CONSTANT switches_lo, 0D              ; port for 8-bit switch input
 000                                  CONSTANT switches_hi, 0E              ; port for 8-bit switch input
 000                                  CONSTANT buttons, 0F                  ; port for 8-bit button input
 000                                  CONSTANT zero, 00                     ; zero
 000                                  CONSTANT one, 01                      ; one
 000                                  CONSTANT busy_go, 01                  ; go command and busy status
 000                                  CONSTANT beam_hi, 0F                  ; beam high intensity
 000                                  CONSTANT beam_md, 07                  ; beam med intensity
 000                                  CONSTANT beam_lo, 03                  ; beam low intensity
 000                                  CONSTANT mode_hld, 00                 ; mode hold framebuffer
 000                                  CONSTANT mode_clr, 01                 ; mode clear framebuffer
 000                                  CONSTANT mode_lin, 02                 ; mode linear decay
 000                                  CONSTANT mode_exp, 03                 ; mode exponential decay
 000                                  CONSTANT buttons_ct, 10               ; center
 000                                  CONSTANT buttons_up, 08               ; up
 000                                  CONSTANT buttons_dn, 04               ; down
 000                                  CONSTANT buttons_lf, 02               ; left
 000                                  CONSTANT buttons_rt, 01               ; right
 000                                  ;;============================================================================
 000                                  ;; Macro State declarations
 000                                  ;;============================================================================
 000                                  CONSTANT START_STATE, 00              ; start screen state
 000                                  CONSTANT PLAY_STATE, 01               ; play state
 000                                  CONSTANT GAMEOVER_STATE, 02           ; game over screen state
 000                                  CONSTANT CREDITS_STATE, 03            ; credits screen state (not used for now)
 000                                  ;;============================================================================
 000                                  ;; Boot.
 000                                  ;;============================================================================
 000  01000                     boot: LOAD s0, 00[zero]                     ; initialize
 001  01100                           LOAD s1, 00[zero]                     ; initialize
 002  01200                           LOAD s2, 00[zero]                     ; initialize
 003  01300                           LOAD s3, 00[zero]                     ; initialize
 004  01400                           LOAD s4, 00[zero]                     ; initialize
 005  01900                           LOAD s9, 00[START_STATE]              ; initial state is to enter start screen
 006  01A00                           LOAD sA, 00                           ; initial distance (score)
 007  01B00                           LOAD sB, 00                           ; initial distance (score)
 008  01C80                           LOAD sC, 80                           ; starting helicopter position
 009  01D05                           LOAD sD, 05                           ; initialize (needed later)
 00A  01EFF                           LOAD sE, FF                           ; load 255 into sE (horizontal coordinate of block)
 00B  01F62                           LOAD sF, 62                           ; load 108 into sF (vertical coordinate of block)
 00C  01503                           LOAD s5, 03[mode_exp]                 ; load desired mode
 00D  2D506                           OUTPUT s5, 06[mode]                   ; set desired mode
 00E  0150F                           LOAD s5, 0F[beam_hi]                  ; load desired beam
 00F  2D505                           OUTPUT s5, 05[beam]                   ; set desired beam
 010  28001                           ENABLE INTERRUPT                      ; enable interrupts
 011                                  ;;============================================================================
 011                                  ;; Main.
 011                                  ;;============================================================================
 011                            main: 
 011  22011                           JUMP 011[main]                        ; go back and repeat
 012                                  ;;============================================================================
 012                                  ;; Interrupt - Service Routine.
 012                                  ;;============================================================================
 012  1D900                      isr: COMPARE s9, 00[START_STATE]           ; check if in the start state
 013  30019                           CALL Z, 019[start]                    ; call the start screen state
 014  1D901                           COMPARE s9, 01[PLAY_STATE]            ; check if in the play state
 015  30032                           CALL Z, 032[play]                     ; call play subroutine
 016  1D902                           COMPARE s9, 02[GAMEOVER_STATE]        ; check if in the gameover state
 017  30022                           CALL Z, 022[gameover]                 ; call the gameover subroutine
 018  29001                           RETURNI ENABLE                        ; done with isr
 019                                  ;;============================================================================
 019                                  ;; Start - Start Subroutine
 019                                  ;;============================================================================
 019  0950F                    start: INPUT s5, 0F[buttons]                 ; get center button values
 01A  20047                           CALL 047[start_screen]                ; draw the map using map subroutine
 01B  0950F                           INPUT s5, 0F[buttons]                 ; get button values
 01C  1D510                           COMPARE s5, 10[buttons_ct]            ; check if center button is pressed
 01D  3201F                           JUMP Z, 01F[enter_play_state]         ; jump to enter_play_state
 01E  36021                           JUMP NZ, 021[stay_in_start_state]     ; remain in current state with a jump to stay_in_start_state
 01F                enter_play_state: 
 01F  01901                           LOAD s9, 01[PLAY_STATE]               ; load play_state and enter play mode
 020  25000                           RETURN                                ; return from start subroutine
 021             stay_in_start_state: 
 021  25000                           RETURN                                ; return from start subroutine
 022                                  ;;============================================================================
 022                                  ;; Game Over - Game Over Subroutine
 022                                  ;;============================================================================
 022  0950F                 gameover: INPUT s5, 0F[buttons]                 ; get center button values
 023                                  ;CALL map                            ; draw the map using map subroutine
 023  0950F                           INPUT s5, 0F[buttons]                 ; get button values
 024  1D508                           COMPARE s5, 08[buttons_up]            ; check if up button is pressed
 025  32027                           JUMP Z, 027[enter_play_state2]        ; jump to enter_play_state2
 026  36031                           JUMP NZ, 031[stay_in_gameover_state]  ; remain in current state with a jump to stay_in_gameover_state
 027               enter_play_state2: 
 027  01901                           LOAD s9, 01[PLAY_STATE]               ; load play_state and enter play mode
 028                                  ;; RESET EVERYTHING BEFORE RETURNING
 028  01A00                           LOAD sA, 00                           ; initial distance (score)
 029  01B00                           LOAD sB, 00                           ; initial distance (score)
 02A  2DB0A                           OUTPUT sB, 0A[qssd_lo]                ; reset qssd_lo
 02B  2DA0B                           OUTPUT sA, 0B[qssd_hi]                ; reset qssd_hi
 02C  01C80                           LOAD sC, 80                           ; starting helicopter position
 02D  01D05                           LOAD sD, 05                           ; initialize (needed later)
 02E  01EFF                           LOAD sE, FF                           ; load 255 into sE (horizontal coordinate of block)
 02F  01F62                           LOAD sF, 62                           ; load 108 into sF (vertical coordinate of block)
 030  25000                           RETURN                                ; return from start subroutine
 031          stay_in_gameover_state: 
 031  25000                           RETURN                                ; return from start subroutine
 032                                  ;;============================================================================
 032                                  ;; Play - Play Subroutine
 032                                  ;;============================================================================
 032  0950F                     play: INPUT s5, 0F[buttons]                 ; get center button values
 033  2003C                           CALL 03C[map]                         ; draw the map using map subroutine
 034  0950F                           INPUT s5, 0F[buttons]                 ; get button values
 035  1D510                           COMPARE s5, 10[buttons_ct]            ; check if center button is pressed
 036  302C1                           CALL Z, 2C1[move_heli_up]             ; call subroutine that moves the helicopter up
 037  20282                           CALL 282[draw_helicopter]             ; draw the helicopter
 038  202B3                           CALL 2B3[random_block_location]       ; determines a random place for the block (y direction only)
 039  20286                           CALL 286[draw_block]                  ; draw the block using draw_block subroutine
 03A  2037D                           CALL 37D[check_collision]             ; check if any collisions happen
 03B  25000                           RETURN                                ; finished with play subroutine
 03C                                  ;;============================================================================
 03C                                  ;; Map - Draw Map Subroutine
 03C                                  ;;============================================================================
 03C                             map: 
 03C                                  ;;============================================================================
 03C                                  ;; Draws Top Line of Map (Line 1)
 03C                                  ;;============================================================================
 03C  01000                           LOAD s0, 00                           ; load 00 into s0
 03D  0110F                           LOAD s1, 0F                           ; load 0F into s1
 03E  012FF                           LOAD s2, FF                           ; load FF into s2
 03F  0130F                           LOAD s3, 0F                           ; load 0F into s3
 040  2036D                           CALL 36D[draw_line]                   ; draws the line
 041                                  ;;============================================================================
 041                                  ;; Draws Bottom Line of Map (Line 2)
 041                                  ;;============================================================================
 041  01000                           LOAD s0, 00                           ; load 00 into s0
 042  011F0                           LOAD s1, F0                           ; load 0F into s1
 043  012FF                           LOAD s2, FF                           ; load FF into s2
 044  013F0                           LOAD s3, F0                           ; load F0 into s3
 045  2036D                           CALL 36D[draw_line]                   ; draws the line
 046  25000                           RETURN                                ; go back from drawing map
 047                                  ;;============================================================================
 047                                  ;; Start Screen - Draw Start Screen Subroutine
 047                                  ;;============================================================================
 047                    start_screen: 
 047                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 047                                  ;; Code for PRESS START [START MENU] ;;
 047                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 047                                  ;;;;;;;;;;;;;;;
 047                                  ;;BEGIN PRESS;;
 047                                  ;;;;;;;;;;;;;;;
 047                                  ;; LINE 1 (LEFT) FOR P
 047  01041                           LOAD s0, 41                           ; stax 65
 048  011C8                           LOAD s1, C8                           ; stay 200
 049  01241                           LOAD s2, 41                           ; endx 65
 04A  013D2                           LOAD s3, D2                           ; endy 210
 04B  2036D                           CALL 36D[draw_line]                   ;
 04C                                  ;; LINE 2 (TOP) FOR P
 04C  01041                           LOAD s0, 41                           ; stax 65
 04D  011C8                           LOAD s1, C8                           ; stay 200
 04E  01246                           LOAD s2, 46                           ; endx 70
 04F  013C8                           LOAD s3, C8                           ; endy 200
 050  2036D                           CALL 36D[draw_line]                   ;
 051                                  ;; LINE 3 (RIGHT) FOR P
 051  01046                           LOAD s0, 46                           ; stax 70
 052  011C8                           LOAD s1, C8                           ; stay 200
 053  01246                           LOAD s2, 46                           ; endx 70
 054  013CD                           LOAD s3, CD                           ; endy 205
 055  2036D                           CALL 36D[draw_line]                   ;
 056                                  ;; LINE 4 (MIDDLE) FOR P
 056  01041                           LOAD s0, 41                           ; stax 65
 057  011CD                           LOAD s1, CD                           ; stay 205
 058  01246                           LOAD s2, 46                           ; endx 70
 059  013CD                           LOAD s3, CD                           ; endy 205
 05A  2036D                           CALL 36D[draw_line]                   ;
 05B                                  ;; LINE 1 (LEFT) FOR R
 05B  0104B                           LOAD s0, 4B                           ; stax 75
 05C  011C8                           LOAD s1, C8                           ; stay 200
 05D  0124B                           LOAD s2, 4B                           ; endx 75
 05E  013D2                           LOAD s3, D2                           ; endy 210
 05F  2036D                           CALL 36D[draw_line]                   ;
 060                                  ;; LINE 2 (TOP) FOR R
 060  0104B                           LOAD s0, 4B                           ; stax 75
 061  011C8                           LOAD s1, C8                           ; stay 200
 062  01250                           LOAD s2, 50                           ; endx 80
 063  013C8                           LOAD s3, C8                           ; endy 200
 064  2036D                           CALL 36D[draw_line]                   ;
 065                                  ;; LINE 3 (RIGHT) FOR R
 065  01050                           LOAD s0, 50                           ; stax 80
 066  011C8                           LOAD s1, C8                           ; stay 200
 067  01250                           LOAD s2, 50                           ; endx 80
 068  013CD                           LOAD s3, CD                           ; endy 205
 069  2036D                           CALL 36D[draw_line]                   ;
 06A                                  ;; LINE 4 (MIDDLE) FOR R
 06A  0104B                           LOAD s0, 4B                           ; stax 75
 06B  011CD                           LOAD s1, CD                           ; stay 205
 06C  01250                           LOAD s2, 50                           ; endx 80
 06D  013CD                           LOAD s3, CD                           ; endy 205
 06E  2036D                           CALL 36D[draw_line]                   ;
 06F                                  ;; LINE 5 (ANGLED) FOR R
 06F  0104B                           LOAD s0, 4B                           ; stax 75
 070  011CD                           LOAD s1, CD                           ; stay 205
 071  01250                           LOAD s2, 50                           ; endx 80
 072  013D2                           LOAD s3, D2                           ; endy 210
 073  2036D                           CALL 36D[draw_line]                   ;
 074                                  ;; LINE 6 (ANGLED2) FOR R
 074  0104B                           LOAD s0, 4B                           ; stax 75
 075  011CE                           LOAD s1, CE                           ; stay 204
 076  0124F                           LOAD s2, 4F                           ; endx 79
 077  013D2                           LOAD s3, D2                           ; endy 210
 078  2036D                           CALL 36D[draw_line]                   ;
 079                                  ;; LINE 1 (LEFT) FOR E
 079  01055                           LOAD s0, 55                           ; stax 85
 07A  011C8                           LOAD s1, C8                           ; stay 200
 07B  01255                           LOAD s2, 55                           ; endx 85
 07C  013D2                           LOAD s3, D2                           ; endy 210
 07D  2036D                           CALL 36D[draw_line]                   ;
 07E                                  ;; LINE 2 (TOP) FOR E
 07E  01055                           LOAD s0, 55                           ; stax 85
 07F  011C8                           LOAD s1, C8                           ; stay 200
 080  0125A                           LOAD s2, 5A                           ; endx 90
 081  013C8                           LOAD s3, C8                           ; endy 200
 082  2036D                           CALL 36D[draw_line]                   ;
 083                                  ;; LINE 3 (MIDDLE) FOR E
 083  01055                           LOAD s0, 55                           ; stax 85
 084  011CD                           LOAD s1, CD                           ; stay 205
 085  0125A                           LOAD s2, 5A                           ; endx 90
 086  013CD                           LOAD s3, CD                           ; endy 205
 087  2036D                           CALL 36D[draw_line]                   ;
 088                                  ;; LINE 4 (BOTTOM) FOR E
 088  01055                           LOAD s0, 55                           ; stax 85
 089  011D2                           LOAD s1, D2                           ; stay 210
 08A  0125A                           LOAD s2, 5A                           ; endx 90
 08B  013D2                           LOAD s3, D2                           ; endy 210
 08C  2036D                           CALL 36D[draw_line]                   ;
 08D                                  ;; LINE 1 (TOP) FOR S1
 08D  0105F                           LOAD s0, 5F                           ; stax 95
 08E  011C8                           LOAD s1, C8                           ; stay 200
 08F  01264                           LOAD s2, 64                           ; endx 100
 090  013C8                           LOAD s3, C8                           ; endy 200
 091  2036D                           CALL 36D[draw_line]                   ;
 092                                  ;; LINE 2 (TOPLEFT) FOR S1
 092  0105F                           LOAD s0, 5F                           ; stax 95
 093  011C8                           LOAD s1, C8                           ; stay 200
 094  0125F                           LOAD s2, 5F                           ; endx 95
 095  013CD                           LOAD s3, CD                           ; endy 205
 096  2036D                           CALL 36D[draw_line]                   ;
 097                                  ;; LINE 3 (MIDDLE) FOR S1
 097  0105F                           LOAD s0, 5F                           ; stax 95
 098  011CD                           LOAD s1, CD                           ; stay 205
 099  01264                           LOAD s2, 64                           ; endx 100
 09A  013CD                           LOAD s3, CD                           ; endy 205
 09B  2036D                           CALL 36D[draw_line]                   ;
 09C                                  ;; LINE 4 (BOTTOMRIGHT) FOR S1
 09C  01064                           LOAD s0, 64                           ; stax 100
 09D  011CD                           LOAD s1, CD                           ; stay 205
 09E  01264                           LOAD s2, 64                           ; endx 100
 09F  013D2                           LOAD s3, D2                           ; endy 210
 0A0  2036D                           CALL 36D[draw_line]                   ;
 0A1                                  ;; LINE 5 (BOTTOM) FOR S1
 0A1  0105F                           LOAD s0, 5F                           ; stax 95
 0A2  011D2                           LOAD s1, D2                           ; stay 210
 0A3  01264                           LOAD s2, 64                           ; endx 100
 0A4  013D2                           LOAD s3, D2                           ; endy 210
 0A5  2036D                           CALL 36D[draw_line]                   ;
 0A6                                  ;; LINE 1 (TOP) FOR S2
 0A6  01069                           LOAD s0, 69                           ; stax 105
 0A7  011C8                           LOAD s1, C8                           ; stay 200
 0A8  0126E                           LOAD s2, 6E                           ; endx 110
 0A9  013C8                           LOAD s3, C8                           ; endy 200
 0AA  2036D                           CALL 36D[draw_line]                   ;
 0AB                                  ;; LINE 2 (TOPLEFT) FOR S2
 0AB  01069                           LOAD s0, 69                           ; stax 105
 0AC  011C8                           LOAD s1, C8                           ; stay 200
 0AD  01269                           LOAD s2, 69                           ; endx 105
 0AE  013CD                           LOAD s3, CD                           ; endy 205
 0AF  2036D                           CALL 36D[draw_line]                   ;
 0B0                                  ;; LINE 3 (MIDDLE) FOR S2
 0B0  01069                           LOAD s0, 69                           ; stax 105
 0B1  011CD                           LOAD s1, CD                           ; stay 205
 0B2  0126E                           LOAD s2, 6E                           ; endx 110
 0B3  013CD                           LOAD s3, CD                           ; endy 205
 0B4  2036D                           CALL 36D[draw_line]                   ;
 0B5                                  ;; LINE 4 (BOTTOMRIGHT) FOR S2
 0B5  0106E                           LOAD s0, 6E                           ; stax 110
 0B6  011CD                           LOAD s1, CD                           ; stay 205
 0B7  0126E                           LOAD s2, 6E                           ; endx 110
 0B8  013D2                           LOAD s3, D2                           ; endy 210
 0B9  2036D                           CALL 36D[draw_line]                   ;
 0BA                                  ;; LINE 5 (BOTTOM) FOR S2
 0BA  01069                           LOAD s0, 69                           ; stax 105
 0BB  011D2                           LOAD s1, D2                           ; stay 210
 0BC  0126E                           LOAD s2, 6E                           ; endx 110
 0BD  013D2                           LOAD s3, D2                           ; endy 210
 0BE  2036D                           CALL 36D[draw_line]                   ;
 0BF                                  ;;;;;;;;;;;;;;;
 0BF                                  ;;BEGIN START;;
 0BF                                  ;;;;;;;;;;;;;;;
 0BF                                  ;; LINE 1 (TOP) FOR S
 0BF  01082                           LOAD s0, 82                           ; stax 130
 0C0  011C8                           LOAD s1, C8                           ; stay 200
 0C1  01288                           LOAD s2, 88                           ; endx 135
 0C2  013C8                           LOAD s3, C8                           ; endy 200
 0C3  2036D                           CALL 36D[draw_line]                   ;
 0C4                                  ;; LINE 2 (TOPLEFT) FOR S
 0C4  01082                           LOAD s0, 82                           ; stax 130
 0C5  011C8                           LOAD s1, C8                           ; stay 200
 0C6  01282                           LOAD s2, 82                           ; endx 130
 0C7  013CD                           LOAD s3, CD                           ; endy 205
 0C8  2036D                           CALL 36D[draw_line]                   ;
 0C9                                  ;; LINE 3 (MIDDLE) FOR S
 0C9  01082                           LOAD s0, 82                           ; stax 130
 0CA  011CD                           LOAD s1, CD                           ; stay 205
 0CB  01287                           LOAD s2, 87                           ; endx 135
 0CC  013CD                           LOAD s3, CD                           ; endy 205
 0CD  2036D                           CALL 36D[draw_line]                   ;
 0CE                                  ;; LINE 4 (BOTTOMRIGHT) FOR S
 0CE  01087                           LOAD s0, 87                           ; stax 135
 0CF  011CD                           LOAD s1, CD                           ; stay 205
 0D0  01287                           LOAD s2, 87                           ; endx 135
 0D1  013D2                           LOAD s3, D2                           ; endy 210
 0D2  2036D                           CALL 36D[draw_line]                   ;
 0D3                                  ;; LINE 5 (BOTTOM) FOR S
 0D3  01082                           LOAD s0, 82                           ; stax 130
 0D4  011D2                           LOAD s1, D2                           ; stay 210
 0D5  01287                           LOAD s2, 87                           ; endx 135
 0D6  013D2                           LOAD s3, D2                           ; endy 210
 0D7  2036D                           CALL 36D[draw_line]                   ;
 0D8                                  ;; LINE 1 (TOP) FOR T1
 0D8  0108C                           LOAD s0, 8C                           ; stax 140
 0D9  011C8                           LOAD s1, C8                           ; stay 200
 0DA  01293                           LOAD s2, 93                           ; endx 147
 0DB  013C8                           LOAD s3, C8                           ; endy 200
 0DC  2036D                           CALL 36D[draw_line]                   ;
 0DD                                  ;; LINE 2 (MIDDLE) FOR T1
 0DD  0108F                           LOAD s0, 8F                           ; stax 143
 0DE  011C8                           LOAD s1, C8                           ; stay 200
 0DF  0128F                           LOAD s2, 8F                           ; endx 143
 0E0  013D2                           LOAD s3, D2                           ; endy 210
 0E1  2036D                           CALL 36D[draw_line]                   ;
 0E2                                  ;; LINE 1 (LEFT) FOR A
 0E2  01096                           LOAD s0, 96                           ; stax 150
 0E3  011C8                           LOAD s1, C8                           ; stay 200
 0E4  01296                           LOAD s2, 96                           ; endx 150
 0E5  013D2                           LOAD s3, D2                           ; endy 210
 0E6  2036D                           CALL 36D[draw_line]                   ;
 0E7                                  ;; LINE 2 (TOP) FOR A
 0E7  01096                           LOAD s0, 96                           ; stax 150
 0E8  011C8                           LOAD s1, C8                           ; stay 200
 0E9  0129B                           LOAD s2, 9B                           ; endx 155
 0EA  013C8                           LOAD s3, C8                           ; endy 200
 0EB  2036D                           CALL 36D[draw_line]                   ;
 0EC                                  ;; LINE 3 (MIDDLE) FOR A
 0EC  01096                           LOAD s0, 96                           ; stax 150
 0ED  011CD                           LOAD s1, CD                           ; stay 205
 0EE  0129B                           LOAD s2, 9B                           ; endx 155
 0EF  013CD                           LOAD s3, CD                           ; endy 205
 0F0  2036D                           CALL 36D[draw_line]                   ;
 0F1                                  ;; LINE 4 (RIGHT) FOR A
 0F1  0109B                           LOAD s0, 9B                           ; stax 155
 0F2  011C8                           LOAD s1, C8                           ; stay 200
 0F3  0129B                           LOAD s2, 9B                           ; endx 155
 0F4  013D2                           LOAD s3, D2                           ; endy 210
 0F5  2036D                           CALL 36D[draw_line]                   ;
 0F6                                  ;; LINE 1 (LEFT) FOR R
 0F6  010A0                           LOAD s0, A0                           ; stax 160
 0F7  011C8                           LOAD s1, C8                           ; stay 200
 0F8  012A0                           LOAD s2, A0                           ; endx 160
 0F9  013D2                           LOAD s3, D2                           ; endy 210
 0FA  2036D                           CALL 36D[draw_line]                   ;
 0FB                                  ;; LINE 2 (TOP) FOR R
 0FB  010A0                           LOAD s0, A0                           ; stax 160
 0FC  011C8                           LOAD s1, C8                           ; stay 200
 0FD  012A5                           LOAD s2, A5                           ; endx 165
 0FE  013C8                           LOAD s3, C8                           ; endy 200
 0FF  2036D                           CALL 36D[draw_line]                   ;
 100                                  ;; LINE 3 (RIGHT) FOR R
 100  010A5                           LOAD s0, A5                           ; stax 165
 101  011C8                           LOAD s1, C8                           ; stay 200
 102  012A5                           LOAD s2, A5                           ; endx 165
 103  013CD                           LOAD s3, CD                           ; endy 205
 104  2036D                           CALL 36D[draw_line]                   ;
 105                                  ;; LINE 4 (MIDDLE) FOR R
 105  010A0                           LOAD s0, A0                           ; stax 160
 106  011CD                           LOAD s1, CD                           ; stay 205
 107  012A5                           LOAD s2, A5                           ; endx 165
 108  013CD                           LOAD s3, CD                           ; endy 205
 109  2036D                           CALL 36D[draw_line]                   ;
 10A                                  ;; LINE 5 (ANGLED) FOR R
 10A  010A0                           LOAD s0, A0                           ; stax 160
 10B  011CD                           LOAD s1, CD                           ; stay 205
 10C  012A5                           LOAD s2, A5                           ; endx 165
 10D  013D2                           LOAD s3, D2                           ; endy 210
 10E  2036D                           CALL 36D[draw_line]                   ;
 10F                                  ;; LINE 6 (ANGLED2) FOR R
 10F  010A0                           LOAD s0, A0                           ; stax 160
 110  011CE                           LOAD s1, CE                           ; stay 206
 111  012A4                           LOAD s2, A4                           ; endx 164
 112  013D2                           LOAD s3, D2                           ; endy 210
 113  2036D                           CALL 36D[draw_line]                   ;
 114                                  ;; LINE 1 (TOP) FOR T2
 114  010AA                           LOAD s0, AA                           ; stax 170
 115  011C8                           LOAD s1, C8                           ; stay 200
 116  012B1                           LOAD s2, B1                           ; endx 177
 117  013C8                           LOAD s3, C8                           ; endy 200
 118  2036D                           CALL 36D[draw_line]                   ;
 119                                  ;; LINE 2 (MIDDLE) FOR T2
 119  010AD                           LOAD s0, AD                           ; stax 173
 11A  011C8                           LOAD s1, C8                           ; stay 200
 11B  012AD                           LOAD s2, AD                           ; endx 173
 11C  013D2                           LOAD s3, D2                           ; endy 210
 11D  2036D                           CALL 36D[draw_line]                   ;
 11E                                  ;;============================================================================
 11E                                  ;; Draws Decoration (Line 1a)
 11E                                  ;;============================================================================
 11E  01000                           LOAD s0, 00                           ; load 00 into s0
 11F  0110A                           LOAD s1, 0A                           ; load 0A into s1
 120  012FF                           LOAD s2, FF                           ; load FF into s2
 121  0130A                           LOAD s3, 0A                           ; load 0A into s3
 122  2036D                           CALL 36D[draw_line]                   ; draws the line
 123                                  ;;===========================================================================
 123                                  ;; Draws Decoration (Line 2a)
 123                                  ;;============================================================================
 123  01000                           LOAD s0, 00                           ; load 00 into s0
 124  0110C                           LOAD s1, 0C                           ; load 0C into s1
 125  012FF                           LOAD s2, FF                           ; load FF into s2
 126  0130C                           LOAD s3, 0C                           ; load 0C into s3
 127  2036D                           CALL 36D[draw_line]                   ; draws the line
 128                                  ;;===========================================================================
 128                                  ;; Draws Decoration (Line 3a)
 128                                  ;;============================================================================
 128  01000                           LOAD s0, 00                           ; load 00 into s0
 129  0110E                           LOAD s1, 0E                           ; load 0E into s1
 12A  012FF                           LOAD s2, FF                           ; load FF into s2
 12B  0130E                           LOAD s3, 0E                           ; load 0E into s3
 12C  2036D                           CALL 36D[draw_line]                   ; draws the line
 12D                                  ;;============================================================================
 12D                                  ;; Draws Decoration (Line 1b)
 12D                                  ;;============================================================================
 12D  01000                           LOAD s0, 00                           ; load 00 into s0
 12E  01188                           LOAD s1, 88                           ; load 88 into s1
 12F  012FF                           LOAD s2, FF                           ; load FF into s2
 130  01388                           LOAD s3, 88                           ; load 88 into s3
 131  2036D                           CALL 36D[draw_line]                   ; draws the line
 132                                  ;;===========================================================================
 132                                  ;; Draws Decoration (Line 2b)
 132                                  ;;============================================================================
 132  01000                           LOAD s0, 00                           ; load 00 into s0
 133  0118A                           LOAD s1, 8A                           ; load 8A into s1
 134  012FF                           LOAD s2, FF                           ; load FF into s2
 135  0138A                           LOAD s3, 8A                           ; load 8A into s3
 136  2036D                           CALL 36D[draw_line]                   ; draws the line
 137                                  ;;===========================================================================
 137                                  ;; Draws Decoration (Line 3b)
 137                                  ;;============================================================================
 137  01000                           LOAD s0, 00                           ; load 00 into s0
 138  0118C                           LOAD s1, 8C                           ; load 8A into s1
 139  012FF                           LOAD s2, FF                           ; load FF into s2
 13A  0138C                           LOAD s3, 8C                           ; load 8C into s3
 13B  2036D                           CALL 36D[draw_line]                   ; draws the line
 13C                                  ;;============================================================================
 13C                                  ;; Draws the letter H (Line 1)
 13C                                  ;;============================================================================
 13C                                  ;; STARTING POINT
 13C  0150A                           LOAD s5, 0A                           ; load 10 into s5
 13D  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 13E  0161E                           LOAD s6, 1E                           ; load 30 into s6
 13F  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 140                                  ;; ENDING POINT
 140  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 141  0163C                           LOAD s6, 3C                           ; load 60 into s6
 142  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 143  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 144                                  ;;============================================================================
 144                                  ;; Draws the letter H (Line 2)
 144                                  ;;============================================================================
 144                                  ;; STARTING POINT
 144  0150A                           LOAD s5, 0A                           ; load 10 into s5
 145  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 146  0162D                           LOAD s6, 2D                           ; load 45 into s6
 147  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 148                                  ;; ENDING POINT
 148  0151E                           LOAD s5, 1E                           ; load 30 into s5
 149  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 14A  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 14B  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 14C                                  ;;============================================================================
 14C                                  ;; Draws the letter H (Line 3)
 14C                                  ;;============================================================================
 14C                                  ;; STARTING POINT
 14C  0151E                           LOAD s5, 1E                           ; load 30 into s5
 14D  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 14E  0161E                           LOAD s6, 1E                           ; load 30 into s6
 14F  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 150                                  ;; ENDING POINT
 150  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 151  0163C                           LOAD s6, 3C                           ; load 60 into s6
 152  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 153  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 154                                  ;;============================================================================
 154                                  ;; Draws the letter E (Line 1)
 154                                  ;;============================================================================
 154                                  ;; STARTING POINT
 154  01528                           LOAD s5, 28                           ; load 40 into s5
 155  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 156  0161E                           LOAD s6, 1E                           ; load 30 into s6
 157  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 158                                  ;; ENDING POINT
 158  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 159  0163C                           LOAD s6, 3C                           ; load 60 into s6
 15A  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 15B  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 15C                                  ;;============================================================================
 15C                                  ;; Draws the letter E (Line 2)
 15C                                  ;;============================================================================
 15C                                  ;; STARTING POINT
 15C  01528                           LOAD s5, 28                           ; load 40 into s5
 15D  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 15E  0161E                           LOAD s6, 1E                           ; load 30 into s6
 15F  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 160                                  ;; ENDING POINT
 160  0153C                           LOAD s5, 3C                           ; load 60 into s5
 161  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 162  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 163  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 164                                  ;;============================================================================
 164                                  ;; Draws the letter E (Line 3)
 164                                  ;;============================================================================
 164                                  ;; STARTING POINT
 164  01528                           LOAD s5, 28                           ; load 40 into s5
 165  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 166  0162D                           LOAD s6, 2D                           ; load 45 into s6
 167  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 168                                  ;; ENDING POINT
 168  0153C                           LOAD s5, 3C                           ; load 60 into s5
 169  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 16A  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 16B  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 16C                                  ;;============================================================================
 16C                                  ;; Draws the letter E (Line 3)
 16C                                  ;;============================================================================
 16C                                  ;; STARTING POINT
 16C  01528                           LOAD s5, 28                           ; load 40 into s5
 16D  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 16E  0163C                           LOAD s6, 3C                           ; load 45 into s6
 16F  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 170                                  ;; ENDING POINT
 170  0153C                           LOAD s5, 3C                           ; load 60 into s5
 171  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 172  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 173  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 174                                  ;;============================================================================
 174                                  ;; Draws the letter L (Line 1)
 174                                  ;;============================================================================
 174                                  ;; STARTING POINT
 174  01546                           LOAD s5, 46                           ; load 70 into s5
 175  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 176  0161E                           LOAD s6, 1E                           ; load 30 into s6
 177  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 178                                  ;; ENDING POINT
 178  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 179  0163C                           LOAD s6, 3C                           ; load 60 into s6
 17A  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 17B  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 17C                                  ;;============================================================================
 17C                                  ;; Draws the letter L (Line 2)
 17C                                  ;;============================================================================
 17C                                  ;; STARTING POINT
 17C  01546                           LOAD s5, 46                           ; load 70 into s5
 17D  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 17E  0163C                           LOAD s6, 3C                           ; load 45 into s6
 17F  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 180                                  ;; ENDING POINT
 180  0155A                           LOAD s5, 5A                           ; load 90 into s5
 181  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 182  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 183  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 184                                  ;;============================================================================
 184                                  ;; Draws the letter I (Line 1)
 184                                  ;;============================================================================
 184                                  ;; STARTING POINT
 184  01564                           LOAD s5, 64                           ; load 70 into s5
 185  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 186  0161E                           LOAD s6, 1E                           ; load 30 into s6
 187  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 188                                  ;; ENDING POINT
 188  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 189  0163C                           LOAD s6, 3C                           ; load 60 into s6
 18A  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 18B  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 18C                                  ;;============================================================================
 18C                                  ;; Draws the letter C (Line 1)
 18C                                  ;;============================================================================
 18C                                  ;; STARTING POINT
 18C  01582                           LOAD s5, 82                           ; load 130 into s5
 18D  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 18E  0161E                           LOAD s6, 1E                           ; load 45 into s6
 18F  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 190                                  ;; ENDING POINT
 190  01573                           LOAD s5, 73                           ; load 115 into s5
 191  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 192  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 193  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 194                                  ;;============================================================================
 194                                  ;; Draws the letter C (Line 2)
 194                                  ;;============================================================================
 194                                  ;; STARTING POINT
 194  01573                           LOAD s5, 73                           ; load 115 into s5
 195  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 196  0161E                           LOAD s6, 1E                           ; load 45 into s6
 197  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 198                                  ;; ENDING POINT
 198  0156E                           LOAD s5, 6E                           ; load 110 into s5
 199  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 19A  01623                           LOAD s6, 23                           ; load 35 into s6
 19B  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 19C  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 19D                                  ;;============================================================================
 19D                                  ;; Draws the letter C (Line 3)
 19D                                  ;;============================================================================
 19D                                  ;; STARTING POINT
 19D  0156E                           LOAD s5, 6E                           ; load 110 into s5
 19E  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 19F  01623                           LOAD s6, 23                           ; load 35 into s6
 1A0  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1A1                                  ;; ENDING POINT
 1A1  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1A2  01637                           LOAD s6, 37                           ; load 55 into s6
 1A3  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1A4  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1A5                                  ;;============================================================================
 1A5                                  ;; Draws the letter C (Line 4)
 1A5                                  ;;============================================================================
 1A5                                  ;; STARTING POINT
 1A5  0156E                           LOAD s5, 6E                           ; load 110 into s5
 1A6  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1A7  01637                           LOAD s6, 37                           ; load 55 into s6
 1A8  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1A9                                  ;; ENDING POINT
 1A9  01573                           LOAD s5, 73                           ; load 130 into s5
 1AA  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1AB  0163B                           LOAD s6, 3B                           ; load 44 into s6
 1AC  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1AD  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1AE                                  ;;============================================================================
 1AE                                  ;; Draws the letter C (Line 5)
 1AE                                  ;;============================================================================
 1AE                                  ;; STARTING POINT
 1AE  01582                           LOAD s5, 82                           ; load 130 into s5
 1AF  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1B0  0163C                           LOAD s6, 3C                           ; load 45 into s6
 1B1  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1B2                                  ;; ENDING POINT
 1B2  01573                           LOAD s5, 73                           ; load 115 into s5
 1B3  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1B4  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1B5  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1B6                                  ;;============================================================================
 1B6                                  ;; Draws the letter O (Line 1)
 1B6                                  ;;============================================================================
 1B6                                  ;; STARTING POINT
 1B6  01591                           LOAD s5, 91                           ; load 145 into s5
 1B7  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1B8  0161E                           LOAD s6, 1E                           ; load 30 into s6
 1B9  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1BA                                  ;; ENDING POINT
 1BA  0159B                           LOAD s5, 9B                           ; load 155 into s5
 1BB  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1BC  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1BD  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1BE                                  ;;============================================================================
 1BE                                  ;; Draws the letter O (Line 2)
 1BE                                  ;;============================================================================
 1BE                                  ;; STARTING POINT
 1BE  01591                           LOAD s5, 91                           ; load 145 into s5
 1BF  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1C0  0161E                           LOAD s6, 1E                           ; load 45 into s6
 1C1  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1C2                                  ;; ENDING POINT
 1C2  0158C                           LOAD s5, 8C                           ; load 110 into s5
 1C3  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1C4  0161E                           LOAD s6, 1E                           ; load 35 into s6
 1C5  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1C6  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1C7                                  ;;============================================================================
 1C7                                  ;; Draws the letter O (Line 3)
 1C7                                  ;;============================================================================
 1C7                                  ;; STARTING POINT
 1C7  0158C                           LOAD s5, 8C                           ; load 140 into s5
 1C8  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1C9  0161E                           LOAD s6, 1E                           ; load 30 into s6
 1CA  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1CB                                  ;; ENDING POINT
 1CB  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1CC  0163C                           LOAD s6, 3C                           ; load 60 into s6
 1CD  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1CE  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1CF                                  ;;============================================================================
 1CF                                  ;; Draws the letter O (Line 4)
 1CF                                  ;;============================================================================
 1CF                                  ;; STARTING POINT
 1CF  0158C                           LOAD s5, 8C                           ; load 110 into s5
 1D0  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1D1  0163C                           LOAD s6, 3C                           ; load 55 into s6
 1D2  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1D3                                  ;; ENDING POINT
 1D3  01591                           LOAD s5, 91                           ; load 145 into s5
 1D4  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1D5  0163C                           LOAD s6, 3C                           ; load 30 into s6
 1D6  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1D7  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1D8                                  ;;============================================================================
 1D8                                  ;; Draws the letter O (Line 5)
 1D8                                  ;;============================================================================
 1D8                                  ;; STARTING POINT
 1D8  01591                           LOAD s5, 91                           ; load 145 into s5
 1D9  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1DA  0163C                           LOAD s6, 3C                           ; load 30 into s6
 1DB  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1DC                                  ;; ENDING POINT
 1DC  0159B                           LOAD s5, 9B                           ; load 155 into s5
 1DD  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1DE  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1DF  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1E0                                  ;;============================================================================
 1E0                                  ;; Draws the letter O (Line 6)
 1E0                                  ;;============================================================================
 1E0                                  ;; STARTING POINT
 1E0  0159B                           LOAD s5, 9B                           ; load 110 into s5
 1E1  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1E2  0163C                           LOAD s6, 3C                           ; load 55 into s6
 1E3  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1E4                                  ;; ENDING POINT
 1E4  015A0                           LOAD s5, A0                           ; load 160 into s5
 1E5  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1E6  0163C                           LOAD s6, 3C                           ; load 30 into s6
 1E7  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1E8  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1E9                                  ;;============================================================================
 1E9                                  ;; Draws the letter O (Line 7)
 1E9                                  ;;============================================================================
 1E9                                  ;; STARTING POINT
 1E9  015A0                           LOAD s5, A0                           ; load 160 into s5
 1EA  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1EB  0161E                           LOAD s6, 1E                           ; load 30 into s6
 1EC  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1ED                                  ;; ENDING POINT
 1ED  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1EE  0163C                           LOAD s6, 3C                           ; load 60 into s6
 1EF  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1F0  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1F1                                  ;;============================================================================
 1F1                                  ;; Draws the letter O (Line 8)
 1F1                                  ;;============================================================================
 1F1                                  ;; STARTING POINT
 1F1  015A0                           LOAD s5, A0                           ; load 160 into s5
 1F2  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1F3  0161E                           LOAD s6, 1E                           ; load 30 into s6
 1F4  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1F5                                  ;; ENDING POINT
 1F5  0159B                           LOAD s5, 9B                           ; load 155 into s5
 1F6  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1F7  0161E                           LOAD s6, 1E                           ; load 30 into s6
 1F8  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1F9  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1FA                                  ;;============================================================================
 1FA                                  ;; Draws the letter P (Line 1)
 1FA                                  ;;============================================================================
 1FA  010AA                           LOAD s0, AA                           ; load 170 into s0
 1FB  0111E                           LOAD s1, 1E                           ; load 30 into s1
 1FC  012BE                           LOAD s2, BE                           ; load 190 into s2
 1FD  0131E                           LOAD s3, 1E                           ; keep s3 set at 30
 1FE  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 1FF                                  ;;============================================================================
 1FF                                  ;; Draws the letter P (Line 2)
 1FF                                  ;;============================================================================
 1FF  010AA                           LOAD s0, AA                           ; load 170 into s0
 200  0111E                           LOAD s1, 1E                           ; load 30 into s1
 201  012AA                           LOAD s2, AA                           ; load 170 into s2
 202  0133C                           LOAD s3, 3C                           ; load 60 into s3
 203  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 204                                  ;;============================================================================
 204                                  ;; Draws the letter P (Line 3)
 204                                  ;;============================================================================
 204  010AA                           LOAD s0, AA                           ; load 170 into s0
 205  0112D                           LOAD s1, 2D                           ; load 45 into s1
 206  012BE                           LOAD s2, BE                           ; load 190 into s2
 207  0132D                           LOAD s3, 2D                           ; keep s0 set at 45
 208  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 209                                  ;;============================================================================
 209                                  ;; Draws the letter P (Line 4)
 209                                  ;;============================================================================
 209  010BE                           LOAD s0, BE                           ; load 190 into s0
 20A  0111E                           LOAD s1, 1E                           ; load 30 into s1
 20B  012BE                           LOAD s2, BE                           ; load 190 into s2
 20C  0132D                           LOAD s3, 2D                           ; load 45 to s3
 20D  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 20E                                  ;;============================================================================
 20E                                  ;; Draws the letter T (Line 1)
 20E                                  ;;============================================================================
 20E  010C8                           LOAD s0, C8                           ; load 200 into s0
 20F  0111E                           LOAD s1, 1E                           ; load 30 into s1
 210  012DC                           LOAD s2, DC                           ; load 220 into s2
 211  0131E                           LOAD s3, 1E                           ; load 30 to s3
 212  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 213                                  ;;============================================================================
 213                                  ;; Draws the letter T (Line 2)
 213                                  ;;============================================================================
 213  010D2                           LOAD s0, D2                           ; load 200 into s0
 214  0111E                           LOAD s1, 1E                           ; load 30 into s1
 215  012D2                           LOAD s2, D2                           ; load 220 into s2
 216  0133C                           LOAD s3, 3C                           ; load 60 to s3
 217  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 218                                  ;;============================================================================
 218                                  ;; Draws the letter E (Line 1)
 218                                  ;;============================================================================
 218  010E6                           LOAD s0, E6                           ; load 230 into s0
 219  0111E                           LOAD s1, 1E                           ; load 30 into s1
 21A  012E6                           LOAD s2, E6                           ; load 230 into s2
 21B  0133C                           LOAD s3, 3C                           ; load 30 to s3
 21C  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 21D                                  ;;============================================================================
 21D                                  ;; Draws the letter E (Line 2)
 21D                                  ;;============================================================================
 21D  010E6                           LOAD s0, E6                           ; load 230 into s0
 21E  0111E                           LOAD s1, 1E                           ; load 30 into s1
 21F  012FA                           LOAD s2, FA                           ; load 250 into s2
 220  0131E                           LOAD s3, 1E                           ; load 30 to s3
 221  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 222                                  ;;============================================================================
 222                                  ;; Draws the letter E (Line 3)
 222                                  ;;============================================================================
 222  010E6                           LOAD s0, E6                           ; load 230 into s0
 223  0112D                           LOAD s1, 2D                           ; load 30 into s1
 224  012FA                           LOAD s2, FA                           ; load 250 into s2
 225  0132D                           LOAD s3, 2D                           ; load 30 to s3
 226  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 227                                  ;;============================================================================
 227                                  ;; Draws the letter E (Line 4)
 227                                  ;;============================================================================
 227  010E6                           LOAD s0, E6                           ; load 230 into s0
 228  0113C                           LOAD s1, 3C                           ; load 30 into s1
 229  012FA                           LOAD s2, FA                           ; load 250 into s2
 22A  0133C                           LOAD s3, 3C                           ; load 30 to s3
 22B  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 22C                                  ;;============================================================================
 22C                                  ;; NEW LINE STARTS HERE (GAME)
 22C                                  ;;============================================================================
 22C                                  ;;============================================================================
 22C                                  ;; Draws the letter G (Line 1)
 22C                                  ;;============================================================================
 22C  01046                           LOAD s0, 46                           ; load 70 into s0
 22D  0115A                           LOAD s1, 5A                           ; load 90 into s1
 22E  0125A                           LOAD s2, 5A                           ; load 90 into s2
 22F  0135A                           LOAD s3, 5A                           ; load 90 to s3
 230  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 231                                  ;;============================================================================
 231                                  ;; Draws the letter G (Line 2)
 231                                  ;;============================================================================
 231  01046                           LOAD s0, 46                           ; load 70 into s0
 232  0115A                           LOAD s1, 5A                           ; load 90 into s1
 233  01246                           LOAD s2, 46                           ; load 90 into s2
 234  01378                           LOAD s3, 78                           ; load 90 to s3
 235  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 236                                  ;;============================================================================
 236                                  ;; Draws the letter G (Line 3)
 236                                  ;;============================================================================
 236  01046                           LOAD s0, 46                           ; load 70 into s0
 237  01178                           LOAD s1, 78                           ; load 90 into s1
 238  0125A                           LOAD s2, 5A                           ; load 90 into s2
 239  01378                           LOAD s3, 78                           ; load 90 to s3
 23A  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 23B                                  ;;============================================================================
 23B                                  ;; Draws the letter G (Line 4)
 23B                                  ;;============================================================================
 23B  0105A                           LOAD s0, 5A                           ; load 70 into s0
 23C  01169                           LOAD s1, 69                           ; load 90 into s1
 23D  0125A                           LOAD s2, 5A                           ; load 90 into s2
 23E  01378                           LOAD s3, 78                           ; load 90 to s3
 23F  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 240                                  ;;============================================================================
 240                                  ;; Draws the letter G (Line 5)
 240                                  ;;============================================================================
 240  0105A                           LOAD s0, 5A                           ; load 70 into s0
 241  01169                           LOAD s1, 69                           ; load 90 into s1
 242  01250                           LOAD s2, 50                           ; load 90 into s2
 243  01369                           LOAD s3, 69                           ; load 90 to s3
 244  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 245                                  ;;============================================================================
 245                                  ;; Draws the letter A (Line 1)
 245                                  ;;============================================================================
 245  01064                           LOAD s0, 64                           ; 100
 246  0115A                           LOAD s1, 5A                           ; 90
 247  01278                           LOAD s2, 78                           ; 120
 248  0135A                           LOAD s3, 5A                           ; 90
 249  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 24A                                  ;;============================================================================
 24A                                  ;; Draws the letter A (Line 2)
 24A                                  ;;============================================================================
 24A  01064                           LOAD s0, 64                           ; 100
 24B  01169                           LOAD s1, 69                           ; 105
 24C  01278                           LOAD s2, 78                           ; 120
 24D  01369                           LOAD s3, 69                           ; 105
 24E  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 24F                                  ;;============================================================================
 24F                                  ;; Draws the letter A (Line 3)
 24F                                  ;;============================================================================
 24F  01064                           LOAD s0, 64                           ; 100
 250  0115A                           LOAD s1, 5A                           ; 90
 251  01264                           LOAD s2, 64                           ; 100
 252  01378                           LOAD s3, 78                           ; 120
 253  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 254                                  ;;============================================================================
 254                                  ;; Draws the letter A (Line 4)
 254                                  ;;============================================================================
 254  01078                           LOAD s0, 78                           ; 120
 255  0115A                           LOAD s1, 5A                           ; 90
 256  01278                           LOAD s2, 78                           ; 120
 257  01378                           LOAD s3, 78                           ; 120
 258  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 259                                  ;;============================================================================
 259                                  ;; Draws the letter M (Line 1)
 259                                  ;;============================================================================
 259  01082                           LOAD s0, 82                           ; 130
 25A  0115A                           LOAD s1, 5A                           ; 90
 25B  01282                           LOAD s2, 82                           ; 130
 25C  01378                           LOAD s3, 78                           ; 120
 25D  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 25E                                  ;;============================================================================
 25E                                  ;; Draws the letter M (Line 2)
 25E                                  ;;============================================================================
 25E  01096                           LOAD s0, 96                           ; 150
 25F  0115A                           LOAD s1, 5A                           ; 90
 260  01296                           LOAD s2, 96                           ; 150
 261  01378                           LOAD s3, 78                           ; 120
 262  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 263                                  ;;============================================================================
 263                                  ;; Draws the letter M (Line 3)
 263                                  ;;============================================================================
 263  01096                           LOAD s0, 96                           ; 150
 264  0115A                           LOAD s1, 5A                           ; 90
 265  0128C                           LOAD s2, 8C                           ; 140
 266  01369                           LOAD s3, 69                           ; 105
 267  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 268                                  ;;============================================================================
 268                                  ;; Draws the letter M (Line 4)
 268                                  ;;============================================================================
 268  01082                           LOAD s0, 82                           ; 130
 269  0115A                           LOAD s1, 5A                           ; 90
 26A  0128C                           LOAD s2, 8C                           ; 140
 26B  01369                           LOAD s3, 69                           ; 105
 26C  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 26D                                  ;;============================================================================
 26D                                  ;; Draws the letter E (Line 1)
 26D                                  ;;============================================================================
 26D  010A0                           LOAD s0, A0                           ; 160
 26E  0115A                           LOAD s1, 5A                           ; 90
 26F  012A0                           LOAD s2, A0                           ; 160
 270  01378                           LOAD s3, 78                           ; 120
 271  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 272                                  ;;============================================================================
 272                                  ;; Draws the letter E (Line 2)
 272                                  ;;============================================================================
 272  010A0                           LOAD s0, A0                           ; 160
 273  0115A                           LOAD s1, 5A                           ; 90
 274  012B4                           LOAD s2, B4                           ; 180
 275  0135A                           LOAD s3, 5A                           ; 90
 276  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 277                                  ;;============================================================================
 277                                  ;; Draws the letter E (Line 3)
 277                                  ;;============================================================================
 277  010A0                           LOAD s0, A0                           ; 160
 278  01169                           LOAD s1, 69                           ; 105
 279  012B4                           LOAD s2, B4                           ; 180
 27A  01369                           LOAD s3, 69                           ; 105
 27B  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 27C                                  ;;============================================================================
 27C                                  ;; Draws the letter E (Line 4)
 27C                                  ;;============================================================================
 27C  010A0                           LOAD s0, A0                           ; 160
 27D  01178                           LOAD s1, 78                           ; 120
 27E  012B4                           LOAD s2, B4                           ; 180
 27F  01378                           LOAD s3, 78                           ; 120
 280  2036D                           CALL 36D[draw_line]                   ; call the draw_line subroutine
 281  25000                           RETURN                                ; leave start_screen subroutine
 282                                  ;;============================================================================
 282                                  ;; Draw Helicopter - Draw Helicopter Subroutine
 282                                  ;;============================================================================
 282                 draw_helicopter: 
 282  202C7                           CALL 2C7[draw_helicopter_cockpit]     ; call the subroutine to draw the cockpit
 283  2033B                           CALL 33B[draw_helicopter_blades]      ; call the subroutine to draw the blades
 284  20306                           CALL 306[draw_helicopter_tail]        ; call the subroutine to draw the tail
 285                                  ;CALL draw_helicopter_smoke         ; call the subroutine to draw the smoke
 285  25000                           RETURN                                ; go back from drawing helicopter
 286                                  ;;============================================================================
 286                                  ;; Draw Block - Draw Block Subroutine
 286                                  ;;============================================================================
 286                      draw_block: 
 286                                  ;;============================================================================
 286                                  ;; Draws Top Line of Block
 286                                  ;;============================================================================
 286  005E0                           LOAD s5, sE                           ; load 255 into s5 (horizontal center of block)
 287  016E1                           LOAD s6, E1                           ; load 245 into s6
 288  1C650                           COMPARE s6, s5                        ; checking if the block is done "peaking out" from the right (initial compare: 245 ? 255)
 289  3A28F                           JUMP C, 28F[right_edge]               ; jump to right_edge
 28A  0160A                           LOAD s6, 0A                           ; load 10 into s6
 28B  1C560                           COMPARE s5, s6                        ; comparing s5 and s6
 28C  3A293                           JUMP C, 293[left_edge]                ; jump to left_edge
 28D  32293                           JUMP Z, 293[left_edge]                ; jump to left_edge
 28E  22297                           JUMP 297[in_middle]                   ; jump to in_middle
 28F  2D500               right_edge: OUTPUT s5, 00[stax]                   ; set desired stax
 290  1950A                           SUB s5, 0A                            ;
 291  2D502                           OUTPUT s5, 02[endx]                   ; set desired stax
 292  2229A                           JUMP 29A[finished1]                   ; jump to draw_ys
 293  2D500                left_edge: OUTPUT s5, 00[stax]                   ; set desired stax
 294  01600                           LOAD s6, 00                           ; put 255 into s5
 295  2D602                           OUTPUT s6, 02[endx]                   ; set desired stax
 296  2229A                           JUMP 29A[finished1]                   ; jump to draw_ys
 297                       in_middle: 
 297  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 298  1950A                           SUB s5, 0A                            ; subtract the width of block to get the other x coordinate
 299  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 29A  2DF01                finished1: OUTPUT sF, 01[stay]                   ; set desired stay
 29B  2DF03                           OUTPUT sF, 03[endy]                   ; set desired endy
 29C  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 29D                                  ;;============================================================================
 29D                                  ;; Draws Bottom Line of Block
 29D                                  ;;============================================================================
 29D  005F0                           LOAD s5, sF                           ; load sF into s5
 29E  1153C                           ADD s5, 3C                            ; add 40 to s5
 29F  2D501                           OUTPUT s5, 01[stay]                   ; set desired stay
 2A0  2D503                           OUTPUT s5, 03[endy]                   ; set desired endy
 2A1  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 2A2                                  ;;============================================================================
 2A2                                  ;; Draws Right Vertical Line of Block
 2A2                                  ;;============================================================================
 2A2  2DE00                           OUTPUT sE, 00[stax]                   ; set desired stax
 2A3  2DE02                           OUTPUT sE, 02[endx]                   ; set desired endx
 2A4  2DF01                           OUTPUT sF, 01[stay]                   ; set desired stay
 2A5  005F0                           LOAD s5, sF                           ; load sF into s5
 2A6  1153C                           ADD s5, 3C                            ; add 60 to y coordinate
 2A7  2D503                           OUTPUT s5, 03[endy]                   ; set desired endy
 2A8  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 2A9                                  ;;============================================================================
 2A9                                  ;; Draws Left Vertical Line of Block
 2A9                                  ;;============================================================================
 2A9  005E0                           LOAD s5, sE                           ; load sE into s5
 2AA  1950A                           SUB s5, 0A                            ; subtract 10 from s5
 2AB  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 2AC  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 2AD  2DF01                           OUTPUT sF, 01[stay]                   ; set desired stay
 2AE  005F0                           LOAD s5, sF                           ; load sF into s5
 2AF  1153C                           ADD s5, 3C                            ; add 60 to y coordinate
 2B0  2D503                           OUTPUT s5, 03[endy]                   ; set desired endy
 2B1  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 2B2  25000                           RETURN                                ; finished with draw_block subroutine
 2B3                                  ;;============================================================================
 2B3                                  ;; Random Block Location - Random Block Location Subroutine
 2B3                                  ;;============================================================================
 2B3           random_block_location: 
 2B3  1DE00                           COMPARE sE, 00                        ; is it time to create a new variable?
 2B4  322B9                           JUMP Z, 2B9[new_random]               ; jump to new random creator
 2B5  1DEFF                           COMPARE sE, FF                        ; is it time to create a new variable?
 2B6  322B9                           JUMP Z, 2B9[new_random]               ; jump to new random creator
 2B7  362B8                           JUMP NZ, 2B8[skip_everything]         ; goes back
 2B8  25000          skip_everything: RETURN                                ; returns back (no new rand. number)
 2B9  09507               new_random: INPUT s5, 07[prng]                    ; create to new random number
 2BA  1D50F                           COMPARE s5, 0F                        ; check if it's in range
 2BB  3E2BD                           JUMP NC, 2BD[check_other_bound_range] ; check lower bound of map
 2BC  3A2B9                           JUMP C, 2B9[new_random]               ; get new variable
 2BD         check_other_bound_range: 
 2BD  1D5B4                           COMPARE s5, B4                        ; compare s5 to 180
 2BE  3E2B9                           JUMP NC, 2B9[new_random]              ; get a new random number
 2BF  00F50                           LOAD sF, s5                           ; a new y coordinate generated
 2C0  25000                           RETURN                                ; get out of subroutine
 2C1                                  ;;============================================================================
 2C1                                  ;; Move Helicopter Up - Move Helicopter Up Subroutine
 2C1                                  ;;============================================================================
 2C1                    move_heli_up: 
 2C1  1DC15                           COMPARE sC, 15                        ; check if the helicopter is colliding with top wall
 2C2  362C5                           JUMP NZ, 2C5[decrement]               ; if not colliding, then move helicopter appropriately
 2C3  3E2C5                           JUMP NC, 2C5[decrement]               ; necessary as well
 2C4  25000                           RETURN                                ; do not increment if colliding with top wall
 2C5                       decrement: 
 2C5  19C04                           SUB sC, 04                            ; move the helicopter up
 2C6  25000                           RETURN                                ; get out of subroutine
 2C7                                  ;;============================================================================
 2C7                                  ;; Draw Helicopter Cockpit - Draw Helicopter Cockpit Subroutine
 2C7                                  ;;============================================================================
 2C7         draw_helicopter_cockpit: 
 2C7                                  ;;============================================================================
 2C7                                  ;; Draws Cockpit of Helicopter (Line 1a)
 2C7                                  ;;============================================================================
 2C7                                  ;; STARTING POINT
 2C7  01564                           LOAD s5, 64                           ; load 100 into s5
 2C8  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 2C9  006C0                           LOAD s6, sC                           ; load sC into s5
 2CA  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 2CB                                  ;; ENDING POINT
 2CB  19501                           SUB s5, 01                            ; subtract 7 from s5
 2CC  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 2CD  19603                           SUB s6, 03                            ; go up by 5
 2CE  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 2CF  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 2D0                                  ;;============================================================================
 2D0                                  ;; Draws Cockpit of Helicopter (Line 1b)
 2D0                                  ;;============================================================================
 2D0                                  ;; STARTING POINT
 2D0  01564                           LOAD s5, 64                           ; load 100 into s5
 2D1  19501                           SUB s5, 01                            ; subtract 7 from s5
 2D2  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 2D3  006C0                           LOAD s6, sC                           ; load sC into s5
 2D4  19603                           SUB s6, 03                            ; go up by 5
 2D5  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 2D6                                  ;; ENDING POINT
 2D6  19504                           SUB s5, 04                            ; subtract 7 from s5
 2D7  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 2D8  19602                           SUB s6, 02                            ; go up by 5
 2D9  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 2DA  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 2DB                                  ;;============================================================================
 2DB                                  ;; Draws Cockpit of Helicopter (Line 2a)
 2DB                                  ;;============================================================================
 2DB                                  ;; STARTING POINT
 2DB  01564                           LOAD s5, 64                           ; load 100 into s5
 2DC  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 2DD  006C0                           LOAD s6, sC                           ; load sC into s5
 2DE  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 2DF                                  ;; ENDING POINT
 2DF  19501                           SUB s5, 01                            ; subtract 1 from s5
 2E0  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 2E1  11603                           ADD s6, 03                            ; go down by 3
 2E2  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 2E3  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 2E4                                  ;;============================================================================
 2E4                                  ;; Draws Cockpit of Helicopter (Line 2b)
 2E4                                  ;;============================================================================
 2E4                                  ;; STARTING POINT
 2E4  01564                           LOAD s5, 64                           ; load 100 into s5
 2E5  19501                           SUB s5, 01                            ; subtract 1 from s5
 2E6  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 2E7  006C0                           LOAD s6, sC                           ; load sC into s5
 2E8  11603                           ADD s6, 03                            ; go down by 3
 2E9  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 2EA                                  ;; ENDING POINT
 2EA  19504                           SUB s5, 04                            ; subtract 7 from s5
 2EB  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 2EC  11602                           ADD s6, 02                            ; go down by 5
 2ED  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 2EE  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 2EF                                  ;;============================================================================
 2EF                                  ;; Draws Cockpit of Helicopter (Line 3)
 2EF                                  ;;============================================================================
 2EF                                  ;; STARTING POINT
 2EF  01564                           LOAD s5, 64                           ; load 100 into s5
 2F0  19505                           SUB s5, 05                            ; load 7 into s5
 2F1  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 2F2  006C0                           LOAD s6, sC                           ; load sC into s5
 2F3  19605                           SUB s6, 05                            ; go up by 5 using subtraction
 2F4  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 2F5                                  ;; ENDING POINT
 2F5  19507                           SUB s5, 07                            ; subtract 5 from s5
 2F6  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 2F7  11605                           ADD s6, 05                            ; go down by 5
 2F8  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 2F9  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 2FA                                  ;;============================================================================
 2FA                                  ;; Draws Cockpit of Helicopter (Line 4)
 2FA                                  ;;============================================================================
 2FA                                  ;; STARTING POINT
 2FA  01564                           LOAD s5, 64                           ; load 100 into s5
 2FB  19505                           SUB s5, 05                            ; load 7 into s5
 2FC  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 2FD  006C0                           LOAD s6, sC                           ; load sC into s5
 2FE  11605                           ADD s6, 05                            ; go down by 5 using addition
 2FF  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 300                                  ;; ENDING POINT
 300  19507                           SUB s5, 07                            ; subtract 5 from s5
 301  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 302  19605                           SUB s6, 05                            ; go back up by 5
 303  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 304  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 305  25000                           RETURN                                ; go back from subroutine
 306                                  ;;============================================================================
 306                                  ;; Draw Helicopter Tail - Draw Helicopter Tail Subroutine
 306                                  ;;============================================================================
 306            draw_helicopter_tail: 
 306                                  ;;============================================================================
 306                                  ;; Draws Tail of Helicopter (Line 1)
 306                                  ;;============================================================================
 306                                  ;; STARTING POINT
 306  01564                           LOAD s5, 64                           ; load 100 into s5
 307  1950A                           SUB s5, 0A                            ; subtract 0xA from s5
 308  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 309  006C0                           LOAD s6, sC                           ; load sC into s5
 30A  19602                           SUB s6, 02                            ; subtract 2 from s6
 30B  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 30C                                  ;; ENDING POINT
 30C  19507                           SUB s5, 07                            ; subtract 7 from s5
 30D  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 30E  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 30F  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 310                                  ;;============================================================================
 310                                  ;; Draws Tail of Helicopter (Line 2)
 310                                  ;;============================================================================
 310                                  ;; STARTING POINT
 310  01564                           LOAD s5, 64                           ; load 100 into s5
 311  1950C                           SUB s5, 0C                            ; subtract 0xC from s5
 312  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 313  006C0                           LOAD s6, sC                           ; load sC into s5
 314  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 315                                  ;; ENDING POINT
 315  19508                           SUB s5, 08                            ; subtract 7 from s5
 316  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 317  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 318  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 319                                  ;;============================================================================
 319                                  ;; Draws Tail of Helicopter (Line 3)
 319                                  ;;============================================================================
 319                                  ;; STARTING POINT
 319  01564                           LOAD s5, 64                           ; load 100 into s5
 31A  1950A                           SUB s5, 0A                            ; subtract 0x0A from s5
 31B  19508                           SUB s5, 08                            ; subtract 0x10 from s5
 31C  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 31D  006C0                           LOAD s6, sC                           ; load sC into s5
 31E  19602                           SUB s6, 02                            ; subtract 2 from s6
 31F  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 320                                  ;; ENDING POINT
 320  19502                           SUB s5, 02                            ; subtract 2 from s5
 321  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 322  19602                           SUB s6, 02                            ; subtract 2 from s6
 323  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 324  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 325                                  ;;============================================================================
 325                                  ;; Draws Tail of Helicopter (Line 4)
 325                                  ;;============================================================================
 325                                  ;; STARTING POINT
 325  01564                           LOAD s5, 64                           ; load 100 into s5
 326  1950C                           SUB s5, 0C                            ; subtract 0x0C from s5
 327  19509                           SUB s5, 09                            ; subtract 0x09 from s5
 328  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 329  006C0                           LOAD s6, sC                           ; load sC into s5
 32A  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 32B                                  ;; ENDING POINT
 32B                                  ;SUB s5, 01                          ; subtract 2 from s5
 32B  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 32C  11601                           ADD s6, 01                            ; add 1 to s6
 32D  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 32E  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 32F                                  ;;============================================================================
 32F                                  ;; Draws Tail of Helicopter (Line 5)
 32F                                  ;;============================================================================
 32F                                  ;; STARTING POINT
 32F  01564                           LOAD s5, 64                           ; load 100 into s5
 330  1950A                           SUB s5, 0A                            ; subtract 0x0A from s5
 331  1950A                           SUB s5, 0A                            ; subtract 0x0A from s5
 332  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 333  006C0                           LOAD s6, sC                           ; load sC into s5
 334  19604                           SUB s6, 04                            ; subtract 4 from s6
 335  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 336                                  ;; ENDING POINT
 336  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 337  11605                           ADD s6, 05                            ; add 1 to s6
 338  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 339  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 33A  25000                           RETURN                                ; go back from subroutine
 33B                                  ;;============================================================================
 33B                                  ;; Draw Helicopter Blades - Draw Helicopter Blades Subroutine
 33B                                  ;;============================================================================
 33B          draw_helicopter_blades: 
 33B                                  ;;============================================================================
 33B                                  ;; Draws Blades of Helicopter (Line 1)
 33B                                  ;;============================================================================
 33B                                  ;; STARTING POINT
 33B  01564                           LOAD s5, 64                           ; load 100 into s5
 33C  19505                           SUB s5, 05                            ; subtract 0xA from s5
 33D  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 33E  006C0                           LOAD s6, sC                           ; load sC into s5
 33F  19605                           SUB s6, 05                            ; subtract 2 from s6
 340  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 341                                  ;; ENDING POINT
 341  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 342  19602                           SUB s6, 02                            ; subtract 2 from s6
 343  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 344  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 345                                  ;;============================================================================
 345                                  ;; Draws Blades of Helicopter (Line 2)
 345                                  ;;============================================================================
 345                                  ;; STARTING POINT
 345  01564                           LOAD s5, 64                           ; load 100 into s5
 346  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 347  006C0                           LOAD s6, sC                           ; load sC into s5
 348  19607                           SUB s6, 07                            ; subtract 2 from s6
 349  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 34A                                  ;; ENDING POINT
 34A  1950A                           SUB s5, 0A                            ; subtract 10 from s5
 34B  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 34C  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 34D  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 34E  25000                           RETURN                                ; go back from subroutine
 34F                                  ;;============================================================================
 34F                                  ;; Draw Helicopter Smoke - Draw Helicopter Smoke Subroutine
 34F                                  ;;============================================================================
 34F           draw_helicopter_smoke: 
 34F                                  ;;============================================================================
 34F                                  ;; Draws Smoke of Helicopter (Line 1)
 34F                                  ;;============================================================================
 34F                                  ;; Start Point
 34F  01564                           LOAD s5, 64                           ; load 100 into s5
 350  19528                           SUB s5, 28                            ; position starting smoke right point of line 1
 351  2D500                           OUTPUT s5, 00[stax]                   ; output to starting x position of line 1
 352  006C0                           LOAD s6, sC                           ; load helicopter smoke vertical position for line 1
 353  2D601                           OUTPUT s6, 01[stay]                   ; output to starting y position of line 1
 354                                  ;;
 354                                  ;; End Point
 354  19504                           SUB s5, 04                            ; position starting smoke left point of line 1
 355  2D502                           OUTPUT s5, 02[endx]                   ; output to starting y position of line 1
 356  2D603                           OUTPUT s6, 03[endy]                   ; output to ending y position of line 1, matching helicopter
 357  20377                           CALL 377[old_draw_line]               ;draws a line (careful: this subroutine overwrites s5)
 358                                  ;;
 358                                  ;;============================================================================
 358                                  ;; Draws Smoke of Helicopter (Line 2)
 358                                  ;;============================================================================
 358                                  ;; Start Point
 358  01564                           LOAD s5, 64                           ; load 100 into s5
 359  19534                           SUB s5, 34                            ; position starting smoke right point of line 2
 35A  2D500                           OUTPUT s5, 00[stax]                   ; output to starting x position of line 2
 35B  006C0                           LOAD s6, sC                           ; load starting smoke vertical position for line 2
 35C  11604                           ADD s6, 04                            ; add 4 to s6 (shift down by 4)
 35D  2D601                           OUTPUT s6, 01[stay]                   ; output to starting y position of line 2
 35E                                  ;;
 35E                                  ;; End Point
 35E  19504                           SUB s5, 04                            ; subtract s5 by 4 for length of line
 35F  2D502                           OUTPUT s5, 02[endx]                   ; output to endx
 360  2D603                           OUTPUT s6, 03[endy]                   ; outputs vertical locaton of smoke line 2
 361  20377                           CALL 377[old_draw_line]               ;draws a line (careful: this subroutine overwrites s5)
 362                                  ;;
 362                                  ;;============================================================================
 362                                  ;; Draws Smoke of Helicopter (Line 3)
 362                                  ;;============================================================================
 362                                  ;; Start Point
 362  01564                           LOAD s5, 64                           ; load 100 into s5
 363  19540                           SUB s5, 40                            ; position starting smoke right point of line 3
 364  2D500                           OUTPUT s5, 00[stax]                   ; output to starting x position of line 3
 365  006C0                           LOAD s6, sC                           ; load starting smoke vertical position for line 3
 366  19604                           SUB s6, 04                            ; add 4 to s6 (shift down by 4)
 367  2D601                           OUTPUT s6, 01[stay]                   ; output to starting y position of line 3
 368                                  ;;
 368                                  ;; End Point
 368  19504                           SUB s5, 04                            ; subtract s5 by 4 for length of line
 369  2D502                           OUTPUT s5, 02[endx]                   ; output to endx
 36A  2D603                           OUTPUT s6, 03[endy]                   ; output same y position of line 3
 36B  20377                           CALL 377[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 36C                                  ;;
 36C  25000                           RETURN                                ; go back to subroutine
 36D                                  ;;============================================================================
 36D                                  ;; Draw Line - Draw Line Subroutine
 36D                                  ;;============================================================================
 36D  2D000                draw_line: OUTPUT s0, 00[stax]                   ; write stax
 36E  2D101                           OUTPUT s1, 01[stay]                   ; write stay
 36F  2D202                           OUTPUT s2, 02[endx]                   ; write endx
 370  2D303                           OUTPUT s3, 03[endy]                   ; write endy
 371  01501                           LOAD s5, 01[busy_go]                  ; load go command
 372  2D504                           OUTPUT s5, 04[busy]                   ; send go command
 373  09504                     wait: INPUT s5, 04[busy]                    ; read busy status
 374  1D501                           COMPARE s5, 01[busy_go]               ; check busy status
 375  32373                           JUMP Z, 373[wait]                     ; if busy, wait more
 376  25000                           RETURN                                ; leave line drawing subroutine
 377                                  ;;============================================================================
 377                                  ;; Old Draw Line - Old Draw Line Subroutine (WILL DELETE LATER)
 377                                  ;;============================================================================
 377                   old_draw_line: 
 377  01501                           LOAD s5, 01[busy_go]                  ; load go command
 378  2D504                           OUTPUT s5, 04[busy]                   ; send go command
 379  09504                    wait0: INPUT s5, 04[busy]                    ; read busy status
 37A  1D501                           COMPARE s5, 01[busy_go]               ; check busy status
 37B  32379                           JUMP Z, 379[wait0]                    ; if busy, wait more
 37C  25000                           RETURN                                ; leave line drawing subroutine
 37D                                  ;;============================================================================
 37D                                  ;; Check Collisions - Check Collisions Subroutine
 37D                                  ;;============================================================================
 37D                 check_collision: 
 37D                                  ;;============================================================================
 37D                                  ;; Check Collisions with Map (top wall)
 37D                                  ;;============================================================================
 37D  01560                           LOAD s5, 60                           ; position of heli/wall collision
 37E  0180F                           LOAD s8, 0F                           ; top wall vertical coordinate (15)
 37F  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 380  1960A                           SUB s6, 0A                            ; the helicopter's blades 10 pixels higher
 381  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 382  1C860                           COMPARE s8, s6                        ; check if the two intersect
 383  323E7                           JUMP Z, 3E7[collision_occurred]       ; jump to collision occurred
 384  3E3E7                           JUMP NC, 3E7[collision_occurred]      ; jump to collision occurred (necessary)
 385                                  ;;============================================================================
 385                                  ;; Check Collisions with Map (bottom wall)
 385                                  ;;============================================================================
 385  018F0                           LOAD s8, F0                           ; bottom wall vertical coordinate (240)
 386  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 387  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 388  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 389  1C860                           COMPARE s8, s6                        ; check if the two intersect
 38A  323E7                           JUMP Z, 3E7[collision_occurred]       ; jump to collision occurred
 38B  018F1                           LOAD s8, F1                           ; bottom wall vertical coordinate (241)
 38C  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 38D  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 38E  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 38F  1C860                           COMPARE s8, s6                        ; check if the two intersect
 390  323E7                           JUMP Z, 3E7[collision_occurred]       ; jump to collision occurred
 391  018F2                           LOAD s8, F2                           ; bottom wall vertical coordinate (242)
 392  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 393  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 394  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 395  1C860                           COMPARE s8, s6                        ; check if the two intersect
 396  323E7                           JUMP Z, 3E7[collision_occurred]       ; jump to collision occurred
 397  018F3                           LOAD s8, F3                           ; bottom wall vertical coordinate (243)
 398  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 399  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 39A  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 39B  1C860                           COMPARE s8, s6                        ; check if the two intersect
 39C  323E7                           JUMP Z, 3E7[collision_occurred]       ; jump to collision occurred
 39D  018F4                           LOAD s8, F4                           ; bottom wall vertical coordinate (244)
 39E  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 39F  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 3A0  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 3A1  1C860                           COMPARE s8, s6                        ; check if the two intersect
 3A2  323E7                           JUMP Z, 3E7[collision_occurred]       ; jump to collision occurred
 3A3  018F5                           LOAD s8, F5                           ; bottom wall vertical coordinate (245)
 3A4  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 3A5  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 3A6  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 3A7  1C860                           COMPARE s8, s6                        ; check if the two intersect
 3A8  323E7                           JUMP Z, 3E7[collision_occurred]       ; jump to collision occurred
 3A9  018F6                           LOAD s8, F6                           ; bottom wall vertical coordinate (246)
 3AA  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 3AB  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 3AC  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 3AD  1C860                           COMPARE s8, s6                        ; check if the two intersect
 3AE  323E7                           JUMP Z, 3E7[collision_occurred]       ; jump to collision occurred
 3AF                                  ;;============================================================================
 3AF                                  ;; Check Collisions with Block
 3AF                                  ;;============================================================================
 3AF  005E0                           LOAD s5, sE                           ; get current horizontal position of block
 3B0  1950A                           SUB s5, 0A                            ; actual block is 10 pixels back
 3B1  1D564                           COMPARE s5, 64                        ; check if s5 coincides with heli (horizontal check)
 3B2  323C8                           JUMP Z, 3C8[check_vertical]           ; jump to check vertical positioning
 3B3  1D563                           COMPARE s5, 63                        ; check if s5 coincides with heli (horizontal check)
 3B4  323C8                           JUMP Z, 3C8[check_vertical]           ; jump to check vertical positioning
 3B5  1D562                           COMPARE s5, 62                        ; check if s5 coincides with heli (horizontal check)
 3B6  323C8                           JUMP Z, 3C8[check_vertical]           ; jump to check vertical positioning
 3B7  1D561                           COMPARE s5, 61                        ; check if s5 coincides with heli (horizontal check)
 3B8  323C8                           JUMP Z, 3C8[check_vertical]           ; jump to check vertical positioning
 3B9  1D560                           COMPARE s5, 60                        ; check if s5 coincides with heli (horizontal check)
 3BA  323C8                           JUMP Z, 3C8[check_vertical]           ; jump to check vertical positioning
 3BB  1D559                           COMPARE s5, 59                        ; check if s5 coincides with heli (horizontal check)
 3BC  323C8                           JUMP Z, 3C8[check_vertical]           ; jump to check vertical positioning
 3BD  1D558                           COMPARE s5, 58                        ; check if s5 coincides with heli (horizontal check)
 3BE  323C8                           JUMP Z, 3C8[check_vertical]           ; jump to check vertical positioning
 3BF  1D557                           COMPARE s5, 57                        ; check if s5 coincides with heli (horizontal check)
 3C0  323C8                           JUMP Z, 3C8[check_vertical]           ; jump to check vertical positioning
 3C1  1D556                           COMPARE s5, 56                        ; check if s5 coincides with heli (horizontal check)
 3C2  323C8                           JUMP Z, 3C8[check_vertical]           ; jump to check vertical positioning
 3C3  1D555                           COMPARE s5, 55                        ; check if s5 coincides with heli (horizontal check)
 3C4  323C8                           JUMP Z, 3C8[check_vertical]           ; jump to check vertical positioning
 3C5  1D554                           COMPARE s5, 54                        ; check if s5 coincides with heli (horizontal check)
 3C6  323C8                           JUMP Z, 3C8[check_vertical]           ; jump to check vertical positioning
 3C7  363D2                           JUMP NZ, 3D2[no_collision]            ; jump to no_collision routine
 3C8                  check_vertical: 
 3C8  006F0                           LOAD s6, sF                           ; get current vertical position of block
 3C9  007C0                           LOAD s7, sC                           ; load helicopter front position
 3CA  1C760                     loop: COMPARE s7, s6                        ; compare s7 and s6
 3CB  323E7                           JUMP Z, 3E7[collision_occurred]       ; jump to collision_occured
 3CC  11601                           ADD s6, 01                            ; add one to s6
 3CD  008F0                           LOAD s8, sF                           ; load original value for reference only
 3CE  1183C                           ADD s8, 3C                            ; add 60 to s8
 3CF  1C680                           COMPARE s6, s8                        ; compare s6 to bottom of block (s8)
 3D0  323D2                           JUMP Z, 3D2[no_collision]             ; jump to no_collision routine
 3D1  363CA                           JUMP NZ, 3CA[loop]                    ; keep looping
 3D2  19E01             no_collision: SUB sE, 01                            ; move block forwards
 3D3  1DA01                           COMPARE sA, 01                        ; check if score is above 500
 3D4  3C3D8                           CALL NC, 3D8[stage2_check]            ; call second stage check
 3D5  11C02                           ADD sC, 02                            ; increment sC
 3D6  203F0                           CALL 3F0[distance]                    ; used for keeping the score (increments distance)
 3D7  25000                           RETURN                                ; leave, since no collisions occurred
 3D8                    stage2_check: 
 3D8  19E01                           SUB sE, 01                            ; subtract 1 from sE
 3D9  1DA05                           COMPARE sA, 05                        ; check if score is above 1000
 3DA  3C3DD                           CALL NC, 3DD[stage3_check]            ; call speed2
 3DB  25000                           RETURN                                ; leave routine
 3DC                          speed2: 
 3DC                                  ;SUB sE, 01                          ; decrement by 2
 3DC  25000                           RETURN                                ; go back
 3DD                    stage3_check: 
 3DD  19E01                           SUB sE, 01                            ; decrement by 3
 3DE  1DA08                           COMPARE sA, 08                        ; check if score is above 1000
 3DF  3C3E1                           CALL NC, 3E1[stage4_check]            ; call speed2
 3E0  25000                           RETURN                                ; go back
 3E1                    stage4_check: 
 3E1  19E01                           SUB sE, 01                            ; decrement by 3
 3E2  1DA10                           COMPARE sA, 10                        ; check if score is above 1000
 3E3  3C3E5                           CALL NC, 3E5[stage5_check]            ; call speed2
 3E4  25000                           RETURN 
 3E5                    stage5_check: 
 3E5  19E01                           SUB sE, 01                            ; decrement by 3
 3E6  25000                           RETURN 
 3E7              collision_occurred: 
 3E7  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 3E8  2D701                           OUTPUT s7, 01[stay]                   ; set desired stay
 3E9  09807                           INPUT s8, 07[prng]                    ; load random endx
 3EA  2D802                           OUTPUT s8, 02[endx]                   ; set random endx
 3EB  09807                           INPUT s8, 07[prng]                    ; load random endy
 3EC  2D803                           OUTPUT s8, 03[endy]                   ; set random endy
 3ED  2036D                           CALL 36D[draw_line]                   ; draw random line
 3EE  01902                           LOAD s9, 02[GAMEOVER_STATE]           ; should go to gameover state instead
 3EF  25000                           RETURN                                ; return from routine without any increments
 3F0                                  ;;============================================================================
 3F0                                  ;; Distance - Distance Subroutine
 3F0                                  ;;============================================================================
 3F0  2DB0A                 distance: OUTPUT sB, 0A[qssd_lo]                ; put distance value to qssd
 3F1  1DBFF                           COMPARE sB, FF                        ; check if max (FF) was reached
 3F2  323F5                           JUMP Z, 3F5[distance2]                ; jump to distance2
 3F3  11B01                           ADD sB, 01[one]                       ; increment distance value
 3F4  25000                           RETURN                                ; finished with distance subroutine
 3F5  11A01                distance2: ADD sA, 01[one]                       ; add one to the next degree
 3F6  01B00                           LOAD sB, 00[zero]                     ; reset sB
 3F7  2DB0A                           OUTPUT sB, 0A[qssd_lo]                ; put distance value to qssd
 3F8  2DA0B                           OUTPUT sA, 0B[qssd_hi]                ; put distance value to qssd
 3F9  25000                           RETURN                                ; finished with distance subroutine
 3FA                                  ;;============================================================================
 3FA                                  ;; Interrupt - Vector.
 3FA                                  ;;============================================================================
 7FF                                  ADDRESS 7FF                           ; must be located here
 7FF  22012               isr_vector: JUMP 012[isr]                         ; always jump to isr
 800                                  ;;============================================================================
 800                                  ;;
 800                                  ;;============================================================================



List of PSM files that have been assembled

C:\Users\hpm\Desktop\fpga_video_game\latest_fpga_video_game\software\software.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   17'd         
 timestamp_minutes 53'd         
 timestamp_seconds 15'd         
 datestamp_year    15'd         
 datestamp_month   12'd         
 datestamp_day     01'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 stax              00           software.psm
 stay              01           software.psm
 endx              02           software.psm
 endy              03           software.psm
 busy              04           software.psm
 beam              05           software.psm
 mode              06           software.psm
 prng              07           software.psm
 leds_lo           08           software.psm
 leds_hi           09           software.psm
 qssd_lo           0A           software.psm
 qssd_hi           0B           software.psm
 qssd_dp           0C           software.psm
 switches_lo       0D           software.psm
 switches_hi       0E           software.psm
 buttons           0F           software.psm
 zero              00           software.psm
 one               01           software.psm
 busy_go           01           software.psm
 beam_hi           0F           software.psm
 beam_md           07           software.psm
 beam_lo           03           software.psm
 mode_hld          00           software.psm
 mode_clr          01           software.psm
 mode_lin          02           software.psm
 mode_exp          03           software.psm
 buttons_ct        10           software.psm
 buttons_up        08           software.psm
 buttons_dn        04           software.psm
 buttons_lf        02           software.psm
 buttons_rt        01           software.psm
 START_STATE       00           software.psm
 PLAY_STATE        01           software.psm
 GAMEOVER_STATE    02           software.psm
 CREDITS_STATE     03           software.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.51"        
 datestamp$        "01 Dec 2015"  
 timestamp$        "17:53:15"     



List of line labels

   Label                     Addr  Source PSM File

 * boot                      000   software.psm
   main                      011   software.psm
   isr                       012   software.psm
   start                     019   software.psm
   enter_play_state          01F   software.psm
   stay_in_start_state       021   software.psm
   gameover                  022   software.psm
   enter_play_state2         027   software.psm
   stay_in_gameover_state    031   software.psm
   play                      032   software.psm
   map                       03C   software.psm
   start_screen              047   software.psm
   draw_helicopter           282   software.psm
   draw_block                286   software.psm
   right_edge                28F   software.psm
   left_edge                 293   software.psm
   in_middle                 297   software.psm
   finished1                 29A   software.psm
   random_block_location     2B3   software.psm
   skip_everything           2B8   software.psm
   new_random                2B9   software.psm
   check_other_bound_range   2BD   software.psm
   move_heli_up              2C1   software.psm
   decrement                 2C5   software.psm
   draw_helicopter_cockpit   2C7   software.psm
   draw_helicopter_tail      306   software.psm
   draw_helicopter_blades    33B   software.psm
 * draw_helicopter_smoke     34F   software.psm
   draw_line                 36D   software.psm
   wait                      373   software.psm
   old_draw_line             377   software.psm
   wait0                     379   software.psm
   check_collision           37D   software.psm
   check_vertical            3C8   software.psm
   loop                      3CA   software.psm
   no_collision              3D2   software.psm
   stage2_check              3D8   software.psm
 * speed2                    3DC   software.psm
   stage3_check              3DD   software.psm
   stage4_check              3E1   software.psm
   stage5_check              3E5   software.psm
   collision_occurred        3E7   software.psm
   distance                  3F0   software.psm
   distance2                 3F5   software.psm
 * isr_vector                7FF   software.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD            483
 STAR              -

 AND               -
 OR                -
 XOR               -

 ADD              23
 ADDCY             -
 SUB              53
 SUBCY             -

 TEST              -
 TESTCY            -
 COMPARE          41
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT            11
 OUTPUT          191
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           -
 ENABLE            1
 RETURNI           1

 JUMP             47
 JUMP@             -
 CALL            140
 CALL@             -
 RETURN           28
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
