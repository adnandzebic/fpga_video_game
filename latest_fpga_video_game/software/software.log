KCPSM6 Assembler log file for program 'C:\Users\hpm\Desktop\fpga_video_game\fpga_video_game\latest_fpga_video_game\software\software.psm'.
Generated by KCPSM6 version v2.51
Ken Chapman - Xilinx Ltd - 29th May 2013

Assembly datestamp: 02 Dec 2015
Assembly timestamp: 14:56:43

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 7FF hex
Nominal program memory size: 2K (2048)   address(10:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 1041
Memory locations available: 3055


Assembly listing

 Addr Code                            Instruction

 000                                  ;;============================================================================
 000                                  ;; File: software.psm
 000                                  ;; This is the PicoBlaze program for EE178 Lab #8.
 000                                  ;;============================================================================
 000                                  ;;============================================================================
 000                                  ;; Port address declarations.
 000                                  ;;============================================================================
 000                                  CONSTANT stax, 00                     ; port for 8-bit start-x
 000                                  CONSTANT stay, 01                     ; port for 8-bit start-y
 000                                  CONSTANT endx, 02                     ; port for 8-bit end-x
 000                                  CONSTANT endy, 03                     ; port for 8-bit end-y
 000                                  CONSTANT busy, 04                     ; port for 8-bit busy
 000                                  CONSTANT beam, 05                     ; port for 8-bit beam
 000                                  CONSTANT mode, 06                     ; port for 8-bit mode
 000                                  CONSTANT prng, 07                     ; port for 8-bit prng
 000                                  CONSTANT leds_lo, 08                  ; port for 8-bit led data out
 000                                  CONSTANT leds_hi, 09                  ; port for 8-bit led data out
 000                                  CONSTANT qssd_lo, 0A                  ; port for 8-bit qssd data out
 000                                  CONSTANT qssd_hi, 0B                  ; port for 8-bit qssd data out
 000                                  CONSTANT qssd_dp, 0C                  ; port for 8-bit qssd data out
 000                                  CONSTANT switches_lo, 0D              ; port for 8-bit switch input
 000                                  CONSTANT switches_hi, 0E              ; port for 8-bit switch input
 000                                  CONSTANT buttons, 0F                  ; port for 8-bit button input
 000                                  CONSTANT red, 10                      ; port for 8-bit red value
 000                                  CONSTANT green, 11                    ; port for 8-bit green value
 000                                  CONSTANT blue, 11                     ; port for 8-bit green value
 000                                  CONSTANT zero, 00                     ; zero
 000                                  CONSTANT one, 01                      ; one
 000                                  CONSTANT busy_go, 01                  ; go command and busy status
 000                                  CONSTANT beam_hi, 0F                  ; beam high intensity
 000                                  CONSTANT beam_md, 07                  ; beam med intensity
 000                                  CONSTANT beam_lo, 03                  ; beam low intensity
 000                                  CONSTANT mode_hld, 00                 ; mode hold framebuffer
 000                                  CONSTANT mode_clr, 01                 ; mode clear framebuffer
 000                                  CONSTANT mode_lin, 02                 ; mode linear decay
 000                                  CONSTANT mode_exp, 03                 ; mode exponential decay
 000                                  CONSTANT buttons_ct, 10               ; center
 000                                  CONSTANT buttons_up, 08               ; up
 000                                  CONSTANT buttons_dn, 04               ; down
 000                                  CONSTANT buttons_lf, 02               ; left
 000                                  CONSTANT buttons_rt, 01               ; right
 000                                  CONSTANT start_menu_1, 00             ;
 000                                  CONSTANT start_menu_2, 3C             ;
 000                                  CONSTANT start_menu_3, 78             ;
 000                                  ;;============================================================================
 000                                  ;; Macro State declarations
 000                                  ;;============================================================================
 000                                  CONSTANT START_STATE, 00              ; start screen state
 000                                  CONSTANT PLAY_STATE, 01               ; play state
 000                                  CONSTANT GAMEOVER_STATE, 02           ; game over screen state
 000                                  CONSTANT CREDITS_STATE, 03            ; credits screen state (not used for now)
 000                                  ;;============================================================================
 000                                  ;; Boot.
 000                                  ;;============================================================================
 000  01000                     boot: LOAD s0, 00[zero]                     ; initialize
 001  01100                           LOAD s1, 00[zero]                     ; initialize
 002  01200                           LOAD s2, 00[zero]                     ; initialize
 003  01300                           LOAD s3, 00[zero]                     ; initialize
 004  01400                           LOAD s4, 00[zero]                     ; initialize
 005  01900                           LOAD s9, 00[START_STATE]              ; initial state is to enter start screen
 006  01A00                           LOAD sA, 00                           ; initial distance (score)
 007  01B00                           LOAD sB, 00                           ; initial distance (score)
 008  01C80                           LOAD sC, 80                           ; starting helicopter position
 009  01D05                           LOAD sD, 05                           ; initialize (needed later)
 00A  01EFF                           LOAD sE, FF                           ; load 255 into sE (horizontal coordinate of block)
 00B  01F62                           LOAD sF, 62                           ; load 108 into sF (vertical coordinate of block)
 00C  01503                           LOAD s5, 03[mode_exp]                 ; load desired mode
 00D  2D506                           OUTPUT s5, 06[mode]                   ; set desired mode
 00E  0150F                           LOAD s5, 0F[beam_hi]                  ; load desired beam
 00F  2D505                           OUTPUT s5, 05[beam]                   ; set desired beam
 010  015FF                           LOAD s5, FF                           ; load FF into s5 (red value)
 011  2D510                           OUTPUT s5, 10[red]                    ; set desired red
 012  28001                           ENABLE INTERRUPT                      ; enable interrupts
 013                                  ;;============================================================================
 013                                  ;; Main.
 013                                  ;;============================================================================
 013                            main: 
 013  22013                           JUMP 013[main]                        ; go back and repeat
 014                                  ;;============================================================================
 014                                  ;; Interrupt - Service Routine.
 014                                  ;;============================================================================
 014                             isr: 
 014  1D900                           COMPARE s9, 00[START_STATE]           ; check if in the start state
 015  3001D                           CALL Z, 01D[start]                    ; call the start screen state
 016  1D901                           COMPARE s9, 01[PLAY_STATE]            ; check if in the play state
 017  30047                           CALL Z, 047[play]                     ; call play subroutine
 018  1D902                           COMPARE s9, 02[GAMEOVER_STATE]        ; check if in the gameover state
 019  3002C                           CALL Z, 02C[gameover]                 ; call the gameover subroutine
 01A  1D903                           COMPARE s9, 03[CREDITS_STATE]         ; check if in the credits state
 01B  30026                           CALL Z, 026[credits]                  ; call credits subroutine
 01C  29001                           RETURNI ENABLE                        ; done with isr
 01D                                  ;;============================================================================
 01D                                  ;; Start - Start Subroutine
 01D                                  ;;============================================================================
 01D  0950F                    start: INPUT s5, 0F[buttons]                 ; get center button values
 01E  2005C                           CALL 05C[start_screen]                ; draw the map using map subroutine
 01F  0950F                           INPUT s5, 0F[buttons]                 ; get button values
 020  1D510                           COMPARE s5, 10[buttons_ct]            ; check if center button is pressed
 021  32023                           JUMP Z, 023[enter_play_state]         ; jump to enter_play_state
 022  36025                           JUMP NZ, 025[stay_in_start_state]     ; remain in current state with a jump to stay_in_start_state
 023                                  ;COMPARE
 023                                  ;JUMP Z, credits        ;
 023                enter_play_state: 
 023  01901                           LOAD s9, 01[PLAY_STATE]               ; load play_state and enter play mode
 024  25000                           RETURN                                ; return from start subroutine
 025             stay_in_start_state: 
 025  25000                           RETURN                                ; return from start subroutine
 026                                  ;;============================================================================
 026                                  ;; Credits - Credit Subroutine
 026                                  ;;============================================================================
 026                         credits: 
 026  20298                           CALL 298[draw_credits]                ; draw the credits screen
 027  0950F                           INPUT s5, 0F[buttons]                 ; get button values
 028  1D510                           COMPARE s5, 10[buttons_ct]            ; check if center button is pressed
 029  32023                           JUMP Z, 023[enter_play_state]         ; jump to enter_play_state
 02A  3602B                           JUMP NZ, 02B[stay_in_credit_state]    ; remain in current state with a jump to stay_in_start_state
 02B            stay_in_credit_state: 
 02B  25000                           RETURN 
 02C                                  ;;============================================================================
 02C                                  ;; Game Over - Game Over Subroutine
 02C                                  ;;============================================================================
 02C                        gameover: 
 02C  20051                           CALL 051[map]                         ; draw the map using map subroutine
 02D  20298                           CALL 298[draw_helicopter]             ; draw the helicopter
 02E  2029C                           CALL 29C[draw_block]                  ;
 02F  20297                           CALL 297[draw_gameover]               ;
 030  01564                           LOAD s5, 64                           ; collision point (horizontal)
 031  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 032  2DC01                           OUTPUT sC, 01[stay]                   ; set desired stay
 033  09807                           INPUT s8, 07[prng]                    ; load random endx
 034  2D802                           OUTPUT s8, 02[endx]                   ; set random endx
 035  09807                           INPUT s8, 07[prng]                    ; load random endy
 036  2D803                           OUTPUT s8, 03[endy]                   ; set random endy
 037  2038D                           CALL 38D[old_draw_line]               ; draw random line
 038  0950F                           INPUT s5, 0F[buttons]                 ; get button values
 039  1D508                           COMPARE s5, 08[buttons_up]            ; check if up button is pressed
 03A  3203C                           JUMP Z, 03C[enter_play_state2]        ; jump to enter_play_state2
 03B  36046                           JUMP NZ, 046[stay_in_gameover_state]  ; remain in current state with a jump to stay_in_gameover_state
 03C               enter_play_state2: 
 03C  01901                           LOAD s9, 01[PLAY_STATE]               ; load play_state and enter play mode
 03D                                  ;; RESET EVERYTHING BEFORE RETURNING
 03D  01A00                           LOAD sA, 00                           ; initial distance (score)
 03E  01B00                           LOAD sB, 00                           ; initial distance (score)
 03F  2DB0A                           OUTPUT sB, 0A[qssd_lo]                ; reset qssd_lo
 040  2DA0B                           OUTPUT sA, 0B[qssd_hi]                ; reset qssd_hi
 041  01C80                           LOAD sC, 80                           ; starting helicopter position
 042  01D05                           LOAD sD, 05                           ; initialize (needed later)
 043  01EFF                           LOAD sE, FF                           ; load 255 into sE (horizontal coordinate of block)
 044  01F62                           LOAD sF, 62                           ; load 108 into sF (vertical coordinate of block)
 045  25000                           RETURN                                ; return from start subroutine
 046          stay_in_gameover_state: 
 046  25000                           RETURN                                ; return from start subroutine
 047                                  ;;============================================================================
 047                                  ;; Play - Play Subroutine
 047                                  ;;============================================================================
 047  0950F                     play: INPUT s5, 0F[buttons]                 ; get center button values
 048  20051                           CALL 051[map]                         ; draw the map using map subroutine
 049  0950F                           INPUT s5, 0F[buttons]                 ; get button values
 04A  1D510                           COMPARE s5, 10[buttons_ct]            ; check if center button is pressed
 04B  302D7                           CALL Z, 2D7[move_heli_up]             ; call subroutine that moves the helicopter up
 04C  20298                           CALL 298[draw_helicopter]             ; draw the helicopter
 04D  202C9                           CALL 2C9[random_block_location]       ; determines a random place for the block (y direction only)
 04E  2029C                           CALL 29C[draw_block]                  ; draw the block using draw_block subroutine
 04F  20393                           CALL 393[check_collision]             ; check if any collisions happen
 050  25000                           RETURN                                ; finished with play subroutine
 051                                  ;;============================================================================
 051                                  ;; Map - Draw Map Subroutine
 051                                  ;;============================================================================
 051                             map: 
 051                                  ;;============================================================================
 051                                  ;; Draws Top Line of Map (Line 1)
 051                                  ;;============================================================================
 051  01000                           LOAD s0, 00                           ; load 00 into s0
 052  0110F                           LOAD s1, 0F                           ; load 0F into s1
 053  012FF                           LOAD s2, FF                           ; load FF into s2
 054  0130F                           LOAD s3, 0F                           ; load 0F into s3
 055  20383                           CALL 383[draw_line]                   ; draws the line
 056                                  ;;============================================================================
 056                                  ;; Draws Bottom Line of Map (Line 2)
 056                                  ;;============================================================================
 056  01000                           LOAD s0, 00                           ; load 00 into s0
 057  011F0                           LOAD s1, F0                           ; load 0F into s1
 058  012FF                           LOAD s2, FF                           ; load FF into s2
 059  013F0                           LOAD s3, F0                           ; load F0 into s3
 05A  20383                           CALL 383[draw_line]                   ; draws the line
 05B  25000                           RETURN                                ; go back from drawing map
 05C                                  ;;============================================================================
 05C                                  ;; Start Screen - Draw Start Screen Subroutine
 05C                                  ;;============================================================================
 05C                    start_screen: 
 05C                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 05C                                  ;; Code for PRESS START [START MENU] ;;
 05C                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 05C                                  ;;;;;;;;;;;;;;;
 05C                                  ;;BEGIN PRESS;;
 05C                                  ;;;;;;;;;;;;;;;
 05C                                  ;; LINE 1 (LEFT) FOR P
 05C  01041                           LOAD s0, 41                           ; stax 65
 05D  011C8                           LOAD s1, C8                           ; stay 200
 05E  01241                           LOAD s2, 41                           ; endx 65
 05F  013D2                           LOAD s3, D2                           ; endy 210
 060  20383                           CALL 383[draw_line]                   ;
 061                                  ;; LINE 2 (TOP) FOR P
 061  01041                           LOAD s0, 41                           ; stax 65
 062  011C8                           LOAD s1, C8                           ; stay 200
 063  01246                           LOAD s2, 46                           ; endx 70
 064  013C8                           LOAD s3, C8                           ; endy 200
 065  20383                           CALL 383[draw_line]                   ;
 066                                  ;; LINE 3 (RIGHT) FOR P
 066  01046                           LOAD s0, 46                           ; stax 70
 067  011C8                           LOAD s1, C8                           ; stay 200
 068  01246                           LOAD s2, 46                           ; endx 70
 069  013CD                           LOAD s3, CD                           ; endy 205
 06A  20383                           CALL 383[draw_line]                   ;
 06B                                  ;; LINE 4 (MIDDLE) FOR P
 06B  01041                           LOAD s0, 41                           ; stax 65
 06C  011CD                           LOAD s1, CD                           ; stay 205
 06D  01246                           LOAD s2, 46                           ; endx 70
 06E  013CD                           LOAD s3, CD                           ; endy 205
 06F  20383                           CALL 383[draw_line]                   ;
 070                                  ;; LINE 1 (LEFT) FOR R
 070  0104B                           LOAD s0, 4B                           ; stax 75
 071  011C8                           LOAD s1, C8                           ; stay 200
 072  0124B                           LOAD s2, 4B                           ; endx 75
 073  013D2                           LOAD s3, D2                           ; endy 210
 074  20383                           CALL 383[draw_line]                   ;
 075                                  ;; LINE 2 (TOP) FOR R
 075  0104B                           LOAD s0, 4B                           ; stax 75
 076  011C8                           LOAD s1, C8                           ; stay 200
 077  01250                           LOAD s2, 50                           ; endx 80
 078  013C8                           LOAD s3, C8                           ; endy 200
 079  20383                           CALL 383[draw_line]                   ;
 07A                                  ;; LINE 3 (RIGHT) FOR R
 07A  01050                           LOAD s0, 50                           ; stax 80
 07B  011C8                           LOAD s1, C8                           ; stay 200
 07C  01250                           LOAD s2, 50                           ; endx 80
 07D  013CD                           LOAD s3, CD                           ; endy 205
 07E  20383                           CALL 383[draw_line]                   ;
 07F                                  ;; LINE 4 (MIDDLE) FOR R
 07F  0104B                           LOAD s0, 4B                           ; stax 75
 080  011CD                           LOAD s1, CD                           ; stay 205
 081  01250                           LOAD s2, 50                           ; endx 80
 082  013CD                           LOAD s3, CD                           ; endy 205
 083  20383                           CALL 383[draw_line]                   ;
 084                                  ;; LINE 5 (ANGLED) FOR R
 084  0104B                           LOAD s0, 4B                           ; stax 75
 085  011CD                           LOAD s1, CD                           ; stay 205
 086  01250                           LOAD s2, 50                           ; endx 80
 087  013D2                           LOAD s3, D2                           ; endy 210
 088  20383                           CALL 383[draw_line]                   ;
 089                                  ;; LINE 6 (ANGLED2) FOR R
 089  0104B                           LOAD s0, 4B                           ; stax 75
 08A  011CE                           LOAD s1, CE                           ; stay 204
 08B  0124F                           LOAD s2, 4F                           ; endx 79
 08C  013D2                           LOAD s3, D2                           ; endy 210
 08D  20383                           CALL 383[draw_line]                   ;
 08E                                  ;; LINE 1 (LEFT) FOR E
 08E  01055                           LOAD s0, 55                           ; stax 85
 08F  011C8                           LOAD s1, C8                           ; stay 200
 090  01255                           LOAD s2, 55                           ; endx 85
 091  013D2                           LOAD s3, D2                           ; endy 210
 092  20383                           CALL 383[draw_line]                   ;
 093                                  ;; LINE 2 (TOP) FOR E
 093  01055                           LOAD s0, 55                           ; stax 85
 094  011C8                           LOAD s1, C8                           ; stay 200
 095  0125A                           LOAD s2, 5A                           ; endx 90
 096  013C8                           LOAD s3, C8                           ; endy 200
 097  20383                           CALL 383[draw_line]                   ;
 098                                  ;; LINE 3 (MIDDLE) FOR E
 098  01055                           LOAD s0, 55                           ; stax 85
 099  011CD                           LOAD s1, CD                           ; stay 205
 09A  0125A                           LOAD s2, 5A                           ; endx 90
 09B  013CD                           LOAD s3, CD                           ; endy 205
 09C  20383                           CALL 383[draw_line]                   ;
 09D                                  ;; LINE 4 (BOTTOM) FOR E
 09D  01055                           LOAD s0, 55                           ; stax 85
 09E  011D2                           LOAD s1, D2                           ; stay 210
 09F  0125A                           LOAD s2, 5A                           ; endx 90
 0A0  013D2                           LOAD s3, D2                           ; endy 210
 0A1  20383                           CALL 383[draw_line]                   ;
 0A2                                  ;; LINE 1 (TOP) FOR S1
 0A2  0105F                           LOAD s0, 5F                           ; stax 95
 0A3  011C8                           LOAD s1, C8                           ; stay 200
 0A4  01264                           LOAD s2, 64                           ; endx 100
 0A5  013C8                           LOAD s3, C8                           ; endy 200
 0A6  20383                           CALL 383[draw_line]                   ;
 0A7                                  ;; LINE 2 (TOPLEFT) FOR S1
 0A7  0105F                           LOAD s0, 5F                           ; stax 95
 0A8  011C8                           LOAD s1, C8                           ; stay 200
 0A9  0125F                           LOAD s2, 5F                           ; endx 95
 0AA  013CD                           LOAD s3, CD                           ; endy 205
 0AB  20383                           CALL 383[draw_line]                   ;
 0AC                                  ;; LINE 3 (MIDDLE) FOR S1
 0AC  0105F                           LOAD s0, 5F                           ; stax 95
 0AD  011CD                           LOAD s1, CD                           ; stay 205
 0AE  01264                           LOAD s2, 64                           ; endx 100
 0AF  013CD                           LOAD s3, CD                           ; endy 205
 0B0  20383                           CALL 383[draw_line]                   ;
 0B1                                  ;; LINE 4 (BOTTOMRIGHT) FOR S1
 0B1  01064                           LOAD s0, 64                           ; stax 100
 0B2  011CD                           LOAD s1, CD                           ; stay 205
 0B3  01264                           LOAD s2, 64                           ; endx 100
 0B4  013D2                           LOAD s3, D2                           ; endy 210
 0B5  20383                           CALL 383[draw_line]                   ;
 0B6                                  ;; LINE 5 (BOTTOM) FOR S1
 0B6  0105F                           LOAD s0, 5F                           ; stax 95
 0B7  011D2                           LOAD s1, D2                           ; stay 210
 0B8  01264                           LOAD s2, 64                           ; endx 100
 0B9  013D2                           LOAD s3, D2                           ; endy 210
 0BA  20383                           CALL 383[draw_line]                   ;
 0BB                                  ;; LINE 1 (TOP) FOR S2
 0BB  01069                           LOAD s0, 69                           ; stax 105
 0BC  011C8                           LOAD s1, C8                           ; stay 200
 0BD  0126E                           LOAD s2, 6E                           ; endx 110
 0BE  013C8                           LOAD s3, C8                           ; endy 200
 0BF  20383                           CALL 383[draw_line]                   ;
 0C0                                  ;; LINE 2 (TOPLEFT) FOR S2
 0C0  01069                           LOAD s0, 69                           ; stax 105
 0C1  011C8                           LOAD s1, C8                           ; stay 200
 0C2  01269                           LOAD s2, 69                           ; endx 105
 0C3  013CD                           LOAD s3, CD                           ; endy 205
 0C4  20383                           CALL 383[draw_line]                   ;
 0C5                                  ;; LINE 3 (MIDDLE) FOR S2
 0C5  01069                           LOAD s0, 69                           ; stax 105
 0C6  011CD                           LOAD s1, CD                           ; stay 205
 0C7  0126E                           LOAD s2, 6E                           ; endx 110
 0C8  013CD                           LOAD s3, CD                           ; endy 205
 0C9  20383                           CALL 383[draw_line]                   ;
 0CA                                  ;; LINE 4 (BOTTOMRIGHT) FOR S2
 0CA  0106E                           LOAD s0, 6E                           ; stax 110
 0CB  011CD                           LOAD s1, CD                           ; stay 205
 0CC  0126E                           LOAD s2, 6E                           ; endx 110
 0CD  013D2                           LOAD s3, D2                           ; endy 210
 0CE  20383                           CALL 383[draw_line]                   ;
 0CF                                  ;; LINE 5 (BOTTOM) FOR S2
 0CF  01069                           LOAD s0, 69                           ; stax 105
 0D0  011D2                           LOAD s1, D2                           ; stay 210
 0D1  0126E                           LOAD s2, 6E                           ; endx 110
 0D2  013D2                           LOAD s3, D2                           ; endy 210
 0D3  20383                           CALL 383[draw_line]                   ;
 0D4                                  ;;;;;;;;;;;;;;;
 0D4                                  ;;BEGIN START;;
 0D4                                  ;;;;;;;;;;;;;;;
 0D4                                  ;; LINE 1 (TOP) FOR S
 0D4  01082                           LOAD s0, 82                           ; stax 130
 0D5  011C8                           LOAD s1, C8                           ; stay 200
 0D6  01288                           LOAD s2, 88                           ; endx 135
 0D7  013C8                           LOAD s3, C8                           ; endy 200
 0D8  20383                           CALL 383[draw_line]                   ;
 0D9                                  ;; LINE 2 (TOPLEFT) FOR S
 0D9  01082                           LOAD s0, 82                           ; stax 130
 0DA  011C8                           LOAD s1, C8                           ; stay 200
 0DB  01282                           LOAD s2, 82                           ; endx 130
 0DC  013CD                           LOAD s3, CD                           ; endy 205
 0DD  20383                           CALL 383[draw_line]                   ;
 0DE                                  ;; LINE 3 (MIDDLE) FOR S
 0DE  01082                           LOAD s0, 82                           ; stax 130
 0DF  011CD                           LOAD s1, CD                           ; stay 205
 0E0  01287                           LOAD s2, 87                           ; endx 135
 0E1  013CD                           LOAD s3, CD                           ; endy 205
 0E2  20383                           CALL 383[draw_line]                   ;
 0E3                                  ;; LINE 4 (BOTTOMRIGHT) FOR S
 0E3  01087                           LOAD s0, 87                           ; stax 135
 0E4  011CD                           LOAD s1, CD                           ; stay 205
 0E5  01287                           LOAD s2, 87                           ; endx 135
 0E6  013D2                           LOAD s3, D2                           ; endy 210
 0E7  20383                           CALL 383[draw_line]                   ;
 0E8                                  ;; LINE 5 (BOTTOM) FOR S
 0E8  01082                           LOAD s0, 82                           ; stax 130
 0E9  011D2                           LOAD s1, D2                           ; stay 210
 0EA  01287                           LOAD s2, 87                           ; endx 135
 0EB  013D2                           LOAD s3, D2                           ; endy 210
 0EC  20383                           CALL 383[draw_line]                   ;
 0ED                                  ;; LINE 1 (TOP) FOR T1
 0ED  0108C                           LOAD s0, 8C                           ; stax 140
 0EE  011C8                           LOAD s1, C8                           ; stay 200
 0EF  01293                           LOAD s2, 93                           ; endx 147
 0F0  013C8                           LOAD s3, C8                           ; endy 200
 0F1  20383                           CALL 383[draw_line]                   ;
 0F2                                  ;; LINE 2 (MIDDLE) FOR T1
 0F2  0108F                           LOAD s0, 8F                           ; stax 143
 0F3  011C8                           LOAD s1, C8                           ; stay 200
 0F4  0128F                           LOAD s2, 8F                           ; endx 143
 0F5  013D2                           LOAD s3, D2                           ; endy 210
 0F6  20383                           CALL 383[draw_line]                   ;
 0F7                                  ;; LINE 1 (LEFT) FOR A
 0F7  01096                           LOAD s0, 96                           ; stax 150
 0F8  011C8                           LOAD s1, C8                           ; stay 200
 0F9  01296                           LOAD s2, 96                           ; endx 150
 0FA  013D2                           LOAD s3, D2                           ; endy 210
 0FB  20383                           CALL 383[draw_line]                   ;
 0FC                                  ;; LINE 2 (TOP) FOR A
 0FC  01096                           LOAD s0, 96                           ; stax 150
 0FD  011C8                           LOAD s1, C8                           ; stay 200
 0FE  0129B                           LOAD s2, 9B                           ; endx 155
 0FF  013C8                           LOAD s3, C8                           ; endy 200
 100  20383                           CALL 383[draw_line]                   ;
 101                                  ;; LINE 3 (MIDDLE) FOR A
 101  01096                           LOAD s0, 96                           ; stax 150
 102  011CD                           LOAD s1, CD                           ; stay 205
 103  0129B                           LOAD s2, 9B                           ; endx 155
 104  013CD                           LOAD s3, CD                           ; endy 205
 105  20383                           CALL 383[draw_line]                   ;
 106                                  ;; LINE 4 (RIGHT) FOR A
 106  0109B                           LOAD s0, 9B                           ; stax 155
 107  011C8                           LOAD s1, C8                           ; stay 200
 108  0129B                           LOAD s2, 9B                           ; endx 155
 109  013D2                           LOAD s3, D2                           ; endy 210
 10A  20383                           CALL 383[draw_line]                   ;
 10B                                  ;; LINE 1 (LEFT) FOR R
 10B  010A0                           LOAD s0, A0                           ; stax 160
 10C  011C8                           LOAD s1, C8                           ; stay 200
 10D  012A0                           LOAD s2, A0                           ; endx 160
 10E  013D2                           LOAD s3, D2                           ; endy 210
 10F  20383                           CALL 383[draw_line]                   ;
 110                                  ;; LINE 2 (TOP) FOR R
 110  010A0                           LOAD s0, A0                           ; stax 160
 111  011C8                           LOAD s1, C8                           ; stay 200
 112  012A5                           LOAD s2, A5                           ; endx 165
 113  013C8                           LOAD s3, C8                           ; endy 200
 114  20383                           CALL 383[draw_line]                   ;
 115                                  ;; LINE 3 (RIGHT) FOR R
 115  010A5                           LOAD s0, A5                           ; stax 165
 116  011C8                           LOAD s1, C8                           ; stay 200
 117  012A5                           LOAD s2, A5                           ; endx 165
 118  013CD                           LOAD s3, CD                           ; endy 205
 119  20383                           CALL 383[draw_line]                   ;
 11A                                  ;; LINE 4 (MIDDLE) FOR R
 11A  010A0                           LOAD s0, A0                           ; stax 160
 11B  011CD                           LOAD s1, CD                           ; stay 205
 11C  012A5                           LOAD s2, A5                           ; endx 165
 11D  013CD                           LOAD s3, CD                           ; endy 205
 11E  20383                           CALL 383[draw_line]                   ;
 11F                                  ;; LINE 5 (ANGLED) FOR R
 11F  010A0                           LOAD s0, A0                           ; stax 160
 120  011CD                           LOAD s1, CD                           ; stay 205
 121  012A5                           LOAD s2, A5                           ; endx 165
 122  013D2                           LOAD s3, D2                           ; endy 210
 123  20383                           CALL 383[draw_line]                   ;
 124                                  ;; LINE 6 (ANGLED2) FOR R
 124  010A0                           LOAD s0, A0                           ; stax 160
 125  011CE                           LOAD s1, CE                           ; stay 206
 126  012A4                           LOAD s2, A4                           ; endx 164
 127  013D2                           LOAD s3, D2                           ; endy 210
 128  20383                           CALL 383[draw_line]                   ;
 129                                  ;; LINE 1 (TOP) FOR T2
 129  010AA                           LOAD s0, AA                           ; stax 170
 12A  011C8                           LOAD s1, C8                           ; stay 200
 12B  012B1                           LOAD s2, B1                           ; endx 177
 12C  013C8                           LOAD s3, C8                           ; endy 200
 12D  20383                           CALL 383[draw_line]                   ;
 12E                                  ;; LINE 2 (MIDDLE) FOR T2
 12E  010AD                           LOAD s0, AD                           ; stax 173
 12F  011C8                           LOAD s1, C8                           ; stay 200
 130  012AD                           LOAD s2, AD                           ; endx 173
 131  013D2                           LOAD s3, D2                           ; endy 210
 132  20383                           CALL 383[draw_line]                   ;
 133                                  ;;============================================================================
 133                                  ;; Draws Decoration (Line 1a)
 133                                  ;;============================================================================
 133  01000                           LOAD s0, 00                           ; load 00 into s0
 134  0110A                           LOAD s1, 0A                           ; load 0A into s1
 135  012FF                           LOAD s2, FF                           ; load FF into s2
 136  0130A                           LOAD s3, 0A                           ; load 0A into s3
 137  20383                           CALL 383[draw_line]                   ; draws the line
 138                                  ;;===========================================================================
 138                                  ;; Draws Decoration (Line 2a)
 138                                  ;;============================================================================
 138  01000                           LOAD s0, 00                           ; load 00 into s0
 139  0110C                           LOAD s1, 0C                           ; load 0C into s1
 13A  012FF                           LOAD s2, FF                           ; load FF into s2
 13B  0130C                           LOAD s3, 0C                           ; load 0C into s3
 13C  20383                           CALL 383[draw_line]                   ; draws the line
 13D                                  ;;===========================================================================
 13D                                  ;; Draws Decoration (Line 3a)
 13D                                  ;;============================================================================
 13D  01000                           LOAD s0, 00                           ; load 00 into s0
 13E  0110E                           LOAD s1, 0E                           ; load 0E into s1
 13F  012FF                           LOAD s2, FF                           ; load FF into s2
 140  0130E                           LOAD s3, 0E                           ; load 0E into s3
 141  20383                           CALL 383[draw_line]                   ; draws the line
 142                                  ;;============================================================================
 142                                  ;; Draws Decoration (Line 1b)
 142                                  ;;============================================================================
 142  01000                           LOAD s0, 00                           ; load 00 into s0
 143  01188                           LOAD s1, 88                           ; load 88 into s1
 144  012FF                           LOAD s2, FF                           ; load FF into s2
 145  01388                           LOAD s3, 88                           ; load 88 into s3
 146  20383                           CALL 383[draw_line]                   ; draws the line
 147                                  ;;===========================================================================
 147                                  ;; Draws Decoration (Line 2b)
 147                                  ;;============================================================================
 147  01000                           LOAD s0, 00                           ; load 00 into s0
 148  0118A                           LOAD s1, 8A                           ; load 8A into s1
 149  012FF                           LOAD s2, FF                           ; load FF into s2
 14A  0138A                           LOAD s3, 8A                           ; load 8A into s3
 14B  20383                           CALL 383[draw_line]                   ; draws the line
 14C                                  ;;===========================================================================
 14C                                  ;; Draws Decoration (Line 3b)
 14C                                  ;;============================================================================
 14C  01000                           LOAD s0, 00                           ; load 00 into s0
 14D  0118C                           LOAD s1, 8C                           ; load 8A into s1
 14E  012FF                           LOAD s2, FF                           ; load FF into s2
 14F  0138C                           LOAD s3, 8C                           ; load 8C into s3
 150  20383                           CALL 383[draw_line]                   ; draws the line
 151                                  ;;============================================================================
 151                                  ;; Draws the letter H (Line 1)
 151                                  ;;============================================================================
 151                                  ;; STARTING POINT
 151  0150A                           LOAD s5, 0A                           ; load 10 into s5
 152  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 153  0161E                           LOAD s6, 1E                           ; load 30 into s6
 154  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 155                                  ;; ENDING POINT
 155  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 156  0163C                           LOAD s6, 3C                           ; load 60 into s6
 157  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 158  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 159                                  ;;============================================================================
 159                                  ;; Draws the letter H (Line 2)
 159                                  ;;============================================================================
 159                                  ;; STARTING POINT
 159  0150A                           LOAD s5, 0A                           ; load 10 into s5
 15A  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 15B  0162D                           LOAD s6, 2D                           ; load 45 into s6
 15C  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 15D                                  ;; ENDING POINT
 15D  0151E                           LOAD s5, 1E                           ; load 30 into s5
 15E  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 15F  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 160  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 161                                  ;;============================================================================
 161                                  ;; Draws the letter H (Line 3)
 161                                  ;;============================================================================
 161                                  ;; STARTING POINT
 161  0151E                           LOAD s5, 1E                           ; load 30 into s5
 162  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 163  0161E                           LOAD s6, 1E                           ; load 30 into s6
 164  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 165                                  ;; ENDING POINT
 165  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 166  0163C                           LOAD s6, 3C                           ; load 60 into s6
 167  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 168  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 169                                  ;;============================================================================
 169                                  ;; Draws the letter E (Line 1)
 169                                  ;;============================================================================
 169                                  ;; STARTING POINT
 169  01528                           LOAD s5, 28                           ; load 40 into s5
 16A  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 16B  0161E                           LOAD s6, 1E                           ; load 30 into s6
 16C  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 16D                                  ;; ENDING POINT
 16D  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 16E  0163C                           LOAD s6, 3C                           ; load 60 into s6
 16F  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 170  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 171                                  ;;============================================================================
 171                                  ;; Draws the letter E (Line 2)
 171                                  ;;============================================================================
 171                                  ;; STARTING POINT
 171  01528                           LOAD s5, 28                           ; load 40 into s5
 172  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 173  0161E                           LOAD s6, 1E                           ; load 30 into s6
 174  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 175                                  ;; ENDING POINT
 175  0153C                           LOAD s5, 3C                           ; load 60 into s5
 176  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 177  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 178  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 179                                  ;;============================================================================
 179                                  ;; Draws the letter E (Line 3)
 179                                  ;;============================================================================
 179                                  ;; STARTING POINT
 179  01528                           LOAD s5, 28                           ; load 40 into s5
 17A  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 17B  0162D                           LOAD s6, 2D                           ; load 45 into s6
 17C  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 17D                                  ;; ENDING POINT
 17D  0153C                           LOAD s5, 3C                           ; load 60 into s5
 17E  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 17F  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 180  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 181                                  ;;============================================================================
 181                                  ;; Draws the letter E (Line 3)
 181                                  ;;============================================================================
 181                                  ;; STARTING POINT
 181  01528                           LOAD s5, 28                           ; load 40 into s5
 182  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 183  0163C                           LOAD s6, 3C                           ; load 45 into s6
 184  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 185                                  ;; ENDING POINT
 185  0153C                           LOAD s5, 3C                           ; load 60 into s5
 186  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 187  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 188  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 189                                  ;;============================================================================
 189                                  ;; Draws the letter L (Line 1)
 189                                  ;;============================================================================
 189                                  ;; STARTING POINT
 189  01546                           LOAD s5, 46                           ; load 70 into s5
 18A  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 18B  0161E                           LOAD s6, 1E                           ; load 30 into s6
 18C  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 18D                                  ;; ENDING POINT
 18D  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 18E  0163C                           LOAD s6, 3C                           ; load 60 into s6
 18F  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 190  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 191                                  ;;============================================================================
 191                                  ;; Draws the letter L (Line 2)
 191                                  ;;============================================================================
 191                                  ;; STARTING POINT
 191  01546                           LOAD s5, 46                           ; load 70 into s5
 192  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 193  0163C                           LOAD s6, 3C                           ; load 45 into s6
 194  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 195                                  ;; ENDING POINT
 195  0155A                           LOAD s5, 5A                           ; load 90 into s5
 196  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 197  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 198  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 199                                  ;;============================================================================
 199                                  ;; Draws the letter I (Line 1)
 199                                  ;;============================================================================
 199                                  ;; STARTING POINT
 199  01564                           LOAD s5, 64                           ; load 70 into s5
 19A  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 19B  0161E                           LOAD s6, 1E                           ; load 30 into s6
 19C  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 19D                                  ;; ENDING POINT
 19D  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 19E  0163C                           LOAD s6, 3C                           ; load 60 into s6
 19F  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1A0  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1A1                                  ;;============================================================================
 1A1                                  ;; Draws the letter C (Line 1)
 1A1                                  ;;============================================================================
 1A1                                  ;; STARTING POINT
 1A1  01582                           LOAD s5, 82                           ; load 130 into s5
 1A2  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1A3  0161E                           LOAD s6, 1E                           ; load 45 into s6
 1A4  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1A5                                  ;; ENDING POINT
 1A5  01573                           LOAD s5, 73                           ; load 115 into s5
 1A6  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1A7  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1A8  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1A9                                  ;;============================================================================
 1A9                                  ;; Draws the letter C (Line 2)
 1A9                                  ;;============================================================================
 1A9                                  ;; STARTING POINT
 1A9  01573                           LOAD s5, 73                           ; load 115 into s5
 1AA  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1AB  0161E                           LOAD s6, 1E                           ; load 45 into s6
 1AC  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1AD                                  ;; ENDING POINT
 1AD  0156E                           LOAD s5, 6E                           ; load 110 into s5
 1AE  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1AF  01623                           LOAD s6, 23                           ; load 35 into s6
 1B0  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1B1  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1B2                                  ;;============================================================================
 1B2                                  ;; Draws the letter C (Line 3)
 1B2                                  ;;============================================================================
 1B2                                  ;; STARTING POINT
 1B2  0156E                           LOAD s5, 6E                           ; load 110 into s5
 1B3  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1B4  01623                           LOAD s6, 23                           ; load 35 into s6
 1B5  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1B6                                  ;; ENDING POINT
 1B6  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1B7  01637                           LOAD s6, 37                           ; load 55 into s6
 1B8  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1B9  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1BA                                  ;;============================================================================
 1BA                                  ;; Draws the letter C (Line 4)
 1BA                                  ;;============================================================================
 1BA                                  ;; STARTING POINT
 1BA  0156E                           LOAD s5, 6E                           ; load 110 into s5
 1BB  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1BC  01637                           LOAD s6, 37                           ; load 55 into s6
 1BD  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1BE                                  ;; ENDING POINT
 1BE  01573                           LOAD s5, 73                           ; load 130 into s5
 1BF  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1C0  0163B                           LOAD s6, 3B                           ; load 44 into s6
 1C1  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1C2  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1C3                                  ;;============================================================================
 1C3                                  ;; Draws the letter C (Line 5)
 1C3                                  ;;============================================================================
 1C3                                  ;; STARTING POINT
 1C3  01582                           LOAD s5, 82                           ; load 130 into s5
 1C4  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1C5  0163C                           LOAD s6, 3C                           ; load 45 into s6
 1C6  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1C7                                  ;; ENDING POINT
 1C7  01573                           LOAD s5, 73                           ; load 115 into s5
 1C8  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1C9  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1CA  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1CB                                  ;;============================================================================
 1CB                                  ;; Draws the letter O (Line 1)
 1CB                                  ;;============================================================================
 1CB                                  ;; STARTING POINT
 1CB  01591                           LOAD s5, 91                           ; load 145 into s5
 1CC  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1CD  0161E                           LOAD s6, 1E                           ; load 30 into s6
 1CE  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1CF                                  ;; ENDING POINT
 1CF  0159B                           LOAD s5, 9B                           ; load 155 into s5
 1D0  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1D1  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1D2  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1D3                                  ;;============================================================================
 1D3                                  ;; Draws the letter O (Line 2)
 1D3                                  ;;============================================================================
 1D3                                  ;; STARTING POINT
 1D3  01591                           LOAD s5, 91                           ; load 145 into s5
 1D4  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1D5  0161E                           LOAD s6, 1E                           ; load 45 into s6
 1D6  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1D7                                  ;; ENDING POINT
 1D7  0158C                           LOAD s5, 8C                           ; load 110 into s5
 1D8  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1D9  0161E                           LOAD s6, 1E                           ; load 35 into s6
 1DA  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1DB  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1DC                                  ;;============================================================================
 1DC                                  ;; Draws the letter O (Line 3)
 1DC                                  ;;============================================================================
 1DC                                  ;; STARTING POINT
 1DC  0158C                           LOAD s5, 8C                           ; load 140 into s5
 1DD  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1DE  0161E                           LOAD s6, 1E                           ; load 30 into s6
 1DF  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1E0                                  ;; ENDING POINT
 1E0  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1E1  0163C                           LOAD s6, 3C                           ; load 60 into s6
 1E2  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1E3  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1E4                                  ;;============================================================================
 1E4                                  ;; Draws the letter O (Line 4)
 1E4                                  ;;============================================================================
 1E4                                  ;; STARTING POINT
 1E4  0158C                           LOAD s5, 8C                           ; load 110 into s5
 1E5  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1E6  0163C                           LOAD s6, 3C                           ; load 55 into s6
 1E7  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1E8                                  ;; ENDING POINT
 1E8  01591                           LOAD s5, 91                           ; load 145 into s5
 1E9  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1EA  0163C                           LOAD s6, 3C                           ; load 30 into s6
 1EB  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1EC  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1ED                                  ;;============================================================================
 1ED                                  ;; Draws the letter O (Line 5)
 1ED                                  ;;============================================================================
 1ED                                  ;; STARTING POINT
 1ED  01591                           LOAD s5, 91                           ; load 145 into s5
 1EE  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1EF  0163C                           LOAD s6, 3C                           ; load 30 into s6
 1F0  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1F1                                  ;; ENDING POINT
 1F1  0159B                           LOAD s5, 9B                           ; load 155 into s5
 1F2  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1F3  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1F4  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1F5                                  ;;============================================================================
 1F5                                  ;; Draws the letter O (Line 6)
 1F5                                  ;;============================================================================
 1F5                                  ;; STARTING POINT
 1F5  0159B                           LOAD s5, 9B                           ; load 110 into s5
 1F6  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1F7  0163C                           LOAD s6, 3C                           ; load 55 into s6
 1F8  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1F9                                  ;; ENDING POINT
 1F9  015A0                           LOAD s5, A0                           ; load 160 into s5
 1FA  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1FB  0163C                           LOAD s6, 3C                           ; load 30 into s6
 1FC  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1FD  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1FE                                  ;;============================================================================
 1FE                                  ;; Draws the letter O (Line 7)
 1FE                                  ;;============================================================================
 1FE                                  ;; STARTING POINT
 1FE  015A0                           LOAD s5, A0                           ; load 160 into s5
 1FF  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 200  0161E                           LOAD s6, 1E                           ; load 30 into s6
 201  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 202                                  ;; ENDING POINT
 202  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 203  0163C                           LOAD s6, 3C                           ; load 60 into s6
 204  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 205  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 206                                  ;;============================================================================
 206                                  ;; Draws the letter O (Line 8)
 206                                  ;;============================================================================
 206                                  ;; STARTING POINT
 206  015A0                           LOAD s5, A0                           ; load 160 into s5
 207  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 208  0161E                           LOAD s6, 1E                           ; load 30 into s6
 209  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 20A                                  ;; ENDING POINT
 20A  0159B                           LOAD s5, 9B                           ; load 155 into s5
 20B  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 20C  0161E                           LOAD s6, 1E                           ; load 30 into s6
 20D  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 20E  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 20F                                  ;;============================================================================
 20F                                  ;; Draws the letter P (Line 1)
 20F                                  ;;============================================================================
 20F  010AA                           LOAD s0, AA                           ; load 170 into s0
 210  0111E                           LOAD s1, 1E                           ; load 30 into s1
 211  012BE                           LOAD s2, BE                           ; load 190 into s2
 212  0131E                           LOAD s3, 1E                           ; keep s3 set at 30
 213  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 214                                  ;;============================================================================
 214                                  ;; Draws the letter P (Line 2)
 214                                  ;;============================================================================
 214  010AA                           LOAD s0, AA                           ; load 170 into s0
 215  0111E                           LOAD s1, 1E                           ; load 30 into s1
 216  012AA                           LOAD s2, AA                           ; load 170 into s2
 217  0133C                           LOAD s3, 3C                           ; load 60 into s3
 218  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 219                                  ;;============================================================================
 219                                  ;; Draws the letter P (Line 3)
 219                                  ;;============================================================================
 219  010AA                           LOAD s0, AA                           ; load 170 into s0
 21A  0112D                           LOAD s1, 2D                           ; load 45 into s1
 21B  012BE                           LOAD s2, BE                           ; load 190 into s2
 21C  0132D                           LOAD s3, 2D                           ; keep s0 set at 45
 21D  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 21E                                  ;;============================================================================
 21E                                  ;; Draws the letter P (Line 4)
 21E                                  ;;============================================================================
 21E  010BE                           LOAD s0, BE                           ; load 190 into s0
 21F  0111E                           LOAD s1, 1E                           ; load 30 into s1
 220  012BE                           LOAD s2, BE                           ; load 190 into s2
 221  0132D                           LOAD s3, 2D                           ; load 45 to s3
 222  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 223                                  ;;============================================================================
 223                                  ;; Draws the letter T (Line 1)
 223                                  ;;============================================================================
 223  010C8                           LOAD s0, C8                           ; load 200 into s0
 224  0111E                           LOAD s1, 1E                           ; load 30 into s1
 225  012DC                           LOAD s2, DC                           ; load 220 into s2
 226  0131E                           LOAD s3, 1E                           ; load 30 to s3
 227  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 228                                  ;;============================================================================
 228                                  ;; Draws the letter T (Line 2)
 228                                  ;;============================================================================
 228  010D2                           LOAD s0, D2                           ; load 200 into s0
 229  0111E                           LOAD s1, 1E                           ; load 30 into s1
 22A  012D2                           LOAD s2, D2                           ; load 220 into s2
 22B  0133C                           LOAD s3, 3C                           ; load 60 to s3
 22C  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 22D                                  ;;============================================================================
 22D                                  ;; Draws the letter E (Line 1)
 22D                                  ;;============================================================================
 22D  010E6                           LOAD s0, E6                           ; load 230 into s0
 22E  0111E                           LOAD s1, 1E                           ; load 30 into s1
 22F  012E6                           LOAD s2, E6                           ; load 230 into s2
 230  0133C                           LOAD s3, 3C                           ; load 30 to s3
 231  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 232                                  ;;============================================================================
 232                                  ;; Draws the letter E (Line 2)
 232                                  ;;============================================================================
 232  010E6                           LOAD s0, E6                           ; load 230 into s0
 233  0111E                           LOAD s1, 1E                           ; load 30 into s1
 234  012FA                           LOAD s2, FA                           ; load 250 into s2
 235  0131E                           LOAD s3, 1E                           ; load 30 to s3
 236  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 237                                  ;;============================================================================
 237                                  ;; Draws the letter E (Line 3)
 237                                  ;;============================================================================
 237  010E6                           LOAD s0, E6                           ; load 230 into s0
 238  0112D                           LOAD s1, 2D                           ; load 30 into s1
 239  012FA                           LOAD s2, FA                           ; load 250 into s2
 23A  0132D                           LOAD s3, 2D                           ; load 30 to s3
 23B  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 23C                                  ;;============================================================================
 23C                                  ;; Draws the letter E (Line 4)
 23C                                  ;;============================================================================
 23C  010E6                           LOAD s0, E6                           ; load 230 into s0
 23D  0113C                           LOAD s1, 3C                           ; load 30 into s1
 23E  012FA                           LOAD s2, FA                           ; load 250 into s2
 23F  0133C                           LOAD s3, 3C                           ; load 30 to s3
 240  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 241                                  ;;============================================================================
 241                                  ;; NEW LINE STARTS HERE (GAME)
 241                                  ;;============================================================================
 241                                  ;;============================================================================
 241                                  ;; Draws the letter G (Line 1)
 241                                  ;;============================================================================
 241  01046                           LOAD s0, 46                           ; load 70 into s0
 242  0115A                           LOAD s1, 5A                           ; load 90 into s1
 243  0125A                           LOAD s2, 5A                           ; load 90 into s2
 244  0135A                           LOAD s3, 5A                           ; load 90 to s3
 245  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 246                                  ;;============================================================================
 246                                  ;; Draws the letter G (Line 2)
 246                                  ;;============================================================================
 246  01046                           LOAD s0, 46                           ; load 70 into s0
 247  0115A                           LOAD s1, 5A                           ; load 90 into s1
 248  01246                           LOAD s2, 46                           ; load 90 into s2
 249  01378                           LOAD s3, 78                           ; load 90 to s3
 24A  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 24B                                  ;;============================================================================
 24B                                  ;; Draws the letter G (Line 3)
 24B                                  ;;============================================================================
 24B  01046                           LOAD s0, 46                           ; load 70 into s0
 24C  01178                           LOAD s1, 78                           ; load 90 into s1
 24D  0125A                           LOAD s2, 5A                           ; load 90 into s2
 24E  01378                           LOAD s3, 78                           ; load 90 to s3
 24F  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 250                                  ;;============================================================================
 250                                  ;; Draws the letter G (Line 4)
 250                                  ;;============================================================================
 250  0105A                           LOAD s0, 5A                           ; load 70 into s0
 251  01169                           LOAD s1, 69                           ; load 90 into s1
 252  0125A                           LOAD s2, 5A                           ; load 90 into s2
 253  01378                           LOAD s3, 78                           ; load 90 to s3
 254  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 255                                  ;;============================================================================
 255                                  ;; Draws the letter G (Line 5)
 255                                  ;;============================================================================
 255  0105A                           LOAD s0, 5A                           ; load 70 into s0
 256  01169                           LOAD s1, 69                           ; load 90 into s1
 257  01250                           LOAD s2, 50                           ; load 90 into s2
 258  01369                           LOAD s3, 69                           ; load 90 to s3
 259  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 25A                                  ;;============================================================================
 25A                                  ;; Draws the letter A (Line 1)
 25A                                  ;;============================================================================
 25A  01064                           LOAD s0, 64                           ; 100
 25B  0115A                           LOAD s1, 5A                           ; 90
 25C  01278                           LOAD s2, 78                           ; 120
 25D  0135A                           LOAD s3, 5A                           ; 90
 25E  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 25F                                  ;;============================================================================
 25F                                  ;; Draws the letter A (Line 2)
 25F                                  ;;============================================================================
 25F  01064                           LOAD s0, 64                           ; 100
 260  01169                           LOAD s1, 69                           ; 105
 261  01278                           LOAD s2, 78                           ; 120
 262  01369                           LOAD s3, 69                           ; 105
 263  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 264                                  ;;============================================================================
 264                                  ;; Draws the letter A (Line 3)
 264                                  ;;============================================================================
 264  01064                           LOAD s0, 64                           ; 100
 265  0115A                           LOAD s1, 5A                           ; 90
 266  01264                           LOAD s2, 64                           ; 100
 267  01378                           LOAD s3, 78                           ; 120
 268  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 269                                  ;;============================================================================
 269                                  ;; Draws the letter A (Line 4)
 269                                  ;;============================================================================
 269  01078                           LOAD s0, 78                           ; 120
 26A  0115A                           LOAD s1, 5A                           ; 90
 26B  01278                           LOAD s2, 78                           ; 120
 26C  01378                           LOAD s3, 78                           ; 120
 26D  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 26E                                  ;;============================================================================
 26E                                  ;; Draws the letter M (Line 1)
 26E                                  ;;============================================================================
 26E  01082                           LOAD s0, 82                           ; 130
 26F  0115A                           LOAD s1, 5A                           ; 90
 270  01282                           LOAD s2, 82                           ; 130
 271  01378                           LOAD s3, 78                           ; 120
 272  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 273                                  ;;============================================================================
 273                                  ;; Draws the letter M (Line 2)
 273                                  ;;============================================================================
 273  01096                           LOAD s0, 96                           ; 150
 274  0115A                           LOAD s1, 5A                           ; 90
 275  01296                           LOAD s2, 96                           ; 150
 276  01378                           LOAD s3, 78                           ; 120
 277  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 278                                  ;;============================================================================
 278                                  ;; Draws the letter M (Line 3)
 278                                  ;;============================================================================
 278  01096                           LOAD s0, 96                           ; 150
 279  0115A                           LOAD s1, 5A                           ; 90
 27A  0128C                           LOAD s2, 8C                           ; 140
 27B  01369                           LOAD s3, 69                           ; 105
 27C  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 27D                                  ;;============================================================================
 27D                                  ;; Draws the letter M (Line 4)
 27D                                  ;;============================================================================
 27D  01082                           LOAD s0, 82                           ; 130
 27E  0115A                           LOAD s1, 5A                           ; 90
 27F  0128C                           LOAD s2, 8C                           ; 140
 280  01369                           LOAD s3, 69                           ; 105
 281  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 282                                  ;;============================================================================
 282                                  ;; Draws the letter E (Line 1)
 282                                  ;;============================================================================
 282  010A0                           LOAD s0, A0                           ; 160
 283  0115A                           LOAD s1, 5A                           ; 90
 284  012A0                           LOAD s2, A0                           ; 160
 285  01378                           LOAD s3, 78                           ; 120
 286  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 287                                  ;;============================================================================
 287                                  ;; Draws the letter E (Line 2)
 287                                  ;;============================================================================
 287  010A0                           LOAD s0, A0                           ; 160
 288  0115A                           LOAD s1, 5A                           ; 90
 289  012B4                           LOAD s2, B4                           ; 180
 28A  0135A                           LOAD s3, 5A                           ; 90
 28B  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 28C                                  ;;============================================================================
 28C                                  ;; Draws the letter E (Line 3)
 28C                                  ;;============================================================================
 28C  010A0                           LOAD s0, A0                           ; 160
 28D  01169                           LOAD s1, 69                           ; 105
 28E  012B4                           LOAD s2, B4                           ; 180
 28F  01369                           LOAD s3, 69                           ; 105
 290  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 291                                  ;;============================================================================
 291                                  ;; Draws the letter E (Line 4)
 291                                  ;;============================================================================
 291  010A0                           LOAD s0, A0                           ; 160
 292  01178                           LOAD s1, 78                           ; 120
 293  012B4                           LOAD s2, B4                           ; 180
 294  01378                           LOAD s3, 78                           ; 120
 295  20383                           CALL 383[draw_line]                   ; call the draw_line subroutine
 296  25000                           RETURN                                ; leave start_screen subroutine
 297                                  ;;============================================================================
 297                                  ;; Game Over - Draw Game Over Screen Subroutine
 297                                  ;;============================================================================
 297                   draw_gameover: 
 297                                  ;;;;;;;;;;;;;;;;;;;;;;;;
 297                                  ;; Code for Game Over ;;
 297                                  ;;;;;;;;;;;;;;;;;;;;;;;;
 297                                  ;;;;;;;;;;;;;;;
 297                                  ;;BEGIN GAME;;
 297                                  ;;;;;;;;;;;;;;;
 297                                  ;; LINE
 297                                  ;              LOAD s0,              ; stax
 297                                  ;             LOAD s1,              ; stay
 297                                  ;            LOAD s2,              ; endx
 297                                  ;           LOAD s3,              ; endy
 297                                  ;          CALL draw_line          ;
 297  25000                           RETURN                                ;
 298                                  ;;============================================================================
 298                                  ;; Credits - Draw Credits Screen Subroutine
 298                                  ;;============================================================================
 298                    draw_credits: 
 298                                  ;; LINE
 298                                  ;LOAD s0,              ; stax
 298                                  ;LOAD s1,              ; stay
 298                                  ;LOAD s2,              ; endx
 298                                  ;LOAD s3,              ; endy
 298                                  ;CALL draw_line          ;
 298                                  ;; LINE
 298                                  ;              LOAD s0,              ; stax
 298                                  ;             LOAD s1,              ; stay
 298                                  ;            LOAD s2,              ; endx
 298                                  ;           LOAD s3,              ; endy
 298                                  ;          CALL draw_line          ;
 298                                  ;; LINE
 298                                  ;              LOAD s0,              ; stax
 298                                  ;             LOAD s1,              ; stay
 298                                  ;            LOAD s2,              ; endx
 298                                  ;           LOAD s3,              ; endy
 298                                  ;          CALL draw_line          ;
 298                                  ;; LINE
 298                                  ;              LOAD s0,              ; stax
 298                                  ;             LOAD s1,              ; stay
 298                                  ;            LOAD s2,              ; endx
 298                                  ;           LOAD s3,              ; endy
 298                                  ;          CALL draw_line          ;
 298                                  ;; LINE
 298                                  ;              LOAD s0,              ; stax
 298                                  ;             LOAD s1,              ; stay
 298                                  ;            LOAD s2,              ; endx
 298                                  ;           LOAD s3,              ; endy
 298                                  ;          CALL draw_line          ;
 298                                  ;     RETURN      ;
 298                                  ;;============================================================================
 298                                  ;; Draw Helicopter - Draw Helicopter Subroutine
 298                                  ;;============================================================================
 298                 draw_helicopter: 
 298  202DD                           CALL 2DD[draw_helicopter_cockpit]     ; call the subroutine to draw the cockpit
 299  20351                           CALL 351[draw_helicopter_blades]      ; call the subroutine to draw the blades
 29A  2031C                           CALL 31C[draw_helicopter_tail]        ; call the subroutine to draw the tail
 29B                                  ;CALL draw_helicopter_smoke         ; call the subroutine to draw the smoke
 29B  25000                           RETURN                                ; go back from drawing helicopter
 29C                                  ;;============================================================================
 29C                                  ;; Draw Block - Draw Block Subroutine
 29C                                  ;;============================================================================
 29C                      draw_block: 
 29C                                  ;;============================================================================
 29C                                  ;; Draws Top Line of Block
 29C                                  ;;============================================================================
 29C  005E0                           LOAD s5, sE                           ; load 255 into s5 (horizontal center of block)
 29D  016E1                           LOAD s6, E1                           ; load 245 into s6
 29E  1C650                           COMPARE s6, s5                        ; checking if the block is done "peaking out" from the right (initial compare: 245 ? 255)
 29F  3A2A5                           JUMP C, 2A5[right_edge]               ; jump to right_edge
 2A0  0160A                           LOAD s6, 0A                           ; load 10 into s6
 2A1  1C560                           COMPARE s5, s6                        ; comparing s5 and s6
 2A2  3A2A9                           JUMP C, 2A9[left_edge]                ; jump to left_edge
 2A3  322A9                           JUMP Z, 2A9[left_edge]                ; jump to left_edge
 2A4  222AD                           JUMP 2AD[in_middle]                   ; jump to in_middle
 2A5  2D500               right_edge: OUTPUT s5, 00[stax]                   ; set desired stax
 2A6  1950A                           SUB s5, 0A                            ;
 2A7  2D502                           OUTPUT s5, 02[endx]                   ; set desired stax
 2A8  222B0                           JUMP 2B0[finished1]                   ; jump to draw_ys
 2A9  2D500                left_edge: OUTPUT s5, 00[stax]                   ; set desired stax
 2AA  01600                           LOAD s6, 00                           ; put 255 into s5
 2AB  2D602                           OUTPUT s6, 02[endx]                   ; set desired stax
 2AC  222B0                           JUMP 2B0[finished1]                   ; jump to draw_ys
 2AD                       in_middle: 
 2AD  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 2AE  1950A                           SUB s5, 0A                            ; subtract the width of block to get the other x coordinate
 2AF  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 2B0  2DF01                finished1: OUTPUT sF, 01[stay]                   ; set desired stay
 2B1  2DF03                           OUTPUT sF, 03[endy]                   ; set desired endy
 2B2  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 2B3                                  ;;============================================================================
 2B3                                  ;; Draws Bottom Line of Block
 2B3                                  ;;============================================================================
 2B3  005F0                           LOAD s5, sF                           ; load sF into s5
 2B4  1153C                           ADD s5, 3C                            ; add 40 to s5
 2B5  2D501                           OUTPUT s5, 01[stay]                   ; set desired stay
 2B6  2D503                           OUTPUT s5, 03[endy]                   ; set desired endy
 2B7  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 2B8                                  ;;============================================================================
 2B8                                  ;; Draws Right Vertical Line of Block
 2B8                                  ;;============================================================================
 2B8  2DE00                           OUTPUT sE, 00[stax]                   ; set desired stax
 2B9  2DE02                           OUTPUT sE, 02[endx]                   ; set desired endx
 2BA  2DF01                           OUTPUT sF, 01[stay]                   ; set desired stay
 2BB  005F0                           LOAD s5, sF                           ; load sF into s5
 2BC  1153C                           ADD s5, 3C                            ; add 60 to y coordinate
 2BD  2D503                           OUTPUT s5, 03[endy]                   ; set desired endy
 2BE  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 2BF                                  ;;============================================================================
 2BF                                  ;; Draws Left Vertical Line of Block
 2BF                                  ;;============================================================================
 2BF  005E0                           LOAD s5, sE                           ; load sE into s5
 2C0  1950A                           SUB s5, 0A                            ; subtract 10 from s5
 2C1  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 2C2  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 2C3  2DF01                           OUTPUT sF, 01[stay]                   ; set desired stay
 2C4  005F0                           LOAD s5, sF                           ; load sF into s5
 2C5  1153C                           ADD s5, 3C                            ; add 60 to y coordinate
 2C6  2D503                           OUTPUT s5, 03[endy]                   ; set desired endy
 2C7  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 2C8  25000                           RETURN                                ; finished with draw_block subroutine
 2C9                                  ;;============================================================================
 2C9                                  ;; Random Block Location - Random Block Location Subroutine
 2C9                                  ;;============================================================================
 2C9           random_block_location: 
 2C9  1DE00                           COMPARE sE, 00                        ; is it time to create a new variable?
 2CA  322CF                           JUMP Z, 2CF[new_random]               ; jump to new random creator
 2CB  1DEFF                           COMPARE sE, FF                        ; is it time to create a new variable?
 2CC  322CF                           JUMP Z, 2CF[new_random]               ; jump to new random creator
 2CD  362CE                           JUMP NZ, 2CE[skip_everything]         ; goes back
 2CE  25000          skip_everything: RETURN                                ; returns back (no new rand. number)
 2CF  09507               new_random: INPUT s5, 07[prng]                    ; create to new random number
 2D0  1D50F                           COMPARE s5, 0F                        ; check if it's in range
 2D1  3E2D3                           JUMP NC, 2D3[check_other_bound_range] ; check lower bound of map
 2D2  3A2CF                           JUMP C, 2CF[new_random]               ; get new variable
 2D3         check_other_bound_range: 
 2D3  1D5B4                           COMPARE s5, B4                        ; compare s5 to 180
 2D4  3E2CF                           JUMP NC, 2CF[new_random]              ; get a new random number
 2D5  00F50                           LOAD sF, s5                           ; a new y coordinate generated
 2D6  25000                           RETURN                                ; get out of subroutine
 2D7                                  ;;============================================================================
 2D7                                  ;; Move Helicopter Up - Move Helicopter Up Subroutine
 2D7                                  ;;============================================================================
 2D7                    move_heli_up: 
 2D7  1DC15                           COMPARE sC, 15                        ; check if the helicopter is colliding with top wall
 2D8  362DB                           JUMP NZ, 2DB[decrement]               ; if not colliding, then move helicopter appropriately
 2D9  3E2DB                           JUMP NC, 2DB[decrement]               ; necessary as well
 2DA  25000                           RETURN                                ; do not increment if colliding with top wall
 2DB                       decrement: 
 2DB  19C04                           SUB sC, 04                            ; move the helicopter up
 2DC  25000                           RETURN                                ; get out of subroutine
 2DD                                  ;;============================================================================
 2DD                                  ;; Draw Helicopter Cockpit - Draw Helicopter Cockpit Subroutine
 2DD                                  ;;============================================================================
 2DD         draw_helicopter_cockpit: 
 2DD                                  ;;============================================================================
 2DD                                  ;; Draws Cockpit of Helicopter (Line 1a)
 2DD                                  ;;============================================================================
 2DD                                  ;; STARTING POINT
 2DD  01564                           LOAD s5, 64                           ; load 100 into s5
 2DE  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 2DF  006C0                           LOAD s6, sC                           ; load sC into s5
 2E0  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 2E1                                  ;; ENDING POINT
 2E1  19501                           SUB s5, 01                            ; subtract 7 from s5
 2E2  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 2E3  19603                           SUB s6, 03                            ; go up by 5
 2E4  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 2E5  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 2E6                                  ;;============================================================================
 2E6                                  ;; Draws Cockpit of Helicopter (Line 1b)
 2E6                                  ;;============================================================================
 2E6                                  ;; STARTING POINT
 2E6  01564                           LOAD s5, 64                           ; load 100 into s5
 2E7  19501                           SUB s5, 01                            ; subtract 7 from s5
 2E8  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 2E9  006C0                           LOAD s6, sC                           ; load sC into s5
 2EA  19603                           SUB s6, 03                            ; go up by 5
 2EB  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 2EC                                  ;; ENDING POINT
 2EC  19504                           SUB s5, 04                            ; subtract 7 from s5
 2ED  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 2EE  19602                           SUB s6, 02                            ; go up by 5
 2EF  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 2F0  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 2F1                                  ;;============================================================================
 2F1                                  ;; Draws Cockpit of Helicopter (Line 2a)
 2F1                                  ;;============================================================================
 2F1                                  ;; STARTING POINT
 2F1  01564                           LOAD s5, 64                           ; load 100 into s5
 2F2  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 2F3  006C0                           LOAD s6, sC                           ; load sC into s5
 2F4  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 2F5                                  ;; ENDING POINT
 2F5  19501                           SUB s5, 01                            ; subtract 1 from s5
 2F6  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 2F7  11603                           ADD s6, 03                            ; go down by 3
 2F8  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 2F9  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 2FA                                  ;;============================================================================
 2FA                                  ;; Draws Cockpit of Helicopter (Line 2b)
 2FA                                  ;;============================================================================
 2FA                                  ;; STARTING POINT
 2FA  01564                           LOAD s5, 64                           ; load 100 into s5
 2FB  19501                           SUB s5, 01                            ; subtract 1 from s5
 2FC  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 2FD  006C0                           LOAD s6, sC                           ; load sC into s5
 2FE  11603                           ADD s6, 03                            ; go down by 3
 2FF  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 300                                  ;; ENDING POINT
 300  19504                           SUB s5, 04                            ; subtract 7 from s5
 301  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 302  11602                           ADD s6, 02                            ; go down by 5
 303  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 304  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 305                                  ;;============================================================================
 305                                  ;; Draws Cockpit of Helicopter (Line 3)
 305                                  ;;============================================================================
 305                                  ;; STARTING POINT
 305  01564                           LOAD s5, 64                           ; load 100 into s5
 306  19505                           SUB s5, 05                            ; load 7 into s5
 307  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 308  006C0                           LOAD s6, sC                           ; load sC into s5
 309  19605                           SUB s6, 05                            ; go up by 5 using subtraction
 30A  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 30B                                  ;; ENDING POINT
 30B  19507                           SUB s5, 07                            ; subtract 5 from s5
 30C  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 30D  11605                           ADD s6, 05                            ; go down by 5
 30E  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 30F  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 310                                  ;;============================================================================
 310                                  ;; Draws Cockpit of Helicopter (Line 4)
 310                                  ;;============================================================================
 310                                  ;; STARTING POINT
 310  01564                           LOAD s5, 64                           ; load 100 into s5
 311  19505                           SUB s5, 05                            ; load 7 into s5
 312  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 313  006C0                           LOAD s6, sC                           ; load sC into s5
 314  11605                           ADD s6, 05                            ; go down by 5 using addition
 315  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 316                                  ;; ENDING POINT
 316  19507                           SUB s5, 07                            ; subtract 5 from s5
 317  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 318  19605                           SUB s6, 05                            ; go back up by 5
 319  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 31A  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 31B  25000                           RETURN                                ; go back from subroutine
 31C                                  ;;============================================================================
 31C                                  ;; Draw Helicopter Tail - Draw Helicopter Tail Subroutine
 31C                                  ;;============================================================================
 31C            draw_helicopter_tail: 
 31C                                  ;;============================================================================
 31C                                  ;; Draws Tail of Helicopter (Line 1)
 31C                                  ;;============================================================================
 31C                                  ;; STARTING POINT
 31C  01564                           LOAD s5, 64                           ; load 100 into s5
 31D  1950A                           SUB s5, 0A                            ; subtract 0xA from s5
 31E  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 31F  006C0                           LOAD s6, sC                           ; load sC into s5
 320  19602                           SUB s6, 02                            ; subtract 2 from s6
 321  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 322                                  ;; ENDING POINT
 322  19507                           SUB s5, 07                            ; subtract 7 from s5
 323  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 324  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 325  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 326                                  ;;============================================================================
 326                                  ;; Draws Tail of Helicopter (Line 2)
 326                                  ;;============================================================================
 326                                  ;; STARTING POINT
 326  01564                           LOAD s5, 64                           ; load 100 into s5
 327  1950C                           SUB s5, 0C                            ; subtract 0xC from s5
 328  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 329  006C0                           LOAD s6, sC                           ; load sC into s5
 32A  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 32B                                  ;; ENDING POINT
 32B  19508                           SUB s5, 08                            ; subtract 7 from s5
 32C  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 32D  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 32E  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 32F                                  ;;============================================================================
 32F                                  ;; Draws Tail of Helicopter (Line 3)
 32F                                  ;;============================================================================
 32F                                  ;; STARTING POINT
 32F  01564                           LOAD s5, 64                           ; load 100 into s5
 330  1950A                           SUB s5, 0A                            ; subtract 0x0A from s5
 331  19508                           SUB s5, 08                            ; subtract 0x10 from s5
 332  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 333  006C0                           LOAD s6, sC                           ; load sC into s5
 334  19602                           SUB s6, 02                            ; subtract 2 from s6
 335  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 336                                  ;; ENDING POINT
 336  19502                           SUB s5, 02                            ; subtract 2 from s5
 337  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 338  19602                           SUB s6, 02                            ; subtract 2 from s6
 339  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 33A  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 33B                                  ;;============================================================================
 33B                                  ;; Draws Tail of Helicopter (Line 4)
 33B                                  ;;============================================================================
 33B                                  ;; STARTING POINT
 33B  01564                           LOAD s5, 64                           ; load 100 into s5
 33C  1950C                           SUB s5, 0C                            ; subtract 0x0C from s5
 33D  19509                           SUB s5, 09                            ; subtract 0x09 from s5
 33E  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 33F  006C0                           LOAD s6, sC                           ; load sC into s5
 340  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 341                                  ;; ENDING POINT
 341                                  ;SUB s5, 01                          ; subtract 2 from s5
 341  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 342  11601                           ADD s6, 01                            ; add 1 to s6
 343  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 344  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 345                                  ;;============================================================================
 345                                  ;; Draws Tail of Helicopter (Line 5)
 345                                  ;;============================================================================
 345                                  ;; STARTING POINT
 345  01564                           LOAD s5, 64                           ; load 100 into s5
 346  1950A                           SUB s5, 0A                            ; subtract 0x0A from s5
 347  1950A                           SUB s5, 0A                            ; subtract 0x0A from s5
 348  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 349  006C0                           LOAD s6, sC                           ; load sC into s5
 34A  19604                           SUB s6, 04                            ; subtract 4 from s6
 34B  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 34C                                  ;; ENDING POINT
 34C  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 34D  11605                           ADD s6, 05                            ; add 1 to s6
 34E  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 34F  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 350  25000                           RETURN                                ; go back from subroutine
 351                                  ;;============================================================================
 351                                  ;; Draw Helicopter Blades - Draw Helicopter Blades Subroutine
 351                                  ;;============================================================================
 351          draw_helicopter_blades: 
 351                                  ;;============================================================================
 351                                  ;; Draws Blades of Helicopter (Line 1)
 351                                  ;;============================================================================
 351                                  ;; STARTING POINT
 351  01564                           LOAD s5, 64                           ; load 100 into s5
 352  19505                           SUB s5, 05                            ; subtract 0xA from s5
 353  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 354  006C0                           LOAD s6, sC                           ; load sC into s5
 355  19605                           SUB s6, 05                            ; subtract 2 from s6
 356  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 357                                  ;; ENDING POINT
 357  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 358  19602                           SUB s6, 02                            ; subtract 2 from s6
 359  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 35A  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 35B                                  ;;============================================================================
 35B                                  ;; Draws Blades of Helicopter (Line 2)
 35B                                  ;;============================================================================
 35B                                  ;; STARTING POINT
 35B  01564                           LOAD s5, 64                           ; load 100 into s5
 35C  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 35D  006C0                           LOAD s6, sC                           ; load sC into s5
 35E  19607                           SUB s6, 07                            ; subtract 2 from s6
 35F  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 360                                  ;; ENDING POINT
 360  1950A                           SUB s5, 0A                            ; subtract 10 from s5
 361  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 362  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 363  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 364  25000                           RETURN                                ; go back from subroutine
 365                                  ;;============================================================================
 365                                  ;; Draw Helicopter Smoke - Draw Helicopter Smoke Subroutine
 365                                  ;;============================================================================
 365           draw_helicopter_smoke: 
 365                                  ;;============================================================================
 365                                  ;; Draws Smoke of Helicopter (Line 1)
 365                                  ;;============================================================================
 365                                  ;; Start Point
 365  01564                           LOAD s5, 64                           ; load 100 into s5
 366  19528                           SUB s5, 28                            ; position starting smoke right point of line 1
 367  2D500                           OUTPUT s5, 00[stax]                   ; output to starting x position of line 1
 368  006C0                           LOAD s6, sC                           ; load helicopter smoke vertical position for line 1
 369  2D601                           OUTPUT s6, 01[stay]                   ; output to starting y position of line 1
 36A                                  ;;
 36A                                  ;; End Point
 36A  19504                           SUB s5, 04                            ; position starting smoke left point of line 1
 36B  2D502                           OUTPUT s5, 02[endx]                   ; output to starting y position of line 1
 36C  2D603                           OUTPUT s6, 03[endy]                   ; output to ending y position of line 1, matching helicopter
 36D  2038D                           CALL 38D[old_draw_line]               ;draws a line (careful: this subroutine overwrites s5)
 36E                                  ;;
 36E                                  ;;============================================================================
 36E                                  ;; Draws Smoke of Helicopter (Line 2)
 36E                                  ;;============================================================================
 36E                                  ;; Start Point
 36E  01564                           LOAD s5, 64                           ; load 100 into s5
 36F  19534                           SUB s5, 34                            ; position starting smoke right point of line 2
 370  2D500                           OUTPUT s5, 00[stax]                   ; output to starting x position of line 2
 371  006C0                           LOAD s6, sC                           ; load starting smoke vertical position for line 2
 372  11604                           ADD s6, 04                            ; add 4 to s6 (shift down by 4)
 373  2D601                           OUTPUT s6, 01[stay]                   ; output to starting y position of line 2
 374                                  ;;
 374                                  ;; End Point
 374  19504                           SUB s5, 04                            ; subtract s5 by 4 for length of line
 375  2D502                           OUTPUT s5, 02[endx]                   ; output to endx
 376  2D603                           OUTPUT s6, 03[endy]                   ; outputs vertical locaton of smoke line 2
 377  2038D                           CALL 38D[old_draw_line]               ;draws a line (careful: this subroutine overwrites s5)
 378                                  ;;
 378                                  ;;============================================================================
 378                                  ;; Draws Smoke of Helicopter (Line 3)
 378                                  ;;============================================================================
 378                                  ;; Start Point
 378  01564                           LOAD s5, 64                           ; load 100 into s5
 379  19540                           SUB s5, 40                            ; position starting smoke right point of line 3
 37A  2D500                           OUTPUT s5, 00[stax]                   ; output to starting x position of line 3
 37B  006C0                           LOAD s6, sC                           ; load starting smoke vertical position for line 3
 37C  19604                           SUB s6, 04                            ; add 4 to s6 (shift down by 4)
 37D  2D601                           OUTPUT s6, 01[stay]                   ; output to starting y position of line 3
 37E                                  ;;
 37E                                  ;; End Point
 37E  19504                           SUB s5, 04                            ; subtract s5 by 4 for length of line
 37F  2D502                           OUTPUT s5, 02[endx]                   ; output to endx
 380  2D603                           OUTPUT s6, 03[endy]                   ; output same y position of line 3
 381  2038D                           CALL 38D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 382                                  ;;
 382  25000                           RETURN                                ; go back to subroutine
 383                                  ;;============================================================================
 383                                  ;; Draw Line - Draw Line Subroutine
 383                                  ;;============================================================================
 383  2D000                draw_line: OUTPUT s0, 00[stax]                   ; write stax
 384  2D101                           OUTPUT s1, 01[stay]                   ; write stay
 385  2D202                           OUTPUT s2, 02[endx]                   ; write endx
 386  2D303                           OUTPUT s3, 03[endy]                   ; write endy
 387  01501                           LOAD s5, 01[busy_go]                  ; load go command
 388  2D504                           OUTPUT s5, 04[busy]                   ; send go command
 389  09504                     wait: INPUT s5, 04[busy]                    ; read busy status
 38A  1D501                           COMPARE s5, 01[busy_go]               ; check busy status
 38B  32389                           JUMP Z, 389[wait]                     ; if busy, wait more
 38C  25000                           RETURN                                ; leave line drawing subroutine
 38D                                  ;;============================================================================
 38D                                  ;; Old Draw Line - Old Draw Line Subroutine (WILL DELETE LATER)
 38D                                  ;;============================================================================
 38D                   old_draw_line: 
 38D  01501                           LOAD s5, 01[busy_go]                  ; load go command
 38E  2D504                           OUTPUT s5, 04[busy]                   ; send go command
 38F  09504                    wait0: INPUT s5, 04[busy]                    ; read busy status
 390  1D501                           COMPARE s5, 01[busy_go]               ; check busy status
 391  3238F                           JUMP Z, 38F[wait0]                    ; if busy, wait more
 392  25000                           RETURN                                ; leave line drawing subroutine
 393                                  ;;============================================================================
 393                                  ;; Check Collisions - Check Collisions Subroutine
 393                                  ;;============================================================================
 393                 check_collision: 
 393                                  ;;============================================================================
 393                                  ;; Check Collisions with Map (top wall)
 393                                  ;;============================================================================
 393  01560                           LOAD s5, 60                           ; position of heli/wall collision
 394  0180F                           LOAD s8, 0F                           ; top wall vertical coordinate (15)
 395  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 396  1960A                           SUB s6, 0A                            ; the helicopter's blades 10 pixels higher
 397  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 398  1C860                           COMPARE s8, s6                        ; check if the two intersect
 399  323FD                           JUMP Z, 3FD[collision_occurred]       ; jump to collision occurred
 39A  3E3FD                           JUMP NC, 3FD[collision_occurred]      ; jump to collision occurred (necessary)
 39B                                  ;;============================================================================
 39B                                  ;; Check Collisions with Map (bottom wall)
 39B                                  ;;============================================================================
 39B  018F0                           LOAD s8, F0                           ; bottom wall vertical coordinate (240)
 39C  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 39D  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 39E  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 39F  1C860                           COMPARE s8, s6                        ; check if the two intersect
 3A0  323FD                           JUMP Z, 3FD[collision_occurred]       ; jump to collision occurred
 3A1  018F1                           LOAD s8, F1                           ; bottom wall vertical coordinate (241)
 3A2  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 3A3  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 3A4  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 3A5  1C860                           COMPARE s8, s6                        ; check if the two intersect
 3A6  323FD                           JUMP Z, 3FD[collision_occurred]       ; jump to collision occurred
 3A7  018F2                           LOAD s8, F2                           ; bottom wall vertical coordinate (242)
 3A8  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 3A9  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 3AA  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 3AB  1C860                           COMPARE s8, s6                        ; check if the two intersect
 3AC  323FD                           JUMP Z, 3FD[collision_occurred]       ; jump to collision occurred
 3AD  018F3                           LOAD s8, F3                           ; bottom wall vertical coordinate (243)
 3AE  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 3AF  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 3B0  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 3B1  1C860                           COMPARE s8, s6                        ; check if the two intersect
 3B2  323FD                           JUMP Z, 3FD[collision_occurred]       ; jump to collision occurred
 3B3  018F4                           LOAD s8, F4                           ; bottom wall vertical coordinate (244)
 3B4  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 3B5  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 3B6  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 3B7  1C860                           COMPARE s8, s6                        ; check if the two intersect
 3B8  323FD                           JUMP Z, 3FD[collision_occurred]       ; jump to collision occurred
 3B9  018F5                           LOAD s8, F5                           ; bottom wall vertical coordinate (245)
 3BA  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 3BB  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 3BC  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 3BD  1C860                           COMPARE s8, s6                        ; check if the two intersect
 3BE  323FD                           JUMP Z, 3FD[collision_occurred]       ; jump to collision occurred
 3BF  018F6                           LOAD s8, F6                           ; bottom wall vertical coordinate (246)
 3C0  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 3C1  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 3C2  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 3C3  1C860                           COMPARE s8, s6                        ; check if the two intersect
 3C4  323FD                           JUMP Z, 3FD[collision_occurred]       ; jump to collision occurred
 3C5                                  ;;============================================================================
 3C5                                  ;; Check Collisions with Block
 3C5                                  ;;============================================================================
 3C5  005E0                           LOAD s5, sE                           ; get current horizontal position of block
 3C6  1950A                           SUB s5, 0A                            ; actual block is 10 pixels back
 3C7  1D564                           COMPARE s5, 64                        ; check if s5 coincides with heli (horizontal check)
 3C8  323DE                           JUMP Z, 3DE[check_vertical]           ; jump to check vertical positioning
 3C9  1D563                           COMPARE s5, 63                        ; check if s5 coincides with heli (horizontal check)
 3CA  323DE                           JUMP Z, 3DE[check_vertical]           ; jump to check vertical positioning
 3CB  1D562                           COMPARE s5, 62                        ; check if s5 coincides with heli (horizontal check)
 3CC  323DE                           JUMP Z, 3DE[check_vertical]           ; jump to check vertical positioning
 3CD  1D561                           COMPARE s5, 61                        ; check if s5 coincides with heli (horizontal check)
 3CE  323DE                           JUMP Z, 3DE[check_vertical]           ; jump to check vertical positioning
 3CF  1D560                           COMPARE s5, 60                        ; check if s5 coincides with heli (horizontal check)
 3D0  323DE                           JUMP Z, 3DE[check_vertical]           ; jump to check vertical positioning
 3D1  1D559                           COMPARE s5, 59                        ; check if s5 coincides with heli (horizontal check)
 3D2  323DE                           JUMP Z, 3DE[check_vertical]           ; jump to check vertical positioning
 3D3  1D558                           COMPARE s5, 58                        ; check if s5 coincides with heli (horizontal check)
 3D4  323DE                           JUMP Z, 3DE[check_vertical]           ; jump to check vertical positioning
 3D5  1D557                           COMPARE s5, 57                        ; check if s5 coincides with heli (horizontal check)
 3D6  323DE                           JUMP Z, 3DE[check_vertical]           ; jump to check vertical positioning
 3D7  1D556                           COMPARE s5, 56                        ; check if s5 coincides with heli (horizontal check)
 3D8  323DE                           JUMP Z, 3DE[check_vertical]           ; jump to check vertical positioning
 3D9  1D555                           COMPARE s5, 55                        ; check if s5 coincides with heli (horizontal check)
 3DA  323DE                           JUMP Z, 3DE[check_vertical]           ; jump to check vertical positioning
 3DB  1D554                           COMPARE s5, 54                        ; check if s5 coincides with heli (horizontal check)
 3DC  323DE                           JUMP Z, 3DE[check_vertical]           ; jump to check vertical positioning
 3DD  363E8                           JUMP NZ, 3E8[no_collision]            ; jump to no_collision routine
 3DE                  check_vertical: 
 3DE  006F0                           LOAD s6, sF                           ; get current vertical position of block
 3DF  007C0                           LOAD s7, sC                           ; load helicopter front position
 3E0  1C760                     loop: COMPARE s7, s6                        ; compare s7 and s6
 3E1  323FD                           JUMP Z, 3FD[collision_occurred]       ; jump to collision_occured
 3E2  11601                           ADD s6, 01                            ; add one to s6
 3E3  008F0                           LOAD s8, sF                           ; load original value for reference only
 3E4  1183C                           ADD s8, 3C                            ; add 60 to s8
 3E5  1C680                           COMPARE s6, s8                        ; compare s6 to bottom of block (s8)
 3E6  323E8                           JUMP Z, 3E8[no_collision]             ; jump to no_collision routine
 3E7  363E0                           JUMP NZ, 3E0[loop]                    ; keep looping
 3E8  19E01             no_collision: SUB sE, 01                            ; move block forwards
 3E9  1DA01                           COMPARE sA, 01                        ; check if score is above 500
 3EA  3C3EE                           CALL NC, 3EE[stage2_check]            ; call second stage check
 3EB  11C02                           ADD sC, 02                            ; increment sC
 3EC  20406                           CALL 406[distance]                    ; used for keeping the score (increments distance)
 3ED  25000                           RETURN                                ; leave, since no collisions occurred
 3EE                    stage2_check: 
 3EE  19E01                           SUB sE, 01                            ; subtract 1 from sE
 3EF  1DA05                           COMPARE sA, 05                        ; check if score is above 1000
 3F0  3C3F3                           CALL NC, 3F3[stage3_check]            ; call speed2
 3F1  25000                           RETURN                                ; leave routine
 3F2                          speed2: 
 3F2                                  ;SUB sE, 01                          ; decrement by 2
 3F2  25000                           RETURN                                ; go back
 3F3                    stage3_check: 
 3F3  19E01                           SUB sE, 01                            ; decrement by 3
 3F4  1DA08                           COMPARE sA, 08                        ; check if score is above 1000
 3F5  3C3F7                           CALL NC, 3F7[stage4_check]            ; call speed2
 3F6  25000                           RETURN                                ; go back
 3F7                    stage4_check: 
 3F7  19E01                           SUB sE, 01                            ; decrement by 3
 3F8  1DA10                           COMPARE sA, 10                        ; check if score is above 1000
 3F9  3C3FB                           CALL NC, 3FB[stage5_check]            ; call speed2
 3FA  25000                           RETURN 
 3FB                    stage5_check: 
 3FB  19E01                           SUB sE, 01                            ; decrement by 3
 3FC  25000                           RETURN 
 3FD              collision_occurred: 
 3FD  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 3FE  2D701                           OUTPUT s7, 01[stay]                   ; set desired stay
 3FF  09807                           INPUT s8, 07[prng]                    ; load random endx
 400  2D802                           OUTPUT s8, 02[endx]                   ; set random endx
 401  09807                           INPUT s8, 07[prng]                    ; load random endy
 402  2D803                           OUTPUT s8, 03[endy]                   ; set random endy
 403  20383                           CALL 383[draw_line]                   ; draw random line
 404  01902                           LOAD s9, 02[GAMEOVER_STATE]           ; should go to gameover state instead
 405  25000                           RETURN                                ; return from routine without any increments
 406                                  ;;============================================================================
 406                                  ;; Distance - Distance Subroutine
 406                                  ;;============================================================================
 406  2DB0A                 distance: OUTPUT sB, 0A[qssd_lo]                ; put distance value to qssd
 407  1DBFF                           COMPARE sB, FF                        ; check if max (FF) was reached
 408  3240B                           JUMP Z, 40B[distance2]                ; jump to distance2
 409  11B01                           ADD sB, 01[one]                       ; increment distance value
 40A  25000                           RETURN                                ; finished with distance subroutine
 40B  11A01                distance2: ADD sA, 01[one]                       ; add one to the next degree
 40C  01B00                           LOAD sB, 00[zero]                     ; reset sB
 40D  2DB0A                           OUTPUT sB, 0A[qssd_lo]                ; put distance value to qssd
 40E  2DA0B                           OUTPUT sA, 0B[qssd_hi]                ; put distance value to qssd
 40F  25000                           RETURN                                ; finished with distance subroutine
 410                                  ;;============================================================================
 410                                  ;; Interrupt - Vector.
 410                                  ;;============================================================================
 7FF                                  ADDRESS 7FF                           ; must be located here
 7FF  22014               isr_vector: JUMP 014[isr]                         ; always jump to isr
 800                                  ;;============================================================================
 800                                  ;;
 800                                  ;;============================================================================



List of PSM files that have been assembled

C:\Users\hpm\Desktop\fpga_video_game\fpga_video_game\latest_fpga_video_game\software\software.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   14'd         
 timestamp_minutes 56'd         
 timestamp_seconds 43'd         
 datestamp_year    15'd         
 datestamp_month   12'd         
 datestamp_day     02'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 stax              00           software.psm
 stay              01           software.psm
 endx              02           software.psm
 endy              03           software.psm
 busy              04           software.psm
 beam              05           software.psm
 mode              06           software.psm
 prng              07           software.psm
 leds_lo           08           software.psm
 leds_hi           09           software.psm
 qssd_lo           0A           software.psm
 qssd_hi           0B           software.psm
 qssd_dp           0C           software.psm
 switches_lo       0D           software.psm
 switches_hi       0E           software.psm
 buttons           0F           software.psm
 red               10           software.psm
 green             11           software.psm
 blue              11           software.psm
 zero              00           software.psm
 one               01           software.psm
 busy_go           01           software.psm
 beam_hi           0F           software.psm
 beam_md           07           software.psm
 beam_lo           03           software.psm
 mode_hld          00           software.psm
 mode_clr          01           software.psm
 mode_lin          02           software.psm
 mode_exp          03           software.psm
 buttons_ct        10           software.psm
 buttons_up        08           software.psm
 buttons_dn        04           software.psm
 buttons_lf        02           software.psm
 buttons_rt        01           software.psm
 start_menu_1      00           software.psm
 start_menu_2      3C           software.psm
 start_menu_3      78           software.psm
 START_STATE       00           software.psm
 PLAY_STATE        01           software.psm
 GAMEOVER_STATE    02           software.psm
 CREDITS_STATE     03           software.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.51"        
 datestamp$        "02 Dec 2015"  
 timestamp$        "14:56:43"     



List of line labels

   Label                     Addr  Source PSM File

 * boot                      000   software.psm
   main                      013   software.psm
   isr                       014   software.psm
   start                     01D   software.psm
   enter_play_state          023   software.psm
   stay_in_start_state       025   software.psm
   credits                   026   software.psm
   stay_in_credit_state      02B   software.psm
   gameover                  02C   software.psm
   enter_play_state2         03C   software.psm
   stay_in_gameover_state    046   software.psm
   play                      047   software.psm
   map                       051   software.psm
   start_screen              05C   software.psm
   draw_gameover             297   software.psm
   draw_credits              298   software.psm
   draw_helicopter           298   software.psm
   draw_block                29C   software.psm
   right_edge                2A5   software.psm
   left_edge                 2A9   software.psm
   in_middle                 2AD   software.psm
   finished1                 2B0   software.psm
   random_block_location     2C9   software.psm
   skip_everything           2CE   software.psm
   new_random                2CF   software.psm
   check_other_bound_range   2D3   software.psm
   move_heli_up              2D7   software.psm
   decrement                 2DB   software.psm
   draw_helicopter_cockpit   2DD   software.psm
   draw_helicopter_tail      31C   software.psm
   draw_helicopter_blades    351   software.psm
 * draw_helicopter_smoke     365   software.psm
   draw_line                 383   software.psm
   wait                      389   software.psm
   old_draw_line             38D   software.psm
   wait0                     38F   software.psm
   check_collision           393   software.psm
   check_vertical            3DE   software.psm
   loop                      3E0   software.psm
   no_collision              3E8   software.psm
   stage2_check              3EE   software.psm
 * speed2                    3F2   software.psm
   stage3_check              3F3   software.psm
   stage4_check              3F7   software.psm
   stage5_check              3FB   software.psm
   collision_occurred        3FD   software.psm
   distance                  406   software.psm
   distance2                 40B   software.psm
 * isr_vector                7FF   software.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD            485
 STAR              -

 AND               -
 OR                -
 XOR               -

 ADD              23
 ADDCY             -
 SUB              53
 SUBCY             -

 TEST              -
 TESTCY            -
 COMPARE          43
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK           -

 INPUT            13
 OUTPUT          196
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           -
 ENABLE            1
 RETURNI           1

 JUMP             49
 JUMP@             -
 CALL            147
 CALL@             -
 RETURN           30
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
