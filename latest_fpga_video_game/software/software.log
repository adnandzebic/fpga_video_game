KCPSM6 Assembler log file for program 'C:\Users\hpm\Desktop\fpga_video_game\latest_fpga_video_game\software\software.psm'.
Generated by KCPSM6 version v2.51
Ken Chapman - Xilinx Ltd - 29th May 2013

Assembly datestamp: 02 Dec 2015
Assembly timestamp: 19:13:13

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 7FF hex
Nominal program memory size: 2K (2048)   address(10:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 1388
Memory locations available: 2708


Assembly listing

 Addr Code                            Instruction

 000                                  ;;============================================================================
 000                                  ;; File: software.psm
 000                                  ;; This is the PicoBlaze program for EE178 Lab #8.
 000                                  ;;============================================================================
 000                                  ;;============================================================================
 000                                  ;; Port address declarations.
 000                                  ;;============================================================================
 000                                  CONSTANT stax, 00                     ; port for 8-bit start-x
 000                                  CONSTANT stay, 01                     ; port for 8-bit start-y
 000                                  CONSTANT endx, 02                     ; port for 8-bit end-x
 000                                  CONSTANT endy, 03                     ; port for 8-bit end-y
 000                                  CONSTANT busy, 04                     ; port for 8-bit busy
 000                                  CONSTANT beam, 05                     ; port for 8-bit beam
 000                                  CONSTANT mode, 06                     ; port for 8-bit mode
 000                                  CONSTANT prng, 07                     ; port for 8-bit prng
 000                                  CONSTANT leds_lo, 08                  ; port for 8-bit led data out
 000                                  CONSTANT leds_hi, 09                  ; port for 8-bit led data out
 000                                  CONSTANT qssd_lo, 0A                  ; port for 8-bit qssd data out
 000                                  CONSTANT qssd_hi, 0B                  ; port for 8-bit qssd data out
 000                                  CONSTANT qssd_dp, 0C                  ; port for 8-bit qssd data out
 000                                  CONSTANT switches_lo, 0D              ; port for 8-bit switch input
 000                                  CONSTANT switches_hi, 0E              ; port for 8-bit switch input
 000                                  CONSTANT buttons, 0F                  ; port for 8-bit button input
 000                                  CONSTANT red, 10                      ; port for 8-bit red value
 000                                  CONSTANT green, 11                    ; port for 8-bit green value
 000                                  CONSTANT blue, 11                     ; port for 8-bit green value
 000                                  CONSTANT zero, 00                     ; zero
 000                                  CONSTANT one, 01                      ; one
 000                                  CONSTANT busy_go, 01                  ; go command and busy status
 000                                  CONSTANT beam_hi, 0F                  ; beam high intensity
 000                                  CONSTANT beam_md, 07                  ; beam med intensity
 000                                  CONSTANT beam_lo, 03                  ; beam low intensity
 000                                  CONSTANT mode_hld, 00                 ; mode hold framebuffer
 000                                  CONSTANT mode_clr, 01                 ; mode clear framebuffer
 000                                  CONSTANT mode_lin, 02                 ; mode linear decay
 000                                  CONSTANT mode_exp, 03                 ; mode exponential decay
 000                                  CONSTANT buttons_ct, 10               ; center
 000                                  CONSTANT buttons_up, 08               ; up
 000                                  CONSTANT buttons_dn, 04               ; down
 000                                  CONSTANT buttons_lf, 02               ; left
 000                                  CONSTANT buttons_rt, 01               ; right
 000                                  CONSTANT start_menu_1, 00             ;
 000                                  CONSTANT start_menu_2, 3C             ;
 000                                  CONSTANT start_menu_3, 78             ;
 000                                  ;;============================================================================
 000                                  ;; Macro State declarations
 000                                  ;;============================================================================
 000                                  CONSTANT START_STATE, 00              ; start screen state
 000                                  CONSTANT PLAY_STATE, 01               ; play state
 000                                  CONSTANT GAMEOVER_STATE, 02           ; game over screen state
 000                                  CONSTANT CREDITS_STATE, 03            ; credits screen state (not used for now)
 000                                  ;;============================================================================
 000                                  ;; Boot.
 000                                  ;;============================================================================
 000  01000                     boot: LOAD s0, 00[zero]                     ; initialize
 001  01100                           LOAD s1, 00[zero]                     ; initialize
 002  01200                           LOAD s2, 00[zero]                     ; initialize
 003  01300                           LOAD s3, 00[zero]                     ; initialize
 004  01400                           LOAD s4, 00[zero]                     ; initialize
 005  01900                           LOAD s9, 00[START_STATE]              ; initial state is to enter start screen
 006  01A00                           LOAD sA, 00                           ; initial distance (score)
 007  01B00                           LOAD sB, 00                           ; initial distance (score)
 008  01C80                           LOAD sC, 80                           ; starting helicopter position
 009  01D05                           LOAD sD, 05                           ; initialize (needed later)
 00A  01EFF                           LOAD sE, FF                           ; load 255 into sE (horizontal coordinate of block)
 00B  01F62                           LOAD sF, 62                           ; load 108 into sF (vertical coordinate of block)
 00C  01503                           LOAD s5, 03[mode_exp]                 ; load desired mode
 00D  2D506                           OUTPUT s5, 06[mode]                   ; set desired mode
 00E  0150F                           LOAD s5, 0F[beam_hi]                  ; load desired beam
 00F  2D505                           OUTPUT s5, 05[beam]                   ; set desired beam
 010  015FF                           LOAD s5, FF                           ; load FF into s5 (red value)
 011  2D510                           OUTPUT s5, 10[red]                    ; set desired red
 012  28001                           ENABLE INTERRUPT                      ; enable interrupts
 013                                  ;;============================================================================
 013                                  ;; Main.
 013                                  ;;============================================================================
 013                            main: 
 013  22013                           JUMP 013[main]                        ; go back and repeat
 014                                  ;;============================================================================
 014                                  ;; Interrupt - Service Routine.
 014                                  ;;============================================================================
 014                             isr: 
 014  1D900                           COMPARE s9, 00[START_STATE]           ; check if in the start state
 015  3001D                           CALL Z, 01D[start]                    ; call the start screen state
 016  1D901                           COMPARE s9, 01[PLAY_STATE]            ; check if in the play state
 017  30061                           CALL Z, 061[play]                     ; call play subroutine
 018  1D902                           COMPARE s9, 02[GAMEOVER_STATE]        ; check if in the gameover state
 019  30043                           CALL Z, 043[gameover]                 ; call the gameover subroutine
 01A  1D903                           COMPARE s9, 03[CREDITS_STATE]         ; check if in the credits state
 01B  30034                           CALL Z, 034[credits]                  ; call credits subroutine
 01C  29001                           RETURNI ENABLE                        ; done with isr
 01D                                  ;;============================================================================
 01D                                  ;; Start - Start Subroutine
 01D                                  ;;============================================================================
 01D  37000                    start: REGBANK A                             ;
 01E  0950F                           INPUT s5, 0F[buttons]                 ; get center button values
 01F  20076                           CALL 076[start_screen]                ; draw the map using map subroutine
 020  0950F                           INPUT s5, 0F[buttons]                 ; get button values
 021  1D510                           COMPARE s5, 10[buttons_ct]            ; check if center button is pressed
 022  32028                           JUMP Z, 028[enter_play_state]         ; jump to enter_play_state
 023  37001                           REGBANK B                             ;
 024  11001                           ADD s0, 01[one]                       ; counter for determining jump between credit/start
 025  1D0F0                           COMPARE s0, F0                        ; check if 120 seconds
 026  3203E                           JUMP Z, 03E[enter_credit_state]       ; if 2 seconds or 120 frames, jump to credit
 027  36032                           JUMP NZ, 032[stay_in_start_state]     ; if not 2 seconds or 120 frames, stay in start
 028                enter_play_state: 
 028  37001                           REGBANK B                             ;
 029  01000                           LOAD s0, 00[zero]                     ;
 02A  37000                           REGBANK A                             ;
 02B  01901                           LOAD s9, 01[PLAY_STATE]               ; load play_state and enter play mode
 02C  25000                           RETURN                                ; return from start subroutine
 02D                enter_start_menu: 
 02D  37001                           REGBANK B                             ;
 02E  01000                           LOAD s0, 00[zero]                     ; clear counter regbank
 02F  37000                           REGBANK A                             ;
 030  01900                           LOAD s9, 00[START_STATE]              ; load start state
 031  25000                           RETURN                                ; return to isr
 032             stay_in_start_state: 
 032  37000                           REGBANK A                             ; declare REGBANK A
 033  25000                           RETURN                                ; return from start subroutine
 034                                  ;;============================================================================
 034                                  ;; Credits - Credit Subroutine
 034                                  ;;============================================================================
 034                         credits: 
 034  37000                           REGBANK A                             ;
 035  20357                           CALL 357[draw_credits]                ; draw the credits screen
 036  0950F                           INPUT s5, 0F[buttons]                 ; get button values
 037  1D510                           COMPARE s5, 10[buttons_ct]            ; check if center button is pressed
 038  32028                           JUMP Z, 028[enter_play_state]         ; jump to enter_play_state
 039  37001                           REGBANK B                             ; Utilize REGBANK B for counter
 03A  11001                           ADD s0, 01[one]                       ; counter for determining when to jump between credit/start
 03B  1D0F0                           COMPARE s0, F0                        ; 2 seconds / 120 frames -> jump back to start
 03C  3202D                           JUMP Z, 02D[enter_start_menu]         ; if 120 frames, jump back to start
 03D  36042                           JUMP NZ, 042[stay_in_credit_state]    ;
 03E              enter_credit_state: 
 03E  01000                           LOAD s0, 00[zero]                     ; if entering credit state, clear REGBANK B s0
 03F  37000                           REGBANK A                             ;
 040  01903                           LOAD s9, 03[CREDITS_STATE]            ; set to credits state
 041  25000                           RETURN                                ;
 042            stay_in_credit_state: 
 042  25000                           RETURN                                ;
 043                                  ;;============================================================================
 043                                  ;; Game Over - Game Over Subroutine
 043                                  ;;============================================================================
 043                        gameover: 
 043  2006B                           CALL 06B[map]                         ; draw the map using map subroutine
 044  203F3                           CALL 3F3[draw_helicopter]             ; draw the helicopter
 045  203F7                           CALL 3F7[draw_block]                  ; draw the obstacle (block)
 046  202B1                           CALL 2B1[draw_gameover]               ; draw gameover message
 047  01564                           LOAD s5, 64                           ; collision point (horizontal)
 048  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 049  2DC01                           OUTPUT sC, 01[stay]                   ; set desired stay
 04A  09807                           INPUT s8, 07[prng]                    ; load random endx
 04B  2D802                           OUTPUT s8, 02[endx]                   ; set random endx
 04C  09807                           INPUT s8, 07[prng]                    ; load random endy
 04D  2D803                           OUTPUT s8, 03[endy]                   ; set random endy
 04E  204E8                           CALL 4E8[old_draw_line]               ; draw random line
 04F  0950F                           INPUT s5, 0F[buttons]                 ; get button values
 050  1D504                           COMPARE s5, 04[buttons_dn]            ; check if down button is pressed
 051  3202D                           JUMP Z, 02D[enter_start_menu]         ; jump to enter_start_state
 052  0950F                           INPUT s5, 0F[buttons]                 ; get button values
 053  1D508                           COMPARE s5, 08[buttons_up]            ; check if up button is pressed
 054  32056                           JUMP Z, 056[enter_play_state2]        ; jump to enter_play_state2
 055  36060                           JUMP NZ, 060[stay_in_gameover_state]  ; remain in current state with a jump to stay_in_gameover_state
 056               enter_play_state2: 
 056  01901                           LOAD s9, 01[PLAY_STATE]               ; load play_state and enter play mode
 057                                  ;; RESET EVERYTHING BEFORE RETURNING
 057  01A00                           LOAD sA, 00                           ; initial distance (score)
 058  01B00                           LOAD sB, 00                           ; initial distance (score)
 059  2DB0A                           OUTPUT sB, 0A[qssd_lo]                ; reset qssd_lo
 05A  2DA0B                           OUTPUT sA, 0B[qssd_hi]                ; reset qssd_hi
 05B  01C80                           LOAD sC, 80                           ; starting helicopter position
 05C  01D05                           LOAD sD, 05                           ; initialize (needed later)
 05D  01EFF                           LOAD sE, FF                           ; load 255 into sE (horizontal coordinate of block)
 05E  01F62                           LOAD sF, 62                           ; load 108 into sF (vertical coordinate of block)
 05F  25000                           RETURN                                ; return from start subroutine
 060          stay_in_gameover_state: 
 060  25000                           RETURN                                ; return from start subroutine
 061                                  ;;============================================================================
 061                                  ;; Play - Play Subroutine
 061                                  ;;============================================================================
 061  0950F                     play: INPUT s5, 0F[buttons]                 ; get center button values
 062  2006B                           CALL 06B[map]                         ; draw the map using map subroutine
 063  0950F                           INPUT s5, 0F[buttons]                 ; get button values
 064  1D510                           COMPARE s5, 10[buttons_ct]            ; check if center button is pressed
 065  30432                           CALL Z, 432[move_heli_up]             ; call subroutine that moves the helicopter up
 066  203F3                           CALL 3F3[draw_helicopter]             ; draw the helicopter
 067  20424                           CALL 424[random_block_location]       ; determines a random place for the block (y direction only)
 068  203F7                           CALL 3F7[draw_block]                  ; draw the block using draw_block subroutine
 069  204EE                           CALL 4EE[check_collision]             ; check if any collisions happen
 06A  25000                           RETURN                                ; finished with play subroutine
 06B                                  ;;============================================================================
 06B                                  ;; Map - Draw Map Subroutine
 06B                                  ;;============================================================================
 06B                             map: 
 06B                                  ;;============================================================================
 06B                                  ;; Draws Top Line of Map (Line 1)
 06B                                  ;;============================================================================
 06B  01000                           LOAD s0, 00                           ; load 00 into s0
 06C  0110F                           LOAD s1, 0F                           ; load 0F into s1
 06D  012FF                           LOAD s2, FF                           ; load FF into s2
 06E  0130F                           LOAD s3, 0F                           ; load 0F into s3
 06F  204DE                           CALL 4DE[draw_line]                   ; draws the line
 070                                  ;;============================================================================
 070                                  ;; Draws Bottom Line of Map (Line 2)
 070                                  ;;============================================================================
 070  01000                           LOAD s0, 00                           ; load 00 into s0
 071  011F0                           LOAD s1, F0                           ; load 0F into s1
 072  012FF                           LOAD s2, FF                           ; load FF into s2
 073  013F0                           LOAD s3, F0                           ; load F0 into s3
 074  204DE                           CALL 4DE[draw_line]                   ; draws the line
 075  25000                           RETURN                                ; go back from drawing map
 076                                  ;;============================================================================
 076                                  ;; Start Screen - Draw Start Screen Subroutine
 076                                  ;;============================================================================
 076                    start_screen: 
 076                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 076                                  ;; Code for PRESS START [START MENU] ;;
 076                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 076                                  ;;;;;;;;;;;;;;;
 076                                  ;;BEGIN PRESS;;
 076                                  ;;;;;;;;;;;;;;;
 076                                  ;; LINE 1 (LEFT) FOR P
 076  01041                           LOAD s0, 41                           ; stax 65
 077  011C8                           LOAD s1, C8                           ; stay 200
 078  01241                           LOAD s2, 41                           ; endx 65
 079  013D2                           LOAD s3, D2                           ; endy 210
 07A  204DE                           CALL 4DE[draw_line]                   ;
 07B                                  ;; LINE 2 (TOP) FOR P
 07B  01041                           LOAD s0, 41                           ; stax 65
 07C  011C8                           LOAD s1, C8                           ; stay 200
 07D  01246                           LOAD s2, 46                           ; endx 70
 07E  013C8                           LOAD s3, C8                           ; endy 200
 07F  204DE                           CALL 4DE[draw_line]                   ;
 080                                  ;; LINE 3 (RIGHT) FOR P
 080  01046                           LOAD s0, 46                           ; stax 70
 081  011C8                           LOAD s1, C8                           ; stay 200
 082  01246                           LOAD s2, 46                           ; endx 70
 083  013CD                           LOAD s3, CD                           ; endy 205
 084  204DE                           CALL 4DE[draw_line]                   ;
 085                                  ;; LINE 4 (MIDDLE) FOR P
 085  01041                           LOAD s0, 41                           ; stax 65
 086  011CD                           LOAD s1, CD                           ; stay 205
 087  01246                           LOAD s2, 46                           ; endx 70
 088  013CD                           LOAD s3, CD                           ; endy 205
 089  204DE                           CALL 4DE[draw_line]                   ;
 08A                                  ;; LINE 1 (LEFT) FOR R
 08A  0104B                           LOAD s0, 4B                           ; stax 75
 08B  011C8                           LOAD s1, C8                           ; stay 200
 08C  0124B                           LOAD s2, 4B                           ; endx 75
 08D  013D2                           LOAD s3, D2                           ; endy 210
 08E  204DE                           CALL 4DE[draw_line]                   ;
 08F                                  ;; LINE 2 (TOP) FOR R
 08F  0104B                           LOAD s0, 4B                           ; stax 75
 090  011C8                           LOAD s1, C8                           ; stay 200
 091  01250                           LOAD s2, 50                           ; endx 80
 092  013C8                           LOAD s3, C8                           ; endy 200
 093  204DE                           CALL 4DE[draw_line]                   ;
 094                                  ;; LINE 3 (RIGHT) FOR R
 094  01050                           LOAD s0, 50                           ; stax 80
 095  011C8                           LOAD s1, C8                           ; stay 200
 096  01250                           LOAD s2, 50                           ; endx 80
 097  013CD                           LOAD s3, CD                           ; endy 205
 098  204DE                           CALL 4DE[draw_line]                   ;
 099                                  ;; LINE 4 (MIDDLE) FOR R
 099  0104B                           LOAD s0, 4B                           ; stax 75
 09A  011CD                           LOAD s1, CD                           ; stay 205
 09B  01250                           LOAD s2, 50                           ; endx 80
 09C  013CD                           LOAD s3, CD                           ; endy 205
 09D  204DE                           CALL 4DE[draw_line]                   ;
 09E                                  ;; LINE 5 (ANGLED) FOR R
 09E  0104B                           LOAD s0, 4B                           ; stax 75
 09F  011CD                           LOAD s1, CD                           ; stay 205
 0A0  01250                           LOAD s2, 50                           ; endx 80
 0A1  013D2                           LOAD s3, D2                           ; endy 210
 0A2  204DE                           CALL 4DE[draw_line]                   ;
 0A3                                  ;; LINE 6 (ANGLED2) FOR R
 0A3  0104B                           LOAD s0, 4B                           ; stax 75
 0A4  011CE                           LOAD s1, CE                           ; stay 204
 0A5  0124F                           LOAD s2, 4F                           ; endx 79
 0A6  013D2                           LOAD s3, D2                           ; endy 210
 0A7  204DE                           CALL 4DE[draw_line]                   ;
 0A8                                  ;; LINE 1 (LEFT) FOR E
 0A8  01055                           LOAD s0, 55                           ; stax 85
 0A9  011C8                           LOAD s1, C8                           ; stay 200
 0AA  01255                           LOAD s2, 55                           ; endx 85
 0AB  013D2                           LOAD s3, D2                           ; endy 210
 0AC  204DE                           CALL 4DE[draw_line]                   ;
 0AD                                  ;; LINE 2 (TOP) FOR E
 0AD  01055                           LOAD s0, 55                           ; stax 85
 0AE  011C8                           LOAD s1, C8                           ; stay 200
 0AF  0125A                           LOAD s2, 5A                           ; endx 90
 0B0  013C8                           LOAD s3, C8                           ; endy 200
 0B1  204DE                           CALL 4DE[draw_line]                   ;
 0B2                                  ;; LINE 3 (MIDDLE) FOR E
 0B2  01055                           LOAD s0, 55                           ; stax 85
 0B3  011CD                           LOAD s1, CD                           ; stay 205
 0B4  0125A                           LOAD s2, 5A                           ; endx 90
 0B5  013CD                           LOAD s3, CD                           ; endy 205
 0B6  204DE                           CALL 4DE[draw_line]                   ;
 0B7                                  ;; LINE 4 (BOTTOM) FOR E
 0B7  01055                           LOAD s0, 55                           ; stax 85
 0B8  011D2                           LOAD s1, D2                           ; stay 210
 0B9  0125A                           LOAD s2, 5A                           ; endx 90
 0BA  013D2                           LOAD s3, D2                           ; endy 210
 0BB  204DE                           CALL 4DE[draw_line]                   ;
 0BC                                  ;; LINE 1 (TOP) FOR S1
 0BC  0105F                           LOAD s0, 5F                           ; stax 95
 0BD  011C8                           LOAD s1, C8                           ; stay 200
 0BE  01264                           LOAD s2, 64                           ; endx 100
 0BF  013C8                           LOAD s3, C8                           ; endy 200
 0C0  204DE                           CALL 4DE[draw_line]                   ;
 0C1                                  ;; LINE 2 (TOPLEFT) FOR S1
 0C1  0105F                           LOAD s0, 5F                           ; stax 95
 0C2  011C8                           LOAD s1, C8                           ; stay 200
 0C3  0125F                           LOAD s2, 5F                           ; endx 95
 0C4  013CD                           LOAD s3, CD                           ; endy 205
 0C5  204DE                           CALL 4DE[draw_line]                   ;
 0C6                                  ;; LINE 3 (MIDDLE) FOR S1
 0C6  0105F                           LOAD s0, 5F                           ; stax 95
 0C7  011CD                           LOAD s1, CD                           ; stay 205
 0C8  01264                           LOAD s2, 64                           ; endx 100
 0C9  013CD                           LOAD s3, CD                           ; endy 205
 0CA  204DE                           CALL 4DE[draw_line]                   ;
 0CB                                  ;; LINE 4 (BOTTOMRIGHT) FOR S1
 0CB  01064                           LOAD s0, 64                           ; stax 100
 0CC  011CD                           LOAD s1, CD                           ; stay 205
 0CD  01264                           LOAD s2, 64                           ; endx 100
 0CE  013D2                           LOAD s3, D2                           ; endy 210
 0CF  204DE                           CALL 4DE[draw_line]                   ;
 0D0                                  ;; LINE 5 (BOTTOM) FOR S1
 0D0  0105F                           LOAD s0, 5F                           ; stax 95
 0D1  011D2                           LOAD s1, D2                           ; stay 210
 0D2  01264                           LOAD s2, 64                           ; endx 100
 0D3  013D2                           LOAD s3, D2                           ; endy 210
 0D4  204DE                           CALL 4DE[draw_line]                   ;
 0D5                                  ;; LINE 1 (TOP) FOR S2
 0D5  01069                           LOAD s0, 69                           ; stax 105
 0D6  011C8                           LOAD s1, C8                           ; stay 200
 0D7  0126E                           LOAD s2, 6E                           ; endx 110
 0D8  013C8                           LOAD s3, C8                           ; endy 200
 0D9  204DE                           CALL 4DE[draw_line]                   ;
 0DA                                  ;; LINE 2 (TOPLEFT) FOR S2
 0DA  01069                           LOAD s0, 69                           ; stax 105
 0DB  011C8                           LOAD s1, C8                           ; stay 200
 0DC  01269                           LOAD s2, 69                           ; endx 105
 0DD  013CD                           LOAD s3, CD                           ; endy 205
 0DE  204DE                           CALL 4DE[draw_line]                   ;
 0DF                                  ;; LINE 3 (MIDDLE) FOR S2
 0DF  01069                           LOAD s0, 69                           ; stax 105
 0E0  011CD                           LOAD s1, CD                           ; stay 205
 0E1  0126E                           LOAD s2, 6E                           ; endx 110
 0E2  013CD                           LOAD s3, CD                           ; endy 205
 0E3  204DE                           CALL 4DE[draw_line]                   ;
 0E4                                  ;; LINE 4 (BOTTOMRIGHT) FOR S2
 0E4  0106E                           LOAD s0, 6E                           ; stax 110
 0E5  011CD                           LOAD s1, CD                           ; stay 205
 0E6  0126E                           LOAD s2, 6E                           ; endx 110
 0E7  013D2                           LOAD s3, D2                           ; endy 210
 0E8  204DE                           CALL 4DE[draw_line]                   ;
 0E9                                  ;; LINE 5 (BOTTOM) FOR S2
 0E9  01069                           LOAD s0, 69                           ; stax 105
 0EA  011D2                           LOAD s1, D2                           ; stay 210
 0EB  0126E                           LOAD s2, 6E                           ; endx 110
 0EC  013D2                           LOAD s3, D2                           ; endy 210
 0ED  204DE                           CALL 4DE[draw_line]                   ;
 0EE                                  ;;;;;;;;;;;;;;;
 0EE                                  ;;BEGIN START;;
 0EE                                  ;;;;;;;;;;;;;;;
 0EE                                  ;; LINE 1 (TOP) FOR S
 0EE  01082                           LOAD s0, 82                           ; stax 130
 0EF  011C8                           LOAD s1, C8                           ; stay 200
 0F0  01288                           LOAD s2, 88                           ; endx 135
 0F1  013C8                           LOAD s3, C8                           ; endy 200
 0F2  204DE                           CALL 4DE[draw_line]                   ;
 0F3                                  ;; LINE 2 (TOPLEFT) FOR S
 0F3  01082                           LOAD s0, 82                           ; stax 130
 0F4  011C8                           LOAD s1, C8                           ; stay 200
 0F5  01282                           LOAD s2, 82                           ; endx 130
 0F6  013CD                           LOAD s3, CD                           ; endy 205
 0F7  204DE                           CALL 4DE[draw_line]                   ;
 0F8                                  ;; LINE 3 (MIDDLE) FOR S
 0F8  01082                           LOAD s0, 82                           ; stax 130
 0F9  011CD                           LOAD s1, CD                           ; stay 205
 0FA  01287                           LOAD s2, 87                           ; endx 135
 0FB  013CD                           LOAD s3, CD                           ; endy 205
 0FC  204DE                           CALL 4DE[draw_line]                   ;
 0FD                                  ;; LINE 4 (BOTTOMRIGHT) FOR S
 0FD  01087                           LOAD s0, 87                           ; stax 135
 0FE  011CD                           LOAD s1, CD                           ; stay 205
 0FF  01287                           LOAD s2, 87                           ; endx 135
 100  013D2                           LOAD s3, D2                           ; endy 210
 101  204DE                           CALL 4DE[draw_line]                   ;
 102                                  ;; LINE 5 (BOTTOM) FOR S
 102  01082                           LOAD s0, 82                           ; stax 130
 103  011D2                           LOAD s1, D2                           ; stay 210
 104  01287                           LOAD s2, 87                           ; endx 135
 105  013D2                           LOAD s3, D2                           ; endy 210
 106  204DE                           CALL 4DE[draw_line]                   ;
 107                                  ;; LINE 1 (TOP) FOR T1
 107  0108C                           LOAD s0, 8C                           ; stax 140
 108  011C8                           LOAD s1, C8                           ; stay 200
 109  01293                           LOAD s2, 93                           ; endx 147
 10A  013C8                           LOAD s3, C8                           ; endy 200
 10B  204DE                           CALL 4DE[draw_line]                   ;
 10C                                  ;; LINE 2 (MIDDLE) FOR T1
 10C  0108F                           LOAD s0, 8F                           ; stax 143
 10D  011C8                           LOAD s1, C8                           ; stay 200
 10E  0128F                           LOAD s2, 8F                           ; endx 143
 10F  013D2                           LOAD s3, D2                           ; endy 210
 110  204DE                           CALL 4DE[draw_line]                   ;
 111                                  ;; LINE 1 (LEFT) FOR A
 111  01096                           LOAD s0, 96                           ; stax 150
 112  011C8                           LOAD s1, C8                           ; stay 200
 113  01296                           LOAD s2, 96                           ; endx 150
 114  013D2                           LOAD s3, D2                           ; endy 210
 115  204DE                           CALL 4DE[draw_line]                   ;
 116                                  ;; LINE 2 (TOP) FOR A
 116  01096                           LOAD s0, 96                           ; stax 150
 117  011C8                           LOAD s1, C8                           ; stay 200
 118  0129B                           LOAD s2, 9B                           ; endx 155
 119  013C8                           LOAD s3, C8                           ; endy 200
 11A  204DE                           CALL 4DE[draw_line]                   ;
 11B                                  ;; LINE 3 (MIDDLE) FOR A
 11B  01096                           LOAD s0, 96                           ; stax 150
 11C  011CD                           LOAD s1, CD                           ; stay 205
 11D  0129B                           LOAD s2, 9B                           ; endx 155
 11E  013CD                           LOAD s3, CD                           ; endy 205
 11F  204DE                           CALL 4DE[draw_line]                   ;
 120                                  ;; LINE 4 (RIGHT) FOR A
 120  0109B                           LOAD s0, 9B                           ; stax 155
 121  011C8                           LOAD s1, C8                           ; stay 200
 122  0129B                           LOAD s2, 9B                           ; endx 155
 123  013D2                           LOAD s3, D2                           ; endy 210
 124  204DE                           CALL 4DE[draw_line]                   ;
 125                                  ;; LINE 1 (LEFT) FOR R
 125  010A0                           LOAD s0, A0                           ; stax 160
 126  011C8                           LOAD s1, C8                           ; stay 200
 127  012A0                           LOAD s2, A0                           ; endx 160
 128  013D2                           LOAD s3, D2                           ; endy 210
 129  204DE                           CALL 4DE[draw_line]                   ;
 12A                                  ;; LINE 2 (TOP) FOR R
 12A  010A0                           LOAD s0, A0                           ; stax 160
 12B  011C8                           LOAD s1, C8                           ; stay 200
 12C  012A5                           LOAD s2, A5                           ; endx 165
 12D  013C8                           LOAD s3, C8                           ; endy 200
 12E  204DE                           CALL 4DE[draw_line]                   ;
 12F                                  ;; LINE 3 (RIGHT) FOR R
 12F  010A5                           LOAD s0, A5                           ; stax 165
 130  011C8                           LOAD s1, C8                           ; stay 200
 131  012A5                           LOAD s2, A5                           ; endx 165
 132  013CD                           LOAD s3, CD                           ; endy 205
 133  204DE                           CALL 4DE[draw_line]                   ;
 134                                  ;; LINE 4 (MIDDLE) FOR R
 134  010A0                           LOAD s0, A0                           ; stax 160
 135  011CD                           LOAD s1, CD                           ; stay 205
 136  012A5                           LOAD s2, A5                           ; endx 165
 137  013CD                           LOAD s3, CD                           ; endy 205
 138  204DE                           CALL 4DE[draw_line]                   ;
 139                                  ;; LINE 5 (ANGLED) FOR R
 139  010A0                           LOAD s0, A0                           ; stax 160
 13A  011CD                           LOAD s1, CD                           ; stay 205
 13B  012A5                           LOAD s2, A5                           ; endx 165
 13C  013D2                           LOAD s3, D2                           ; endy 210
 13D  204DE                           CALL 4DE[draw_line]                   ;
 13E                                  ;; LINE 6 (ANGLED2) FOR R
 13E  010A0                           LOAD s0, A0                           ; stax 160
 13F  011CE                           LOAD s1, CE                           ; stay 206
 140  012A4                           LOAD s2, A4                           ; endx 164
 141  013D2                           LOAD s3, D2                           ; endy 210
 142  204DE                           CALL 4DE[draw_line]                   ;
 143                                  ;; LINE 1 (TOP) FOR T2
 143  010AA                           LOAD s0, AA                           ; stax 170
 144  011C8                           LOAD s1, C8                           ; stay 200
 145  012B1                           LOAD s2, B1                           ; endx 177
 146  013C8                           LOAD s3, C8                           ; endy 200
 147  204DE                           CALL 4DE[draw_line]                   ;
 148                                  ;; LINE 2 (MIDDLE) FOR T2
 148  010AD                           LOAD s0, AD                           ; stax 173
 149  011C8                           LOAD s1, C8                           ; stay 200
 14A  012AD                           LOAD s2, AD                           ; endx 173
 14B  013D2                           LOAD s3, D2                           ; endy 210
 14C  204DE                           CALL 4DE[draw_line]                   ;
 14D                                  ;;============================================================================
 14D                                  ;; Draws Decoration (Line 1a)
 14D                                  ;;============================================================================
 14D  01000                           LOAD s0, 00                           ; load 00 into s0
 14E  0110A                           LOAD s1, 0A                           ; load 0A into s1
 14F  012FF                           LOAD s2, FF                           ; load FF into s2
 150  0130A                           LOAD s3, 0A                           ; load 0A into s3
 151  204DE                           CALL 4DE[draw_line]                   ; draws the line
 152                                  ;;===========================================================================
 152                                  ;; Draws Decoration (Line 2a)
 152                                  ;;============================================================================
 152  01000                           LOAD s0, 00                           ; load 00 into s0
 153  0110C                           LOAD s1, 0C                           ; load 0C into s1
 154  012FF                           LOAD s2, FF                           ; load FF into s2
 155  0130C                           LOAD s3, 0C                           ; load 0C into s3
 156  204DE                           CALL 4DE[draw_line]                   ; draws the line
 157                                  ;;===========================================================================
 157                                  ;; Draws Decoration (Line 3a)
 157                                  ;;============================================================================
 157  01000                           LOAD s0, 00                           ; load 00 into s0
 158  0110E                           LOAD s1, 0E                           ; load 0E into s1
 159  012FF                           LOAD s2, FF                           ; load FF into s2
 15A  0130E                           LOAD s3, 0E                           ; load 0E into s3
 15B  204DE                           CALL 4DE[draw_line]                   ; draws the line
 15C                                  ;;============================================================================
 15C                                  ;; Draws Decoration (Line 1b)
 15C                                  ;;============================================================================
 15C  01000                           LOAD s0, 00                           ; load 00 into s0
 15D  01188                           LOAD s1, 88                           ; load 88 into s1
 15E  012FF                           LOAD s2, FF                           ; load FF into s2
 15F  01388                           LOAD s3, 88                           ; load 88 into s3
 160  204DE                           CALL 4DE[draw_line]                   ; draws the line
 161                                  ;;===========================================================================
 161                                  ;; Draws Decoration (Line 2b)
 161                                  ;;============================================================================
 161  01000                           LOAD s0, 00                           ; load 00 into s0
 162  0118A                           LOAD s1, 8A                           ; load 8A into s1
 163  012FF                           LOAD s2, FF                           ; load FF into s2
 164  0138A                           LOAD s3, 8A                           ; load 8A into s3
 165  204DE                           CALL 4DE[draw_line]                   ; draws the line
 166                                  ;;===========================================================================
 166                                  ;; Draws Decoration (Line 3b)
 166                                  ;;============================================================================
 166  01000                           LOAD s0, 00                           ; load 00 into s0
 167  0118C                           LOAD s1, 8C                           ; load 8A into s1
 168  012FF                           LOAD s2, FF                           ; load FF into s2
 169  0138C                           LOAD s3, 8C                           ; load 8C into s3
 16A  204DE                           CALL 4DE[draw_line]                   ; draws the line
 16B                                  ;;============================================================================
 16B                                  ;; Draws the letter H (Line 1)
 16B                                  ;;============================================================================
 16B                                  ;; STARTING POINT
 16B  0150A                           LOAD s5, 0A                           ; load 10 into s5
 16C  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 16D  0161E                           LOAD s6, 1E                           ; load 30 into s6
 16E  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 16F                                  ;; ENDING POINT
 16F  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 170  0163C                           LOAD s6, 3C                           ; load 60 into s6
 171  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 172  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 173                                  ;;============================================================================
 173                                  ;; Draws the letter H (Line 2)
 173                                  ;;============================================================================
 173                                  ;; STARTING POINT
 173  0150A                           LOAD s5, 0A                           ; load 10 into s5
 174  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 175  0162D                           LOAD s6, 2D                           ; load 45 into s6
 176  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 177                                  ;; ENDING POINT
 177  0151E                           LOAD s5, 1E                           ; load 30 into s5
 178  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 179  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 17A  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 17B                                  ;;============================================================================
 17B                                  ;; Draws the letter H (Line 3)
 17B                                  ;;============================================================================
 17B                                  ;; STARTING POINT
 17B  0151E                           LOAD s5, 1E                           ; load 30 into s5
 17C  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 17D  0161E                           LOAD s6, 1E                           ; load 30 into s6
 17E  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 17F                                  ;; ENDING POINT
 17F  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 180  0163C                           LOAD s6, 3C                           ; load 60 into s6
 181  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 182  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 183                                  ;;============================================================================
 183                                  ;; Draws the letter E (Line 1)
 183                                  ;;============================================================================
 183                                  ;; STARTING POINT
 183  01528                           LOAD s5, 28                           ; load 40 into s5
 184  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 185  0161E                           LOAD s6, 1E                           ; load 30 into s6
 186  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 187                                  ;; ENDING POINT
 187  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 188  0163C                           LOAD s6, 3C                           ; load 60 into s6
 189  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 18A  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 18B                                  ;;============================================================================
 18B                                  ;; Draws the letter E (Line 2)
 18B                                  ;;============================================================================
 18B                                  ;; STARTING POINT
 18B  01528                           LOAD s5, 28                           ; load 40 into s5
 18C  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 18D  0161E                           LOAD s6, 1E                           ; load 30 into s6
 18E  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 18F                                  ;; ENDING POINT
 18F  0153C                           LOAD s5, 3C                           ; load 60 into s5
 190  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 191  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 192  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 193                                  ;;============================================================================
 193                                  ;; Draws the letter E (Line 3)
 193                                  ;;============================================================================
 193                                  ;; STARTING POINT
 193  01528                           LOAD s5, 28                           ; load 40 into s5
 194  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 195  0162D                           LOAD s6, 2D                           ; load 45 into s6
 196  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 197                                  ;; ENDING POINT
 197  0153C                           LOAD s5, 3C                           ; load 60 into s5
 198  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 199  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 19A  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 19B                                  ;;============================================================================
 19B                                  ;; Draws the letter E (Line 3)
 19B                                  ;;============================================================================
 19B                                  ;; STARTING POINT
 19B  01528                           LOAD s5, 28                           ; load 40 into s5
 19C  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 19D  0163C                           LOAD s6, 3C                           ; load 45 into s6
 19E  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 19F                                  ;; ENDING POINT
 19F  0153C                           LOAD s5, 3C                           ; load 60 into s5
 1A0  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1A1  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1A2  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1A3                                  ;;============================================================================
 1A3                                  ;; Draws the letter L (Line 1)
 1A3                                  ;;============================================================================
 1A3                                  ;; STARTING POINT
 1A3  01546                           LOAD s5, 46                           ; load 70 into s5
 1A4  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1A5  0161E                           LOAD s6, 1E                           ; load 30 into s6
 1A6  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1A7                                  ;; ENDING POINT
 1A7  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1A8  0163C                           LOAD s6, 3C                           ; load 60 into s6
 1A9  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1AA  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1AB                                  ;;============================================================================
 1AB                                  ;; Draws the letter L (Line 2)
 1AB                                  ;;============================================================================
 1AB                                  ;; STARTING POINT
 1AB  01546                           LOAD s5, 46                           ; load 70 into s5
 1AC  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1AD  0163C                           LOAD s6, 3C                           ; load 45 into s6
 1AE  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1AF                                  ;; ENDING POINT
 1AF  0155A                           LOAD s5, 5A                           ; load 90 into s5
 1B0  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1B1  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1B2  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1B3                                  ;;============================================================================
 1B3                                  ;; Draws the letter I (Line 1)
 1B3                                  ;;============================================================================
 1B3                                  ;; STARTING POINT
 1B3  01564                           LOAD s5, 64                           ; load 70 into s5
 1B4  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1B5  0161E                           LOAD s6, 1E                           ; load 30 into s6
 1B6  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1B7                                  ;; ENDING POINT
 1B7  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1B8  0163C                           LOAD s6, 3C                           ; load 60 into s6
 1B9  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1BA  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1BB                                  ;;============================================================================
 1BB                                  ;; Draws the letter C (Line 1)
 1BB                                  ;;============================================================================
 1BB                                  ;; STARTING POINT
 1BB  01582                           LOAD s5, 82                           ; load 130 into s5
 1BC  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1BD  0161E                           LOAD s6, 1E                           ; load 45 into s6
 1BE  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1BF                                  ;; ENDING POINT
 1BF  01573                           LOAD s5, 73                           ; load 115 into s5
 1C0  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1C1  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1C2  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1C3                                  ;;============================================================================
 1C3                                  ;; Draws the letter C (Line 2)
 1C3                                  ;;============================================================================
 1C3                                  ;; STARTING POINT
 1C3  01573                           LOAD s5, 73                           ; load 115 into s5
 1C4  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1C5  0161E                           LOAD s6, 1E                           ; load 45 into s6
 1C6  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1C7                                  ;; ENDING POINT
 1C7  0156E                           LOAD s5, 6E                           ; load 110 into s5
 1C8  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1C9  01623                           LOAD s6, 23                           ; load 35 into s6
 1CA  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1CB  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1CC                                  ;;============================================================================
 1CC                                  ;; Draws the letter C (Line 3)
 1CC                                  ;;============================================================================
 1CC                                  ;; STARTING POINT
 1CC  0156E                           LOAD s5, 6E                           ; load 110 into s5
 1CD  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1CE  01623                           LOAD s6, 23                           ; load 35 into s6
 1CF  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1D0                                  ;; ENDING POINT
 1D0  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1D1  01637                           LOAD s6, 37                           ; load 55 into s6
 1D2  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1D3  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1D4                                  ;;============================================================================
 1D4                                  ;; Draws the letter C (Line 4)
 1D4                                  ;;============================================================================
 1D4                                  ;; STARTING POINT
 1D4  0156E                           LOAD s5, 6E                           ; load 110 into s5
 1D5  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1D6  01637                           LOAD s6, 37                           ; load 55 into s6
 1D7  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1D8                                  ;; ENDING POINT
 1D8  01573                           LOAD s5, 73                           ; load 130 into s5
 1D9  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1DA  0163B                           LOAD s6, 3B                           ; load 44 into s6
 1DB  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1DC  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1DD                                  ;;============================================================================
 1DD                                  ;; Draws the letter C (Line 5)
 1DD                                  ;;============================================================================
 1DD                                  ;; STARTING POINT
 1DD  01582                           LOAD s5, 82                           ; load 130 into s5
 1DE  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1DF  0163C                           LOAD s6, 3C                           ; load 45 into s6
 1E0  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1E1                                  ;; ENDING POINT
 1E1  01573                           LOAD s5, 73                           ; load 115 into s5
 1E2  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1E3  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1E4  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1E5                                  ;;============================================================================
 1E5                                  ;; Draws the letter O (Line 1)
 1E5                                  ;;============================================================================
 1E5                                  ;; STARTING POINT
 1E5  01591                           LOAD s5, 91                           ; load 145 into s5
 1E6  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1E7  0161E                           LOAD s6, 1E                           ; load 30 into s6
 1E8  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1E9                                  ;; ENDING POINT
 1E9  0159B                           LOAD s5, 9B                           ; load 155 into s5
 1EA  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1EB  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1EC  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1ED                                  ;;============================================================================
 1ED                                  ;; Draws the letter O (Line 2)
 1ED                                  ;;============================================================================
 1ED                                  ;; STARTING POINT
 1ED  01591                           LOAD s5, 91                           ; load 145 into s5
 1EE  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1EF  0161E                           LOAD s6, 1E                           ; load 45 into s6
 1F0  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1F1                                  ;; ENDING POINT
 1F1  0158C                           LOAD s5, 8C                           ; load 110 into s5
 1F2  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1F3  0161E                           LOAD s6, 1E                           ; load 35 into s6
 1F4  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1F5  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1F6                                  ;;============================================================================
 1F6                                  ;; Draws the letter O (Line 3)
 1F6                                  ;;============================================================================
 1F6                                  ;; STARTING POINT
 1F6  0158C                           LOAD s5, 8C                           ; load 140 into s5
 1F7  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 1F8  0161E                           LOAD s6, 1E                           ; load 30 into s6
 1F9  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 1FA                                  ;; ENDING POINT
 1FA  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 1FB  0163C                           LOAD s6, 3C                           ; load 60 into s6
 1FC  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 1FD  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 1FE                                  ;;============================================================================
 1FE                                  ;; Draws the letter O (Line 4)
 1FE                                  ;;============================================================================
 1FE                                  ;; STARTING POINT
 1FE  0158C                           LOAD s5, 8C                           ; load 110 into s5
 1FF  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 200  0163C                           LOAD s6, 3C                           ; load 55 into s6
 201  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 202                                  ;; ENDING POINT
 202  01591                           LOAD s5, 91                           ; load 145 into s5
 203  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 204  0163C                           LOAD s6, 3C                           ; load 30 into s6
 205  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 206  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 207                                  ;;============================================================================
 207                                  ;; Draws the letter O (Line 5)
 207                                  ;;============================================================================
 207                                  ;; STARTING POINT
 207  01591                           LOAD s5, 91                           ; load 145 into s5
 208  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 209  0163C                           LOAD s6, 3C                           ; load 30 into s6
 20A  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 20B                                  ;; ENDING POINT
 20B  0159B                           LOAD s5, 9B                           ; load 155 into s5
 20C  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 20D  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 20E  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 20F                                  ;;============================================================================
 20F                                  ;; Draws the letter O (Line 6)
 20F                                  ;;============================================================================
 20F                                  ;; STARTING POINT
 20F  0159B                           LOAD s5, 9B                           ; load 110 into s5
 210  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 211  0163C                           LOAD s6, 3C                           ; load 55 into s6
 212  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 213                                  ;; ENDING POINT
 213  015A0                           LOAD s5, A0                           ; load 160 into s5
 214  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 215  0163C                           LOAD s6, 3C                           ; load 30 into s6
 216  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 217  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 218                                  ;;============================================================================
 218                                  ;; Draws the letter O (Line 7)
 218                                  ;;============================================================================
 218                                  ;; STARTING POINT
 218  015A0                           LOAD s5, A0                           ; load 160 into s5
 219  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 21A  0161E                           LOAD s6, 1E                           ; load 30 into s6
 21B  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 21C                                  ;; ENDING POINT
 21C  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 21D  0163C                           LOAD s6, 3C                           ; load 60 into s6
 21E  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 21F  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 220                                  ;;============================================================================
 220                                  ;; Draws the letter O (Line 8)
 220                                  ;;============================================================================
 220                                  ;; STARTING POINT
 220  015A0                           LOAD s5, A0                           ; load 160 into s5
 221  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 222  0161E                           LOAD s6, 1E                           ; load 30 into s6
 223  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 224                                  ;; ENDING POINT
 224  0159B                           LOAD s5, 9B                           ; load 155 into s5
 225  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 226  0161E                           LOAD s6, 1E                           ; load 30 into s6
 227  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 228  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 229                                  ;;============================================================================
 229                                  ;; Draws the letter P (Line 1)
 229                                  ;;============================================================================
 229  010AA                           LOAD s0, AA                           ; load 170 into s0
 22A  0111E                           LOAD s1, 1E                           ; load 30 into s1
 22B  012BE                           LOAD s2, BE                           ; load 190 into s2
 22C  0131E                           LOAD s3, 1E                           ; keep s3 set at 30
 22D  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 22E                                  ;;============================================================================
 22E                                  ;; Draws the letter P (Line 2)
 22E                                  ;;============================================================================
 22E  010AA                           LOAD s0, AA                           ; load 170 into s0
 22F  0111E                           LOAD s1, 1E                           ; load 30 into s1
 230  012AA                           LOAD s2, AA                           ; load 170 into s2
 231  0133C                           LOAD s3, 3C                           ; load 60 into s3
 232  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 233                                  ;;============================================================================
 233                                  ;; Draws the letter P (Line 3)
 233                                  ;;============================================================================
 233  010AA                           LOAD s0, AA                           ; load 170 into s0
 234  0112D                           LOAD s1, 2D                           ; load 45 into s1
 235  012BE                           LOAD s2, BE                           ; load 190 into s2
 236  0132D                           LOAD s3, 2D                           ; keep s0 set at 45
 237  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 238                                  ;;============================================================================
 238                                  ;; Draws the letter P (Line 4)
 238                                  ;;============================================================================
 238  010BE                           LOAD s0, BE                           ; load 190 into s0
 239  0111E                           LOAD s1, 1E                           ; load 30 into s1
 23A  012BE                           LOAD s2, BE                           ; load 190 into s2
 23B  0132D                           LOAD s3, 2D                           ; load 45 to s3
 23C  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 23D                                  ;;============================================================================
 23D                                  ;; Draws the letter T (Line 1)
 23D                                  ;;============================================================================
 23D  010C8                           LOAD s0, C8                           ; load 200 into s0
 23E  0111E                           LOAD s1, 1E                           ; load 30 into s1
 23F  012DC                           LOAD s2, DC                           ; load 220 into s2
 240  0131E                           LOAD s3, 1E                           ; load 30 to s3
 241  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 242                                  ;;============================================================================
 242                                  ;; Draws the letter T (Line 2)
 242                                  ;;============================================================================
 242  010D2                           LOAD s0, D2                           ; load 200 into s0
 243  0111E                           LOAD s1, 1E                           ; load 30 into s1
 244  012D2                           LOAD s2, D2                           ; load 220 into s2
 245  0133C                           LOAD s3, 3C                           ; load 60 to s3
 246  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 247                                  ;;============================================================================
 247                                  ;; Draws the letter E (Line 1)
 247                                  ;;============================================================================
 247  010E6                           LOAD s0, E6                           ; load 230 into s0
 248  0111E                           LOAD s1, 1E                           ; load 30 into s1
 249  012E6                           LOAD s2, E6                           ; load 230 into s2
 24A  0133C                           LOAD s3, 3C                           ; load 30 to s3
 24B  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 24C                                  ;;============================================================================
 24C                                  ;; Draws the letter E (Line 2)
 24C                                  ;;============================================================================
 24C  010E6                           LOAD s0, E6                           ; load 230 into s0
 24D  0111E                           LOAD s1, 1E                           ; load 30 into s1
 24E  012FA                           LOAD s2, FA                           ; load 250 into s2
 24F  0131E                           LOAD s3, 1E                           ; load 30 to s3
 250  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 251                                  ;;============================================================================
 251                                  ;; Draws the letter E (Line 3)
 251                                  ;;============================================================================
 251  010E6                           LOAD s0, E6                           ; load 230 into s0
 252  0112D                           LOAD s1, 2D                           ; load 30 into s1
 253  012FA                           LOAD s2, FA                           ; load 250 into s2
 254  0132D                           LOAD s3, 2D                           ; load 30 to s3
 255  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 256                                  ;;============================================================================
 256                                  ;; Draws the letter E (Line 4)
 256                                  ;;============================================================================
 256  010E6                           LOAD s0, E6                           ; load 230 into s0
 257  0113C                           LOAD s1, 3C                           ; load 30 into s1
 258  012FA                           LOAD s2, FA                           ; load 250 into s2
 259  0133C                           LOAD s3, 3C                           ; load 30 to s3
 25A  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 25B                                  ;;============================================================================
 25B                                  ;; NEW LINE STARTS HERE (GAME)
 25B                                  ;;============================================================================
 25B                                  ;;============================================================================
 25B                                  ;; Draws the letter G (Line 1)
 25B                                  ;;============================================================================
 25B  01046                           LOAD s0, 46                           ; load 70 into s0
 25C  0115A                           LOAD s1, 5A                           ; load 90 into s1
 25D  0125A                           LOAD s2, 5A                           ; load 90 into s2
 25E  0135A                           LOAD s3, 5A                           ; load 90 to s3
 25F  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 260                                  ;;============================================================================
 260                                  ;; Draws the letter G (Line 2)
 260                                  ;;============================================================================
 260  01046                           LOAD s0, 46                           ; load 70 into s0
 261  0115A                           LOAD s1, 5A                           ; load 90 into s1
 262  01246                           LOAD s2, 46                           ; load 90 into s2
 263  01378                           LOAD s3, 78                           ; load 90 to s3
 264  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 265                                  ;;============================================================================
 265                                  ;; Draws the letter G (Line 3)
 265                                  ;;============================================================================
 265  01046                           LOAD s0, 46                           ; load 70 into s0
 266  01178                           LOAD s1, 78                           ; load 90 into s1
 267  0125A                           LOAD s2, 5A                           ; load 90 into s2
 268  01378                           LOAD s3, 78                           ; load 90 to s3
 269  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 26A                                  ;;============================================================================
 26A                                  ;; Draws the letter G (Line 4)
 26A                                  ;;============================================================================
 26A  0105A                           LOAD s0, 5A                           ; load 70 into s0
 26B  01169                           LOAD s1, 69                           ; load 90 into s1
 26C  0125A                           LOAD s2, 5A                           ; load 90 into s2
 26D  01378                           LOAD s3, 78                           ; load 90 to s3
 26E  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 26F                                  ;;============================================================================
 26F                                  ;; Draws the letter G (Line 5)
 26F                                  ;;============================================================================
 26F  0105A                           LOAD s0, 5A                           ; load 70 into s0
 270  01169                           LOAD s1, 69                           ; load 90 into s1
 271  01250                           LOAD s2, 50                           ; load 90 into s2
 272  01369                           LOAD s3, 69                           ; load 90 to s3
 273  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 274                                  ;;============================================================================
 274                                  ;; Draws the letter A (Line 1)
 274                                  ;;============================================================================
 274  01064                           LOAD s0, 64                           ; 100
 275  0115A                           LOAD s1, 5A                           ; 90
 276  01278                           LOAD s2, 78                           ; 120
 277  0135A                           LOAD s3, 5A                           ; 90
 278  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 279                                  ;;============================================================================
 279                                  ;; Draws the letter A (Line 2)
 279                                  ;;============================================================================
 279  01064                           LOAD s0, 64                           ; 100
 27A  01169                           LOAD s1, 69                           ; 105
 27B  01278                           LOAD s2, 78                           ; 120
 27C  01369                           LOAD s3, 69                           ; 105
 27D  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 27E                                  ;;============================================================================
 27E                                  ;; Draws the letter A (Line 3)
 27E                                  ;;============================================================================
 27E  01064                           LOAD s0, 64                           ; 100
 27F  0115A                           LOAD s1, 5A                           ; 90
 280  01264                           LOAD s2, 64                           ; 100
 281  01378                           LOAD s3, 78                           ; 120
 282  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 283                                  ;;============================================================================
 283                                  ;; Draws the letter A (Line 4)
 283                                  ;;============================================================================
 283  01078                           LOAD s0, 78                           ; 120
 284  0115A                           LOAD s1, 5A                           ; 90
 285  01278                           LOAD s2, 78                           ; 120
 286  01378                           LOAD s3, 78                           ; 120
 287  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 288                                  ;;============================================================================
 288                                  ;; Draws the letter M (Line 1)
 288                                  ;;============================================================================
 288  01082                           LOAD s0, 82                           ; 130
 289  0115A                           LOAD s1, 5A                           ; 90
 28A  01282                           LOAD s2, 82                           ; 130
 28B  01378                           LOAD s3, 78                           ; 120
 28C  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 28D                                  ;;============================================================================
 28D                                  ;; Draws the letter M (Line 2)
 28D                                  ;;============================================================================
 28D  01096                           LOAD s0, 96                           ; 150
 28E  0115A                           LOAD s1, 5A                           ; 90
 28F  01296                           LOAD s2, 96                           ; 150
 290  01378                           LOAD s3, 78                           ; 120
 291  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 292                                  ;;============================================================================
 292                                  ;; Draws the letter M (Line 3)
 292                                  ;;============================================================================
 292  01096                           LOAD s0, 96                           ; 150
 293  0115A                           LOAD s1, 5A                           ; 90
 294  0128C                           LOAD s2, 8C                           ; 140
 295  01369                           LOAD s3, 69                           ; 105
 296  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 297                                  ;;============================================================================
 297                                  ;; Draws the letter M (Line 4)
 297                                  ;;============================================================================
 297  01082                           LOAD s0, 82                           ; 130
 298  0115A                           LOAD s1, 5A                           ; 90
 299  0128C                           LOAD s2, 8C                           ; 140
 29A  01369                           LOAD s3, 69                           ; 105
 29B  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 29C                                  ;;============================================================================
 29C                                  ;; Draws the letter E (Line 1)
 29C                                  ;;============================================================================
 29C  010A0                           LOAD s0, A0                           ; 160
 29D  0115A                           LOAD s1, 5A                           ; 90
 29E  012A0                           LOAD s2, A0                           ; 160
 29F  01378                           LOAD s3, 78                           ; 120
 2A0  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 2A1                                  ;;============================================================================
 2A1                                  ;; Draws the letter E (Line 2)
 2A1                                  ;;============================================================================
 2A1  010A0                           LOAD s0, A0                           ; 160
 2A2  0115A                           LOAD s1, 5A                           ; 90
 2A3  012B4                           LOAD s2, B4                           ; 180
 2A4  0135A                           LOAD s3, 5A                           ; 90
 2A5  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 2A6                                  ;;============================================================================
 2A6                                  ;; Draws the letter E (Line 3)
 2A6                                  ;;============================================================================
 2A6  010A0                           LOAD s0, A0                           ; 160
 2A7  01169                           LOAD s1, 69                           ; 105
 2A8  012B4                           LOAD s2, B4                           ; 180
 2A9  01369                           LOAD s3, 69                           ; 105
 2AA  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 2AB                                  ;;============================================================================
 2AB                                  ;; Draws the letter E (Line 4)
 2AB                                  ;;============================================================================
 2AB  010A0                           LOAD s0, A0                           ; 160
 2AC  01178                           LOAD s1, 78                           ; 120
 2AD  012B4                           LOAD s2, B4                           ; 180
 2AE  01378                           LOAD s3, 78                           ; 120
 2AF  204DE                           CALL 4DE[draw_line]                   ; call the draw_line subroutine
 2B0  25000                           RETURN                                ; leave start_screen subroutine
 2B1                                  ;;============================================================================
 2B1                                  ;; Game Over - Draw Game Over Screen Subroutine
 2B1                                  ;;============================================================================
 2B1                   draw_gameover: 
 2B1                                  ;;;;;;;;;;;;;;;;;;;;;;;;
 2B1                                  ;; Code for Game Over ;;
 2B1                                  ;;;;;;;;;;;;;;;;;;;;;;;;
 2B1                                  ;;;;;;;;;;;;;;;
 2B1                                  ;;BEGIN GAME;;
 2B1                                  ;;;;;;;;;;;;;;;
 2B1                                  ;; LINE 1 (TOP) FOR G
 2B1  0100A                           LOAD s0, 0A                           ; stax 10
 2B2  0111E                           LOAD s1, 1E                           ; stay 30
 2B3  0121E                           LOAD s2, 1E                           ; endx 30
 2B4  0131E                           LOAD s3, 1E                           ; endy 30
 2B5  204DE                           CALL 4DE[draw_line]                   ;
 2B6                                  ;; LINE 2 (LEFT) FOR G
 2B6  0100A                           LOAD s0, 0A                           ; stax 10
 2B7  0111E                           LOAD s1, 1E                           ; stay 30
 2B8  0120A                           LOAD s2, 0A                           ; endx 10
 2B9  0133C                           LOAD s3, 3C                           ; endy 60
 2BA  204DE                           CALL 4DE[draw_line]                   ;
 2BB                                  ;; LINE 3 (BOTTOM) FOR G
 2BB  0100A                           LOAD s0, 0A                           ; stax 10
 2BC  0113C                           LOAD s1, 3C                           ; stay 60
 2BD  0121E                           LOAD s2, 1E                           ; endx 30
 2BE  0133C                           LOAD s3, 3C                           ; endy 60
 2BF  204DE                           CALL 4DE[draw_line]                   ;
 2C0                                  ;; LINE 4 (RIGHT) FOR G
 2C0  0101E                           LOAD s0, 1E                           ; stax 30
 2C1  01132                           LOAD s1, 32                           ; stay 50
 2C2  0121E                           LOAD s2, 1E                           ; endx 30
 2C3  0133C                           LOAD s3, 3C                           ; endy 60
 2C4  204DE                           CALL 4DE[draw_line]                   ;
 2C5                                  ;; LINE 5 (INNER MIDDLE) FOR G
 2C5  01014                           LOAD s0, 14                           ; stax 20
 2C6  01132                           LOAD s1, 32                           ; stay 50
 2C7  0121E                           LOAD s2, 1E                           ; endx 30
 2C8  01332                           LOAD s3, 32                           ; endy 50
 2C9  204DE                           CALL 4DE[draw_line]                   ;
 2CA                                  ;; LINE 1 (LEFT) FOR A
 2CA  01028                           LOAD s0, 28                           ; stax 40
 2CB  0111E                           LOAD s1, 1E                           ; stay 30
 2CC  01228                           LOAD s2, 28                           ; endx 40
 2CD  0133C                           LOAD s3, 3C                           ; endy 60
 2CE  204DE                           CALL 4DE[draw_line]                   ;
 2CF                                  ;; LINE 2 (TOP) FOR A
 2CF  01028                           LOAD s0, 28                           ; stax 40
 2D0  0111E                           LOAD s1, 1E                           ; stay 30
 2D1  0123C                           LOAD s2, 3C                           ; endx 60
 2D2  0131E                           LOAD s3, 1E                           ; endy 30
 2D3  204DE                           CALL 4DE[draw_line]                   ;
 2D4                                  ;; LINE 3 (MIDDLE) FOR A
 2D4  01028                           LOAD s0, 28                           ; stax 40
 2D5  0112D                           LOAD s1, 2D                           ; stay 45
 2D6  0123C                           LOAD s2, 3C                           ; endx 60
 2D7  0132D                           LOAD s3, 2D                           ; endy 45
 2D8  204DE                           CALL 4DE[draw_line]                   ;
 2D9                                  ;; LINE 4 (RIGHT) FOR A
 2D9  0103C                           LOAD s0, 3C                           ; stax 60
 2DA  0111E                           LOAD s1, 1E                           ; stay 30
 2DB  0123C                           LOAD s2, 3C                           ; endx 60
 2DC  0133C                           LOAD s3, 3C                           ; endy 60
 2DD  204DE                           CALL 4DE[draw_line]                   ;
 2DE                                  ;; LINE 1 (LEFT) FOR M
 2DE  01046                           LOAD s0, 46                           ; stax 70
 2DF  0111E                           LOAD s1, 1E                           ; stay 30
 2E0  01246                           LOAD s2, 46                           ; endx 70
 2E1  0133C                           LOAD s3, 3C                           ; endy 60
 2E2  204DE                           CALL 4DE[draw_line]                   ;
 2E3                                  ;; LINE 2 (LEFT ANGLED) FOR M
 2E3  01046                           LOAD s0, 46                           ; stax 70
 2E4  0111E                           LOAD s1, 1E                           ; stay 30
 2E5  01250                           LOAD s2, 50                           ; endx 80
 2E6  01332                           LOAD s3, 32                           ; endy 50
 2E7  204DE                           CALL 4DE[draw_line]                   ;
 2E8                                  ;; LINE 3 (RIGHT ANGLED) FOR M
 2E8  0105A                           LOAD s0, 5A                           ; stax 90
 2E9  0111E                           LOAD s1, 1E                           ; stay 30
 2EA  01250                           LOAD s2, 50                           ; endx 80
 2EB  01332                           LOAD s3, 32                           ; endy 50
 2EC  204DE                           CALL 4DE[draw_line]                   ;
 2ED                                  ;; LINE 4 (RIGHT) FOR M
 2ED  0105A                           LOAD s0, 5A                           ; stax 90
 2EE  0111E                           LOAD s1, 1E                           ; stay 30
 2EF  0125A                           LOAD s2, 5A                           ; endx 90
 2F0  0133C                           LOAD s3, 3C                           ; endy 60
 2F1  204DE                           CALL 4DE[draw_line]                   ;
 2F2                                  ;; LINE 1 (LEFT) FOR E1
 2F2  01064                           LOAD s0, 64                           ; stax 100
 2F3  0111E                           LOAD s1, 1E                           ; stay 30
 2F4  01264                           LOAD s2, 64                           ; endx 100
 2F5  0133C                           LOAD s3, 3C                           ; endy 60
 2F6  204DE                           CALL 4DE[draw_line]                   ;
 2F7                                  ;; LINE 2 (TOP) FOR E1
 2F7  01064                           LOAD s0, 64                           ; stax 100
 2F8  0111E                           LOAD s1, 1E                           ; stay 30
 2F9  01278                           LOAD s2, 78                           ; endx 120
 2FA  0131E                           LOAD s3, 1E                           ; endy 30
 2FB  204DE                           CALL 4DE[draw_line]                   ;
 2FC                                  ;; LINE 3 (MIDDLE) FOR E1
 2FC  01064                           LOAD s0, 64                           ; stax 100
 2FD  0112D                           LOAD s1, 2D                           ; stay 45
 2FE  01278                           LOAD s2, 78                           ; endx 120
 2FF  0132D                           LOAD s3, 2D                           ; endy 45
 300  204DE                           CALL 4DE[draw_line]                   ;
 301                                  ;; LINE 4 (BOTTOM) FOR E1
 301  01064                           LOAD s0, 64                           ; stax 100
 302  0113C                           LOAD s1, 3C                           ; stay 60
 303  01278                           LOAD s2, 78                           ; endx 120
 304  0133C                           LOAD s3, 3C                           ; endy 60
 305  204DE                           CALL 4DE[draw_line]                   ;
 306                                  ;; LINE 1 (LEFT) FOR O
 306  01082                           LOAD s0, 82                           ; stax 130
 307  0111E                           LOAD s1, 1E                           ; stay 30
 308  01282                           LOAD s2, 82                           ; endx 130
 309  0133C                           LOAD s3, 3C                           ; endy 60
 30A  204DE                           CALL 4DE[draw_line]                   ;
 30B                                  ;; LINE 2 (TOP) FOR O
 30B  01082                           LOAD s0, 82                           ; stax 130
 30C  0111E                           LOAD s1, 1E                           ; stay 30
 30D  01296                           LOAD s2, 96                           ; endx 150
 30E  0131E                           LOAD s3, 1E                           ; endy 30
 30F  204DE                           CALL 4DE[draw_line]                   ;
 310                                  ;; LINE 3 (RIGHT) FOR O
 310  01096                           LOAD s0, 96                           ; stax 150
 311  0111E                           LOAD s1, 1E                           ; stay 30
 312  01296                           LOAD s2, 96                           ; endx 150
 313  0133C                           LOAD s3, 3C                           ; endy 60
 314  204DE                           CALL 4DE[draw_line]                   ;
 315                                  ;; LINE 4 (BOTTOM) FOR O
 315  01082                           LOAD s0, 82                           ; stax 130
 316  0113C                           LOAD s1, 3C                           ; stay 60
 317  01296                           LOAD s2, 96                           ; endx 150
 318  0133C                           LOAD s3, 3C                           ; endy 60
 319  204DE                           CALL 4DE[draw_line]                   ;
 31A                                  ;; LINE 1 (LEFTANGLE) FOR V
 31A  010A0                           LOAD s0, A0                           ; stax 160
 31B  0111E                           LOAD s1, 1E                           ; stay 30
 31C  012AA                           LOAD s2, AA                           ; endx 170
 31D  0133C                           LOAD s3, 3C                           ; endy 60
 31E  204DE                           CALL 4DE[draw_line]                   ;
 31F                                  ;; LINE 2 (RIGHTANGLE) FOR V
 31F  010B4                           LOAD s0, B4                           ; stax 180
 320  0111E                           LOAD s1, 1E                           ; stay 30
 321  012AA                           LOAD s2, AA                           ; endx 170
 322  0133C                           LOAD s3, 3C                           ; endy 60
 323  204DE                           CALL 4DE[draw_line]                   ;
 324                                  ;; LINE 1 (LEFT) FOR E
 324  010BE                           LOAD s0, BE                           ; stax 190
 325  0111E                           LOAD s1, 1E                           ; stay 30
 326  012BE                           LOAD s2, BE                           ; endx 190
 327  0133C                           LOAD s3, 3C                           ; endy 60
 328  204DE                           CALL 4DE[draw_line]                   ;
 329                                  ;; LINE 2 (TOP) FOR E
 329  010BE                           LOAD s0, BE                           ; stax 190
 32A  0111E                           LOAD s1, 1E                           ; stay 30
 32B  012D2                           LOAD s2, D2                           ; endx 210
 32C  0131E                           LOAD s3, 1E                           ; endy 30
 32D  204DE                           CALL 4DE[draw_line]                   ;
 32E                                  ;; LINE 3 (MIDDLE) FOR E
 32E  010BE                           LOAD s0, BE                           ; stax 190
 32F  0112D                           LOAD s1, 2D                           ; stay 45
 330  012D2                           LOAD s2, D2                           ; endx 210
 331  0132D                           LOAD s3, 2D                           ; endy 45
 332  204DE                           CALL 4DE[draw_line]                   ;
 333                                  ;; LINE 4 (BOTTOM) FOR E
 333  010BE                           LOAD s0, BE                           ; stax 190
 334  0113C                           LOAD s1, 3C                           ; stay 60
 335  012D2                           LOAD s2, D2                           ; endx 210
 336  0133C                           LOAD s3, 3C                           ; endy 60
 337  204DE                           CALL 4DE[draw_line]                   ;
 338                                  ;; LINE 1 (LEFT) FOR R
 338  010DC                           LOAD s0, DC                           ; stax 220
 339  0111E                           LOAD s1, 1E                           ; stay 30
 33A  012DC                           LOAD s2, DC                           ; endx 220
 33B  0133C                           LOAD s3, 3C                           ; endy 60
 33C  204DE                           CALL 4DE[draw_line]                   ;
 33D                                  ;; LINE 2 (TOP) FOR R
 33D  010DC                           LOAD s0, DC                           ; stax 220
 33E  0111E                           LOAD s1, 1E                           ; stay 30
 33F  012F0                           LOAD s2, F0                           ; endx 240
 340  0131E                           LOAD s3, 1E                           ; endy 30
 341  204DE                           CALL 4DE[draw_line]                   ;
 342                                  ;; LINE 3 (RIGHT) FOR R
 342  010F0                           LOAD s0, F0                           ; stax 240
 343  0111E                           LOAD s1, 1E                           ; stay 30
 344  012F0                           LOAD s2, F0                           ; endx 240
 345  0132D                           LOAD s3, 2D                           ; endy 45
 346  204DE                           CALL 4DE[draw_line]                   ;
 347                                  ;; LINE 4 (MIDDLE) FOR R
 347  010DC                           LOAD s0, DC                           ; stax 220
 348  0112D                           LOAD s1, 2D                           ; stay 45
 349  012F0                           LOAD s2, F0                           ; endx 240
 34A  0132D                           LOAD s3, 2D                           ; endy 45
 34B  204DE                           CALL 4DE[draw_line]                   ;
 34C                                  ;; LINE 5 (ANGLED1) FOR R
 34C  010DC                           LOAD s0, DC                           ; stax 220
 34D  0112D                           LOAD s1, 2D                           ; stay 45
 34E  012F0                           LOAD s2, F0                           ; endx 240
 34F  0133C                           LOAD s3, 3C                           ; endy 60
 350  204DE                           CALL 4DE[draw_line]                   ;
 351                                  ;; LINE 6 (ANGLED2) FOR R
 351  010DC                           LOAD s0, DC                           ; stax 220
 352  0112E                           LOAD s1, 2E                           ; stay 46
 353  012EF                           LOAD s2, EF                           ; endx 239
 354  0133C                           LOAD s3, 3C                           ; endy 60
 355  204DE                           CALL 4DE[draw_line]                   ;
 356  25000                           RETURN                                ;
 357                                  ;;============================================================================
 357                                  ;; Credits - Draw Credits Screen Subroutine
 357                                  ;;============================================================================
 357                    draw_credits: 
 357                                  ;; LINE 1 (TOP) FOR C
 357  01023                           LOAD s0, 23                           ; stax 35
 358  0111E                           LOAD s1, 1E                           ; stay 30
 359  0122D                           LOAD s2, 2D                           ; endx 45
 35A  0131E                           LOAD s3, 1E                           ; endy 30
 35B  204DE                           CALL 4DE[draw_line]                   ;
 35C                                  ;; LINE 2 (TOPLEFT ANGLED) FOR C
 35C  01023                           LOAD s0, 23                           ; stax 35
 35D  0111E                           LOAD s1, 1E                           ; stay 30
 35E  01219                           LOAD s2, 19                           ; endx 25
 35F  01328                           LOAD s3, 28                           ; endy 40
 360  204DE                           CALL 4DE[draw_line]                   ;
 361                                  ;; LINE 3 (LEFT) FOR C
 361  01019                           LOAD s0, 19                           ; stax 25
 362  01128                           LOAD s1, 28                           ; stay 40
 363  01219                           LOAD s2, 19                           ; endx 25
 364  01332                           LOAD s3, 32                           ; endy 50
 365  204DE                           CALL 4DE[draw_line]                   ;
 366                                  ;; LINE 4 (BOTTOMLEFT ANGLED) FOR C
 366  01019                           LOAD s0, 19                           ; stax 25
 367  01132                           LOAD s1, 32                           ; stay 50
 368  01223                           LOAD s2, 23                           ; endx 35
 369  0133C                           LOAD s3, 3C                           ; endy 60
 36A  204DE                           CALL 4DE[draw_line]                   ;
 36B                                  ;; LINE 5 (BOTTOM) FOR C
 36B  01023                           LOAD s0, 23                           ; stax 35
 36C  0113C                           LOAD s1, 3C                           ; stay 60
 36D  0122D                           LOAD s2, 2D                           ; endx 45
 36E  0133C                           LOAD s3, 3C                           ; endy 60
 36F  204DE                           CALL 4DE[draw_line]                   ;
 370                                  ;; LINE 1 (LEFT) FOR R
 370  01037                           LOAD s0, 37                           ; stax 55
 371  0111E                           LOAD s1, 1E                           ; stay 30
 372  01237                           LOAD s2, 37                           ; endx 55
 373  0133C                           LOAD s3, 3C                           ; endy 60
 374  204DE                           CALL 4DE[draw_line]                   ;
 375                                  ;; LINE 2 (TOP) FOR R
 375  01037                           LOAD s0, 37                           ; stax 55
 376  0111E                           LOAD s1, 1E                           ; stay 30
 377  0124B                           LOAD s2, 4B                           ; endx 75
 378  0131E                           LOAD s3, 1E                           ; endy 30
 379  204DE                           CALL 4DE[draw_line]                   ;
 37A                                  ;; LINE 3 (RIGHT) FOR R
 37A  0104B                           LOAD s0, 4B                           ; stax 75
 37B  0111E                           LOAD s1, 1E                           ; stay 30
 37C  0124B                           LOAD s2, 4B                           ; endx 75
 37D  0132D                           LOAD s3, 2D                           ; endy 45
 37E  204DE                           CALL 4DE[draw_line]                   ;
 37F                                  ;; LINE 4 (MIDDLE) FOR R
 37F  01037                           LOAD s0, 37                           ; stax 55
 380  0112D                           LOAD s1, 2D                           ; stay 45
 381  0124B                           LOAD s2, 4B                           ; endx 75
 382  0132D                           LOAD s3, 2D                           ; endy 45
 383  204DE                           CALL 4DE[draw_line]                   ;
 384                                  ;; LINE 5 (ANGLED) FOR R
 384  01037                           LOAD s0, 37                           ; stax 55
 385  0112D                           LOAD s1, 2D                           ; stay 45
 386  0124B                           LOAD s2, 4B                           ; endx 75
 387  0133C                           LOAD s3, 3C                           ; endy 60
 388  204DE                           CALL 4DE[draw_line]                   ;
 389                                  ;; LINE 6 (ANGLED2) FOR R
 389  01037                           LOAD s0, 37                           ; stax 55
 38A  0112E                           LOAD s1, 2E                           ; stay 46
 38B  0124A                           LOAD s2, 4A                           ; endx 74
 38C  0133C                           LOAD s3, 3C                           ; endy 60
 38D  204DE                           CALL 4DE[draw_line]                   ;
 38E                                  ;; LINE 1 (LEFT) FOR E
 38E  01055                           LOAD s0, 55                           ; stax 85
 38F  0111E                           LOAD s1, 1E                           ; stay 30
 390  01255                           LOAD s2, 55                           ; endx 85
 391  0133C                           LOAD s3, 3C                           ; endy 60
 392  204DE                           CALL 4DE[draw_line]                   ;
 393                                  ;; LINE 2 (TOP) FOR E
 393  01055                           LOAD s0, 55                           ; stax 85
 394  0111E                           LOAD s1, 1E                           ; stay 30
 395  01269                           LOAD s2, 69                           ; endx 105
 396  0131E                           LOAD s3, 1E                           ; endy 30
 397  204DE                           CALL 4DE[draw_line]                   ;
 398                                  ;; LINE 3 (MIDDLE) FOR E
 398  01055                           LOAD s0, 55                           ; stax 85
 399  0112D                           LOAD s1, 2D                           ; stay 45
 39A  01269                           LOAD s2, 69                           ; endx 105
 39B  0132D                           LOAD s3, 2D                           ; endy 45
 39C  204DE                           CALL 4DE[draw_line]                   ;
 39D                                  ;; LINE 4 (BOTTOM) FOR E
 39D  01055                           LOAD s0, 55                           ; stax 85
 39E  0113C                           LOAD s1, 3C                           ; stay 60
 39F  01269                           LOAD s2, 69                           ; endx 105
 3A0  0133C                           LOAD s3, 3C                           ; endy 60
 3A1  204DE                           CALL 4DE[draw_line]                   ;
 3A2                                  ;; LINE 1 (LEFT) FOR D
 3A2  01073                           LOAD s0, 73                           ; stax 115
 3A3  0111E                           LOAD s1, 1E                           ; stay 30
 3A4  01273                           LOAD s2, 73                           ; endx 115
 3A5  0133C                           LOAD s3, 3C                           ; endy 60
 3A6  204DE                           CALL 4DE[draw_line]                   ;
 3A7                                  ;; LINE 2 (TOP) FOR D
 3A7  01073                           LOAD s0, 73                           ; stax 115
 3A8  0111E                           LOAD s1, 1E                           ; stay 30
 3A9  01282                           LOAD s2, 82                           ; endx 130
 3AA  0131E                           LOAD s3, 1E                           ; endy 30
 3AB  204DE                           CALL 4DE[draw_line]                   ;
 3AC                                  ;; LINE 3 (TOPRIGHT ANGLED) FOR D
 3AC  01082                           LOAD s0, 82                           ; stax 130
 3AD  0111E                           LOAD s1, 1E                           ; stay 30
 3AE  01287                           LOAD s2, 87                           ; endx 135
 3AF  01323                           LOAD s3, 23                           ; endy 35
 3B0  204DE                           CALL 4DE[draw_line]                   ;
 3B1                                  ;; LINE 4 (RIGHT) FOR D
 3B1  01087                           LOAD s0, 87                           ; stax 135
 3B2  01123                           LOAD s1, 23                           ; stay 35
 3B3  01287                           LOAD s2, 87                           ; endx 135
 3B4  01337                           LOAD s3, 37                           ; endy 55
 3B5  204DE                           CALL 4DE[draw_line]                   ;
 3B6                                  ;; LINE 5 (BOTTOMRIGHT ANGLED) FOR D
 3B6  01087                           LOAD s0, 87                           ; stax 135
 3B7  01137                           LOAD s1, 37                           ; stay 55
 3B8  01282                           LOAD s2, 82                           ; endx 130
 3B9  0133C                           LOAD s3, 3C                           ; endy 60
 3BA  204DE                           CALL 4DE[draw_line]                   ;
 3BB                                  ;; LINE 6 (BOTTOM) FOR D
 3BB  01073                           LOAD s0, 73                           ; stax 115
 3BC  0113C                           LOAD s1, 3C                           ; stay 60
 3BD  01282                           LOAD s2, 82                           ; endx 130
 3BE  0133C                           LOAD s3, 3C                           ; endy 60
 3BF  204DE                           CALL 4DE[draw_line]                   ;
 3C0                                  ;; LINE 1 (TOP) FOR I
 3C0  01091                           LOAD s0, 91                           ; stax 145
 3C1  0111E                           LOAD s1, 1E                           ; stay 30
 3C2  012A5                           LOAD s2, A5                           ; endx 165
 3C3  0131E                           LOAD s3, 1E                           ; endy 30
 3C4  204DE                           CALL 4DE[draw_line]                   ;
 3C5                                  ;; LINE 2 (MIDDLE) FOR I
 3C5  0109B                           LOAD s0, 9B                           ; stax 155
 3C6  0111E                           LOAD s1, 1E                           ; stay 30
 3C7  0129B                           LOAD s2, 9B                           ; endx 155
 3C8  0133C                           LOAD s3, 3C                           ; endy 60
 3C9  204DE                           CALL 4DE[draw_line]                   ;
 3CA                                  ;; LINE 3 (BOTTOM) FOR I
 3CA  01091                           LOAD s0, 91                           ; stax 145
 3CB  0113C                           LOAD s1, 3C                           ; stay 60
 3CC  012A5                           LOAD s2, A5                           ; endx 165
 3CD  0133C                           LOAD s3, 3C                           ; endy 60
 3CE  204DE                           CALL 4DE[draw_line]                   ;
 3CF                                  ;; LINE 1 (TOP) FOR T
 3CF  010AF                           LOAD s0, AF                           ; stax 175
 3D0  0111E                           LOAD s1, 1E                           ; stay 30
 3D1  012C3                           LOAD s2, C3                           ; endx 195
 3D2  0131E                           LOAD s3, 1E                           ; endy 30
 3D3  204DE                           CALL 4DE[draw_line]                   ;
 3D4                                  ;; LINE 2 (MIDDLE) FOR T
 3D4  010B9                           LOAD s0, B9                           ; stax 185
 3D5  0111E                           LOAD s1, 1E                           ; stay 30
 3D6  012B9                           LOAD s2, B9                           ; endx 185
 3D7  0133C                           LOAD s3, 3C                           ; endy 60
 3D8  204DE                           CALL 4DE[draw_line]                   ;
 3D9                                  ;; LINE 1 (TOP) FOR S
 3D9  010CD                           LOAD s0, CD                           ; stax 205
 3DA  0111E                           LOAD s1, 1E                           ; stay 30
 3DB  012E1                           LOAD s2, E1                           ; endx 225
 3DC  0131E                           LOAD s3, 1E                           ; endy 30
 3DD  204DE                           CALL 4DE[draw_line]                   ;
 3DE                                  ;; LINE 2 (LEFT) FOR S
 3DE  010CD                           LOAD s0, CD                           ; stax 205
 3DF  0111E                           LOAD s1, 1E                           ; stay 30
 3E0  012CD                           LOAD s2, CD                           ; endx 205
 3E1  0132D                           LOAD s3, 2D                           ; endy 45
 3E2  204DE                           CALL 4DE[draw_line]                   ;
 3E3                                  ;; LINE 3 (MIDDLE) FOR S
 3E3  010CD                           LOAD s0, CD                           ; stax 205
 3E4  0112D                           LOAD s1, 2D                           ; stay 45
 3E5  012E1                           LOAD s2, E1                           ; endx 225
 3E6  0132D                           LOAD s3, 2D                           ; endy 45
 3E7  204DE                           CALL 4DE[draw_line]                   ;
 3E8                                  ;; LINE 4 (RIGHT) FOR S
 3E8  010E1                           LOAD s0, E1                           ; stax 225
 3E9  0112D                           LOAD s1, 2D                           ; stay 45
 3EA  012E1                           LOAD s2, E1                           ; endx 225
 3EB  0133C                           LOAD s3, 3C                           ; endy 60
 3EC  204DE                           CALL 4DE[draw_line]                   ;
 3ED                                  ;; LINE 5 (BOTTOM) FOR S
 3ED  010CD                           LOAD s0, CD                           ; stax 205
 3EE  0113C                           LOAD s1, 3C                           ; stay 60
 3EF  012E1                           LOAD s2, E1                           ; endx 225
 3F0  0133C                           LOAD s3, 3C                           ; endy 60
 3F1  204DE                           CALL 4DE[draw_line]                   ;
 3F2  25000                           RETURN                                ;
 3F3                                  ;;============================================================================
 3F3                                  ;; Draw Helicopter - Draw Helicopter Subroutine
 3F3                                  ;;============================================================================
 3F3                 draw_helicopter: 
 3F3  20438                           CALL 438[draw_helicopter_cockpit]     ; call the subroutine to draw the cockpit
 3F4  204AC                           CALL 4AC[draw_helicopter_blades]      ; call the subroutine to draw the blades
 3F5  20477                           CALL 477[draw_helicopter_tail]        ; call the subroutine to draw the tail
 3F6                                  ;CALL draw_helicopter_smoke         ; call the subroutine to draw the smoke
 3F6  25000                           RETURN                                ; go back from drawing helicopter
 3F7                                  ;;============================================================================
 3F7                                  ;; Draw Block - Draw Block Subroutine
 3F7                                  ;;============================================================================
 3F7                      draw_block: 
 3F7                                  ;;============================================================================
 3F7                                  ;; Draws Top Line of Block
 3F7                                  ;;============================================================================
 3F7  005E0                           LOAD s5, sE                           ; load 255 into s5 (horizontal center of block)
 3F8  016E1                           LOAD s6, E1                           ; load 245 into s6
 3F9  1C650                           COMPARE s6, s5                        ; checking if the block is done "peaking out" from the right (initial compare: 245 ? 255)
 3FA  3A400                           JUMP C, 400[right_edge]               ; jump to right_edge
 3FB  0160A                           LOAD s6, 0A                           ; load 10 into s6
 3FC  1C560                           COMPARE s5, s6                        ; comparing s5 and s6
 3FD  3A404                           JUMP C, 404[left_edge]                ; jump to left_edge
 3FE  32404                           JUMP Z, 404[left_edge]                ; jump to left_edge
 3FF  22408                           JUMP 408[in_middle]                   ; jump to in_middle
 400  2D500               right_edge: OUTPUT s5, 00[stax]                   ; set desired stax
 401  1950A                           SUB s5, 0A                            ;
 402  2D502                           OUTPUT s5, 02[endx]                   ; set desired stax
 403  2240B                           JUMP 40B[finished1]                   ; jump to draw_ys
 404  2D500                left_edge: OUTPUT s5, 00[stax]                   ; set desired stax
 405  01600                           LOAD s6, 00                           ; put 255 into s5
 406  2D602                           OUTPUT s6, 02[endx]                   ; set desired stax
 407  2240B                           JUMP 40B[finished1]                   ; jump to draw_ys
 408                       in_middle: 
 408  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 409  1950A                           SUB s5, 0A                            ; subtract the width of block to get the other x coordinate
 40A  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 40B  2DF01                finished1: OUTPUT sF, 01[stay]                   ; set desired stay
 40C  2DF03                           OUTPUT sF, 03[endy]                   ; set desired endy
 40D  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 40E                                  ;;============================================================================
 40E                                  ;; Draws Bottom Line of Block
 40E                                  ;;============================================================================
 40E  005F0                           LOAD s5, sF                           ; load sF into s5
 40F  1153C                           ADD s5, 3C                            ; add 40 to s5
 410  2D501                           OUTPUT s5, 01[stay]                   ; set desired stay
 411  2D503                           OUTPUT s5, 03[endy]                   ; set desired endy
 412  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 413                                  ;;============================================================================
 413                                  ;; Draws Right Vertical Line of Block
 413                                  ;;============================================================================
 413  2DE00                           OUTPUT sE, 00[stax]                   ; set desired stax
 414  2DE02                           OUTPUT sE, 02[endx]                   ; set desired endx
 415  2DF01                           OUTPUT sF, 01[stay]                   ; set desired stay
 416  005F0                           LOAD s5, sF                           ; load sF into s5
 417  1153C                           ADD s5, 3C                            ; add 60 to y coordinate
 418  2D503                           OUTPUT s5, 03[endy]                   ; set desired endy
 419  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 41A                                  ;;============================================================================
 41A                                  ;; Draws Left Vertical Line of Block
 41A                                  ;;============================================================================
 41A  005E0                           LOAD s5, sE                           ; load sE into s5
 41B  1950A                           SUB s5, 0A                            ; subtract 10 from s5
 41C  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 41D  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 41E  2DF01                           OUTPUT sF, 01[stay]                   ; set desired stay
 41F  005F0                           LOAD s5, sF                           ; load sF into s5
 420  1153C                           ADD s5, 3C                            ; add 60 to y coordinate
 421  2D503                           OUTPUT s5, 03[endy]                   ; set desired endy
 422  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 423  25000                           RETURN                                ; finished with draw_block subroutine
 424                                  ;;============================================================================
 424                                  ;; Random Block Location - Random Block Location Subroutine
 424                                  ;;============================================================================
 424           random_block_location: 
 424  1DE00                           COMPARE sE, 00                        ; is it time to create a new variable?
 425  3242A                           JUMP Z, 42A[new_random]               ; jump to new random creator
 426  1DEFF                           COMPARE sE, FF                        ; is it time to create a new variable?
 427  3242A                           JUMP Z, 42A[new_random]               ; jump to new random creator
 428  36429                           JUMP NZ, 429[skip_everything]         ; goes back
 429  25000          skip_everything: RETURN                                ; returns back (no new rand. number)
 42A  09507               new_random: INPUT s5, 07[prng]                    ; create to new random number
 42B  1D50F                           COMPARE s5, 0F                        ; check if it's in range
 42C  3E42E                           JUMP NC, 42E[check_other_bound_range] ; check lower bound of map
 42D  3A42A                           JUMP C, 42A[new_random]               ; get new variable
 42E         check_other_bound_range: 
 42E  1D5B4                           COMPARE s5, B4                        ; compare s5 to 180
 42F  3E42A                           JUMP NC, 42A[new_random]              ; get a new random number
 430  00F50                           LOAD sF, s5                           ; a new y coordinate generated
 431  25000                           RETURN                                ; get out of subroutine
 432                                  ;;============================================================================
 432                                  ;; Move Helicopter Up - Move Helicopter Up Subroutine
 432                                  ;;============================================================================
 432                    move_heli_up: 
 432  1DC15                           COMPARE sC, 15                        ; check if the helicopter is colliding with top wall
 433  36436                           JUMP NZ, 436[decrement]               ; if not colliding, then move helicopter appropriately
 434  3E436                           JUMP NC, 436[decrement]               ; necessary as well
 435  25000                           RETURN                                ; do not increment if colliding with top wall
 436                       decrement: 
 436  19C04                           SUB sC, 04                            ; move the helicopter up
 437  25000                           RETURN                                ; get out of subroutine
 438                                  ;;============================================================================
 438                                  ;; Draw Helicopter Cockpit - Draw Helicopter Cockpit Subroutine
 438                                  ;;============================================================================
 438         draw_helicopter_cockpit: 
 438                                  ;;============================================================================
 438                                  ;; Draws Cockpit of Helicopter (Line 1a)
 438                                  ;;============================================================================
 438                                  ;; STARTING POINT
 438  01564                           LOAD s5, 64                           ; load 100 into s5
 439  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 43A  006C0                           LOAD s6, sC                           ; load sC into s5
 43B  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 43C                                  ;; ENDING POINT
 43C  19501                           SUB s5, 01                            ; subtract 7 from s5
 43D  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 43E  19603                           SUB s6, 03                            ; go up by 5
 43F  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 440  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 441                                  ;;============================================================================
 441                                  ;; Draws Cockpit of Helicopter (Line 1b)
 441                                  ;;============================================================================
 441                                  ;; STARTING POINT
 441  01564                           LOAD s5, 64                           ; load 100 into s5
 442  19501                           SUB s5, 01                            ; subtract 7 from s5
 443  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 444  006C0                           LOAD s6, sC                           ; load sC into s5
 445  19603                           SUB s6, 03                            ; go up by 5
 446  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 447                                  ;; ENDING POINT
 447  19504                           SUB s5, 04                            ; subtract 7 from s5
 448  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 449  19602                           SUB s6, 02                            ; go up by 5
 44A  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 44B  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 44C                                  ;;============================================================================
 44C                                  ;; Draws Cockpit of Helicopter (Line 2a)
 44C                                  ;;============================================================================
 44C                                  ;; STARTING POINT
 44C  01564                           LOAD s5, 64                           ; load 100 into s5
 44D  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 44E  006C0                           LOAD s6, sC                           ; load sC into s5
 44F  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 450                                  ;; ENDING POINT
 450  19501                           SUB s5, 01                            ; subtract 1 from s5
 451  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 452  11603                           ADD s6, 03                            ; go down by 3
 453  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 454  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 455                                  ;;============================================================================
 455                                  ;; Draws Cockpit of Helicopter (Line 2b)
 455                                  ;;============================================================================
 455                                  ;; STARTING POINT
 455  01564                           LOAD s5, 64                           ; load 100 into s5
 456  19501                           SUB s5, 01                            ; subtract 1 from s5
 457  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 458  006C0                           LOAD s6, sC                           ; load sC into s5
 459  11603                           ADD s6, 03                            ; go down by 3
 45A  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 45B                                  ;; ENDING POINT
 45B  19504                           SUB s5, 04                            ; subtract 7 from s5
 45C  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 45D  11602                           ADD s6, 02                            ; go down by 5
 45E  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 45F  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 460                                  ;;============================================================================
 460                                  ;; Draws Cockpit of Helicopter (Line 3)
 460                                  ;;============================================================================
 460                                  ;; STARTING POINT
 460  01564                           LOAD s5, 64                           ; load 100 into s5
 461  19505                           SUB s5, 05                            ; load 7 into s5
 462  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 463  006C0                           LOAD s6, sC                           ; load sC into s5
 464  19605                           SUB s6, 05                            ; go up by 5 using subtraction
 465  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 466                                  ;; ENDING POINT
 466  19507                           SUB s5, 07                            ; subtract 5 from s5
 467  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 468  11605                           ADD s6, 05                            ; go down by 5
 469  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 46A  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 46B                                  ;;============================================================================
 46B                                  ;; Draws Cockpit of Helicopter (Line 4)
 46B                                  ;;============================================================================
 46B                                  ;; STARTING POINT
 46B  01564                           LOAD s5, 64                           ; load 100 into s5
 46C  19505                           SUB s5, 05                            ; load 7 into s5
 46D  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 46E  006C0                           LOAD s6, sC                           ; load sC into s5
 46F  11605                           ADD s6, 05                            ; go down by 5 using addition
 470  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 471                                  ;; ENDING POINT
 471  19507                           SUB s5, 07                            ; subtract 5 from s5
 472  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 473  19605                           SUB s6, 05                            ; go back up by 5
 474  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 475  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 476  25000                           RETURN                                ; go back from subroutine
 477                                  ;;============================================================================
 477                                  ;; Draw Helicopter Tail - Draw Helicopter Tail Subroutine
 477                                  ;;============================================================================
 477            draw_helicopter_tail: 
 477                                  ;;============================================================================
 477                                  ;; Draws Tail of Helicopter (Line 1)
 477                                  ;;============================================================================
 477                                  ;; STARTING POINT
 477  01564                           LOAD s5, 64                           ; load 100 into s5
 478  1950A                           SUB s5, 0A                            ; subtract 0xA from s5
 479  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 47A  006C0                           LOAD s6, sC                           ; load sC into s5
 47B  19602                           SUB s6, 02                            ; subtract 2 from s6
 47C  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 47D                                  ;; ENDING POINT
 47D  19507                           SUB s5, 07                            ; subtract 7 from s5
 47E  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 47F  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 480  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 481                                  ;;============================================================================
 481                                  ;; Draws Tail of Helicopter (Line 2)
 481                                  ;;============================================================================
 481                                  ;; STARTING POINT
 481  01564                           LOAD s5, 64                           ; load 100 into s5
 482  1950C                           SUB s5, 0C                            ; subtract 0xC from s5
 483  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 484  006C0                           LOAD s6, sC                           ; load sC into s5
 485  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 486                                  ;; ENDING POINT
 486  19508                           SUB s5, 08                            ; subtract 7 from s5
 487  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 488  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 489  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 48A                                  ;;============================================================================
 48A                                  ;; Draws Tail of Helicopter (Line 3)
 48A                                  ;;============================================================================
 48A                                  ;; STARTING POINT
 48A  01564                           LOAD s5, 64                           ; load 100 into s5
 48B  1950A                           SUB s5, 0A                            ; subtract 0x0A from s5
 48C  19508                           SUB s5, 08                            ; subtract 0x10 from s5
 48D  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 48E  006C0                           LOAD s6, sC                           ; load sC into s5
 48F  19602                           SUB s6, 02                            ; subtract 2 from s6
 490  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 491                                  ;; ENDING POINT
 491  19502                           SUB s5, 02                            ; subtract 2 from s5
 492  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 493  19602                           SUB s6, 02                            ; subtract 2 from s6
 494  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 495  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 496                                  ;;============================================================================
 496                                  ;; Draws Tail of Helicopter (Line 4)
 496                                  ;;============================================================================
 496                                  ;; STARTING POINT
 496  01564                           LOAD s5, 64                           ; load 100 into s5
 497  1950C                           SUB s5, 0C                            ; subtract 0x0C from s5
 498  19509                           SUB s5, 09                            ; subtract 0x09 from s5
 499  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 49A  006C0                           LOAD s6, sC                           ; load sC into s5
 49B  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 49C                                  ;; ENDING POINT
 49C                                  ;SUB s5, 01                          ; subtract 2 from s5
 49C  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 49D  11601                           ADD s6, 01                            ; add 1 to s6
 49E  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 49F  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 4A0                                  ;;============================================================================
 4A0                                  ;; Draws Tail of Helicopter (Line 5)
 4A0                                  ;;============================================================================
 4A0                                  ;; STARTING POINT
 4A0  01564                           LOAD s5, 64                           ; load 100 into s5
 4A1  1950A                           SUB s5, 0A                            ; subtract 0x0A from s5
 4A2  1950A                           SUB s5, 0A                            ; subtract 0x0A from s5
 4A3  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 4A4  006C0                           LOAD s6, sC                           ; load sC into s5
 4A5  19604                           SUB s6, 04                            ; subtract 4 from s6
 4A6  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 4A7                                  ;; ENDING POINT
 4A7  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 4A8  11605                           ADD s6, 05                            ; add 1 to s6
 4A9  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 4AA  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 4AB  25000                           RETURN                                ; go back from subroutine
 4AC                                  ;;============================================================================
 4AC                                  ;; Draw Helicopter Blades - Draw Helicopter Blades Subroutine
 4AC                                  ;;============================================================================
 4AC          draw_helicopter_blades: 
 4AC                                  ;;============================================================================
 4AC                                  ;; Draws Blades of Helicopter (Line 1)
 4AC                                  ;;============================================================================
 4AC                                  ;; STARTING POINT
 4AC  01564                           LOAD s5, 64                           ; load 100 into s5
 4AD  19505                           SUB s5, 05                            ; subtract 0xA from s5
 4AE  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 4AF  006C0                           LOAD s6, sC                           ; load sC into s5
 4B0  19605                           SUB s6, 05                            ; subtract 2 from s6
 4B1  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 4B2                                  ;; ENDING POINT
 4B2  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 4B3  19602                           SUB s6, 02                            ; subtract 2 from s6
 4B4  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 4B5  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 4B6                                  ;;============================================================================
 4B6                                  ;; Draws Blades of Helicopter (Line 2)
 4B6                                  ;;============================================================================
 4B6                                  ;; STARTING POINT
 4B6  01564                           LOAD s5, 64                           ; load 100 into s5
 4B7  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 4B8  006C0                           LOAD s6, sC                           ; load sC into s5
 4B9  19607                           SUB s6, 07                            ; subtract 2 from s6
 4BA  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 4BB                                  ;; ENDING POINT
 4BB  1950A                           SUB s5, 0A                            ; subtract 10 from s5
 4BC  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 4BD  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 4BE  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 4BF  25000                           RETURN                                ; go back from subroutine
 4C0                                  ;;============================================================================
 4C0                                  ;; Draw Helicopter Smoke - Draw Helicopter Smoke Subroutine
 4C0                                  ;;============================================================================
 4C0           draw_helicopter_smoke: 
 4C0                                  ;;============================================================================
 4C0                                  ;; Draws Smoke of Helicopter (Line 1)
 4C0                                  ;;============================================================================
 4C0                                  ;; Start Point
 4C0  01564                           LOAD s5, 64                           ; load 100 into s5
 4C1  19528                           SUB s5, 28                            ; position starting smoke right point of line 1
 4C2  2D500                           OUTPUT s5, 00[stax]                   ; output to starting x position of line 1
 4C3  006C0                           LOAD s6, sC                           ; load helicopter smoke vertical position for line 1
 4C4  2D601                           OUTPUT s6, 01[stay]                   ; output to starting y position of line 1
 4C5                                  ;;
 4C5                                  ;; End Point
 4C5  19504                           SUB s5, 04                            ; position starting smoke left point of line 1
 4C6  2D502                           OUTPUT s5, 02[endx]                   ; output to starting y position of line 1
 4C7  2D603                           OUTPUT s6, 03[endy]                   ; output to ending y position of line 1, matching helicopter
 4C8  204E8                           CALL 4E8[old_draw_line]               ;draws a line (careful: this subroutine overwrites s5)
 4C9                                  ;;
 4C9                                  ;;============================================================================
 4C9                                  ;; Draws Smoke of Helicopter (Line 2)
 4C9                                  ;;============================================================================
 4C9                                  ;; Start Point
 4C9  01564                           LOAD s5, 64                           ; load 100 into s5
 4CA  19534                           SUB s5, 34                            ; position starting smoke right point of line 2
 4CB  2D500                           OUTPUT s5, 00[stax]                   ; output to starting x position of line 2
 4CC  006C0                           LOAD s6, sC                           ; load starting smoke vertical position for line 2
 4CD  11604                           ADD s6, 04                            ; add 4 to s6 (shift down by 4)
 4CE  2D601                           OUTPUT s6, 01[stay]                   ; output to starting y position of line 2
 4CF                                  ;;
 4CF                                  ;; End Point
 4CF  19504                           SUB s5, 04                            ; subtract s5 by 4 for length of line
 4D0  2D502                           OUTPUT s5, 02[endx]                   ; output to endx
 4D1  2D603                           OUTPUT s6, 03[endy]                   ; outputs vertical locaton of smoke line 2
 4D2  204E8                           CALL 4E8[old_draw_line]               ;draws a line (careful: this subroutine overwrites s5)
 4D3                                  ;;
 4D3                                  ;;============================================================================
 4D3                                  ;; Draws Smoke of Helicopter (Line 3)
 4D3                                  ;;============================================================================
 4D3                                  ;; Start Point
 4D3  01564                           LOAD s5, 64                           ; load 100 into s5
 4D4  19540                           SUB s5, 40                            ; position starting smoke right point of line 3
 4D5  2D500                           OUTPUT s5, 00[stax]                   ; output to starting x position of line 3
 4D6  006C0                           LOAD s6, sC                           ; load starting smoke vertical position for line 3
 4D7  19604                           SUB s6, 04                            ; add 4 to s6 (shift down by 4)
 4D8  2D601                           OUTPUT s6, 01[stay]                   ; output to starting y position of line 3
 4D9                                  ;;
 4D9                                  ;; End Point
 4D9  19504                           SUB s5, 04                            ; subtract s5 by 4 for length of line
 4DA  2D502                           OUTPUT s5, 02[endx]                   ; output to endx
 4DB  2D603                           OUTPUT s6, 03[endy]                   ; output same y position of line 3
 4DC  204E8                           CALL 4E8[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 4DD                                  ;;
 4DD  25000                           RETURN                                ; go back to subroutine
 4DE                                  ;;============================================================================
 4DE                                  ;; Draw Line - Draw Line Subroutine
 4DE                                  ;;============================================================================
 4DE  2D000                draw_line: OUTPUT s0, 00[stax]                   ; write stax
 4DF  2D101                           OUTPUT s1, 01[stay]                   ; write stay
 4E0  2D202                           OUTPUT s2, 02[endx]                   ; write endx
 4E1  2D303                           OUTPUT s3, 03[endy]                   ; write endy
 4E2  01501                           LOAD s5, 01[busy_go]                  ; load go command
 4E3  2D504                           OUTPUT s5, 04[busy]                   ; send go command
 4E4  09504                     wait: INPUT s5, 04[busy]                    ; read busy status
 4E5  1D501                           COMPARE s5, 01[busy_go]               ; check busy status
 4E6  324E4                           JUMP Z, 4E4[wait]                     ; if busy, wait more
 4E7  25000                           RETURN                                ; leave line drawing subroutine
 4E8                                  ;;============================================================================
 4E8                                  ;; Old Draw Line - Old Draw Line Subroutine (WILL DELETE LATER)
 4E8                                  ;;============================================================================
 4E8                   old_draw_line: 
 4E8  01501                           LOAD s5, 01[busy_go]                  ; load go command
 4E9  2D504                           OUTPUT s5, 04[busy]                   ; send go command
 4EA  09504                    wait0: INPUT s5, 04[busy]                    ; read busy status
 4EB  1D501                           COMPARE s5, 01[busy_go]               ; check busy status
 4EC  324EA                           JUMP Z, 4EA[wait0]                    ; if busy, wait more
 4ED  25000                           RETURN                                ; leave line drawing subroutine
 4EE                                  ;;============================================================================
 4EE                                  ;; Check Collisions - Check Collisions Subroutine
 4EE                                  ;;============================================================================
 4EE                 check_collision: 
 4EE                                  ;;============================================================================
 4EE                                  ;; Check Collisions with Map (top wall)
 4EE                                  ;;============================================================================
 4EE  01560                           LOAD s5, 60                           ; position of heli/wall collision
 4EF  0180F                           LOAD s8, 0F                           ; top wall vertical coordinate (15)
 4F0  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 4F1  1960A                           SUB s6, 0A                            ; the helicopter's blades 10 pixels higher
 4F2  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 4F3  1C860                           COMPARE s8, s6                        ; check if the two intersect
 4F4  32558                           JUMP Z, 558[collision_occurred]       ; jump to collision occurred
 4F5  3E558                           JUMP NC, 558[collision_occurred]      ; jump to collision occurred (necessary)
 4F6                                  ;;============================================================================
 4F6                                  ;; Check Collisions with Map (bottom wall)
 4F6                                  ;;============================================================================
 4F6  018F0                           LOAD s8, F0                           ; bottom wall vertical coordinate (240)
 4F7  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 4F8  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 4F9  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 4FA  1C860                           COMPARE s8, s6                        ; check if the two intersect
 4FB  32558                           JUMP Z, 558[collision_occurred]       ; jump to collision occurred
 4FC  018F1                           LOAD s8, F1                           ; bottom wall vertical coordinate (241)
 4FD  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 4FE  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 4FF  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 500  1C860                           COMPARE s8, s6                        ; check if the two intersect
 501  32558                           JUMP Z, 558[collision_occurred]       ; jump to collision occurred
 502  018F2                           LOAD s8, F2                           ; bottom wall vertical coordinate (242)
 503  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 504  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 505  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 506  1C860                           COMPARE s8, s6                        ; check if the two intersect
 507  32558                           JUMP Z, 558[collision_occurred]       ; jump to collision occurred
 508  018F3                           LOAD s8, F3                           ; bottom wall vertical coordinate (243)
 509  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 50A  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 50B  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 50C  1C860                           COMPARE s8, s6                        ; check if the two intersect
 50D  32558                           JUMP Z, 558[collision_occurred]       ; jump to collision occurred
 50E  018F4                           LOAD s8, F4                           ; bottom wall vertical coordinate (244)
 50F  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 510  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 511  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 512  1C860                           COMPARE s8, s6                        ; check if the two intersect
 513  32558                           JUMP Z, 558[collision_occurred]       ; jump to collision occurred
 514  018F5                           LOAD s8, F5                           ; bottom wall vertical coordinate (245)
 515  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 516  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 517  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 518  1C860                           COMPARE s8, s6                        ; check if the two intersect
 519  32558                           JUMP Z, 558[collision_occurred]       ; jump to collision occurred
 51A  018F6                           LOAD s8, F6                           ; bottom wall vertical coordinate (246)
 51B  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 51C  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 51D  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 51E  1C860                           COMPARE s8, s6                        ; check if the two intersect
 51F  32558                           JUMP Z, 558[collision_occurred]       ; jump to collision occurred
 520                                  ;;============================================================================
 520                                  ;; Check Collisions with Block
 520                                  ;;============================================================================
 520  005E0                           LOAD s5, sE                           ; get current horizontal position of block
 521  1950A                           SUB s5, 0A                            ; actual block is 10 pixels back
 522  1D564                           COMPARE s5, 64                        ; check if s5 coincides with heli (horizontal check)
 523  32539                           JUMP Z, 539[check_vertical]           ; jump to check vertical positioning
 524  1D563                           COMPARE s5, 63                        ; check if s5 coincides with heli (horizontal check)
 525  32539                           JUMP Z, 539[check_vertical]           ; jump to check vertical positioning
 526  1D562                           COMPARE s5, 62                        ; check if s5 coincides with heli (horizontal check)
 527  32539                           JUMP Z, 539[check_vertical]           ; jump to check vertical positioning
 528  1D561                           COMPARE s5, 61                        ; check if s5 coincides with heli (horizontal check)
 529  32539                           JUMP Z, 539[check_vertical]           ; jump to check vertical positioning
 52A  1D560                           COMPARE s5, 60                        ; check if s5 coincides with heli (horizontal check)
 52B  32539                           JUMP Z, 539[check_vertical]           ; jump to check vertical positioning
 52C  1D559                           COMPARE s5, 59                        ; check if s5 coincides with heli (horizontal check)
 52D  32539                           JUMP Z, 539[check_vertical]           ; jump to check vertical positioning
 52E  1D558                           COMPARE s5, 58                        ; check if s5 coincides with heli (horizontal check)
 52F  32539                           JUMP Z, 539[check_vertical]           ; jump to check vertical positioning
 530  1D557                           COMPARE s5, 57                        ; check if s5 coincides with heli (horizontal check)
 531  32539                           JUMP Z, 539[check_vertical]           ; jump to check vertical positioning
 532  1D556                           COMPARE s5, 56                        ; check if s5 coincides with heli (horizontal check)
 533  32539                           JUMP Z, 539[check_vertical]           ; jump to check vertical positioning
 534  1D555                           COMPARE s5, 55                        ; check if s5 coincides with heli (horizontal check)
 535  32539                           JUMP Z, 539[check_vertical]           ; jump to check vertical positioning
 536  1D554                           COMPARE s5, 54                        ; check if s5 coincides with heli (horizontal check)
 537  32539                           JUMP Z, 539[check_vertical]           ; jump to check vertical positioning
 538  36543                           JUMP NZ, 543[no_collision]            ; jump to no_collision routine
 539                  check_vertical: 
 539  006F0                           LOAD s6, sF                           ; get current vertical position of block
 53A  007C0                           LOAD s7, sC                           ; load helicopter front position
 53B  1C760                     loop: COMPARE s7, s6                        ; compare s7 and s6
 53C  32558                           JUMP Z, 558[collision_occurred]       ; jump to collision_occured
 53D  11601                           ADD s6, 01                            ; add one to s6
 53E  008F0                           LOAD s8, sF                           ; load original value for reference only
 53F  1183C                           ADD s8, 3C                            ; add 60 to s8
 540  1C680                           COMPARE s6, s8                        ; compare s6 to bottom of block (s8)
 541  32543                           JUMP Z, 543[no_collision]             ; jump to no_collision routine
 542  3653B                           JUMP NZ, 53B[loop]                    ; keep looping
 543  19E01             no_collision: SUB sE, 01                            ; move block forwards
 544  1DA01                           COMPARE sA, 01                        ; check if score is above 500
 545  3C549                           CALL NC, 549[stage2_check]            ; call second stage check
 546  11C02                           ADD sC, 02                            ; increment sC
 547  20561                           CALL 561[distance]                    ; used for keeping the score (increments distance)
 548  25000                           RETURN                                ; leave, since no collisions occurred
 549                    stage2_check: 
 549  19E01                           SUB sE, 01                            ; subtract 1 from sE
 54A  1DA05                           COMPARE sA, 05                        ; check if score is above 1000
 54B  3C54E                           CALL NC, 54E[stage3_check]            ; call speed2
 54C  25000                           RETURN                                ; leave routine
 54D                          speed2: 
 54D                                  ;SUB sE, 01                          ; decrement by 2
 54D  25000                           RETURN                                ; go back
 54E                    stage3_check: 
 54E  19E01                           SUB sE, 01                            ; decrement by 3
 54F  1DA08                           COMPARE sA, 08                        ; check if score is above 1000
 550  3C552                           CALL NC, 552[stage4_check]            ; call speed2
 551  25000                           RETURN                                ; go back
 552                    stage4_check: 
 552  19E01                           SUB sE, 01                            ; decrement by 3
 553  1DA10                           COMPARE sA, 10                        ; check if score is above 1000
 554  3C556                           CALL NC, 556[stage5_check]            ; call speed2
 555  25000                           RETURN 
 556                    stage5_check: 
 556  19E01                           SUB sE, 01                            ; decrement by 3
 557  25000                           RETURN 
 558              collision_occurred: 
 558  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 559  2D701                           OUTPUT s7, 01[stay]                   ; set desired stay
 55A  09807                           INPUT s8, 07[prng]                    ; load random endx
 55B  2D802                           OUTPUT s8, 02[endx]                   ; set random endx
 55C  09807                           INPUT s8, 07[prng]                    ; load random endy
 55D  2D803                           OUTPUT s8, 03[endy]                   ; set random endy
 55E  204DE                           CALL 4DE[draw_line]                   ; draw random line
 55F  01902                           LOAD s9, 02[GAMEOVER_STATE]           ; should go to gameover state instead
 560  25000                           RETURN                                ; return from routine without any increments
 561                                  ;;============================================================================
 561                                  ;; Distance - Distance Subroutine
 561                                  ;;============================================================================
 561  2DB0A                 distance: OUTPUT sB, 0A[qssd_lo]                ; put distance value to qssd
 562  1DBFF                           COMPARE sB, FF                        ; check if max (FF) was reached
 563  32566                           JUMP Z, 566[distance2]                ; jump to distance2
 564  11B01                           ADD sB, 01[one]                       ; increment distance value
 565  25000                           RETURN                                ; finished with distance subroutine
 566  11A01                distance2: ADD sA, 01[one]                       ; add one to the next degree
 567  01B00                           LOAD sB, 00[zero]                     ; reset sB
 568  2DB0A                           OUTPUT sB, 0A[qssd_lo]                ; put distance value to qssd
 569  2DA0B                           OUTPUT sA, 0B[qssd_hi]                ; put distance value to qssd
 56A  25000                           RETURN                                ; finished with distance subroutine
 56B                                  ;;============================================================================
 56B                                  ;; Interrupt - Vector.
 56B                                  ;;============================================================================
 7FF                                  ADDRESS 7FF                           ; must be located here
 7FF  22014               isr_vector: JUMP 014[isr]                         ; always jump to isr
 800                                  ;;============================================================================
 800                                  ;;
 800                                  ;;============================================================================



List of PSM files that have been assembled

C:\Users\hpm\Desktop\fpga_video_game\latest_fpga_video_game\software\software.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   19'd         
 timestamp_minutes 13'd         
 timestamp_seconds 13'd         
 datestamp_year    15'd         
 datestamp_month   12'd         
 datestamp_day     02'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 stax              00           software.psm
 stay              01           software.psm
 endx              02           software.psm
 endy              03           software.psm
 busy              04           software.psm
 beam              05           software.psm
 mode              06           software.psm
 prng              07           software.psm
 leds_lo           08           software.psm
 leds_hi           09           software.psm
 qssd_lo           0A           software.psm
 qssd_hi           0B           software.psm
 qssd_dp           0C           software.psm
 switches_lo       0D           software.psm
 switches_hi       0E           software.psm
 buttons           0F           software.psm
 red               10           software.psm
 green             11           software.psm
 blue              11           software.psm
 zero              00           software.psm
 one               01           software.psm
 busy_go           01           software.psm
 beam_hi           0F           software.psm
 beam_md           07           software.psm
 beam_lo           03           software.psm
 mode_hld          00           software.psm
 mode_clr          01           software.psm
 mode_lin          02           software.psm
 mode_exp          03           software.psm
 buttons_ct        10           software.psm
 buttons_up        08           software.psm
 buttons_dn        04           software.psm
 buttons_lf        02           software.psm
 buttons_rt        01           software.psm
 start_menu_1      00           software.psm
 start_menu_2      3C           software.psm
 start_menu_3      78           software.psm
 START_STATE       00           software.psm
 PLAY_STATE        01           software.psm
 GAMEOVER_STATE    02           software.psm
 CREDITS_STATE     03           software.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.51"        
 datestamp$        "02 Dec 2015"  
 timestamp$        "19:13:13"     



List of line labels

   Label                     Addr  Source PSM File

 * boot                      000   software.psm
   main                      013   software.psm
   isr                       014   software.psm
   start                     01D   software.psm
   enter_play_state          028   software.psm
   enter_start_menu          02D   software.psm
   stay_in_start_state       032   software.psm
   credits                   034   software.psm
   enter_credit_state        03E   software.psm
   stay_in_credit_state      042   software.psm
   gameover                  043   software.psm
   enter_play_state2         056   software.psm
   stay_in_gameover_state    060   software.psm
   play                      061   software.psm
   map                       06B   software.psm
   start_screen              076   software.psm
   draw_gameover             2B1   software.psm
   draw_credits              357   software.psm
   draw_helicopter           3F3   software.psm
   draw_block                3F7   software.psm
   right_edge                400   software.psm
   left_edge                 404   software.psm
   in_middle                 408   software.psm
   finished1                 40B   software.psm
   random_block_location     424   software.psm
   skip_everything           429   software.psm
   new_random                42A   software.psm
   check_other_bound_range   42E   software.psm
   move_heli_up              432   software.psm
   decrement                 436   software.psm
   draw_helicopter_cockpit   438   software.psm
   draw_helicopter_tail      477   software.psm
   draw_helicopter_blades    4AC   software.psm
 * draw_helicopter_smoke     4C0   software.psm
   draw_line                 4DE   software.psm
   wait                      4E4   software.psm
   old_draw_line             4E8   software.psm
   wait0                     4EA   software.psm
   check_collision           4EE   software.psm
   check_vertical            539   software.psm
   loop                      53B   software.psm
   no_collision              543   software.psm
   stage2_check              549   software.psm
 * speed2                    54D   software.psm
   stage3_check              54E   software.psm
   stage4_check              552   software.psm
   stage5_check              556   software.psm
   collision_occurred        558   software.psm
   distance                  561   software.psm
   distance2                 566   software.psm
 * isr_vector                7FF   software.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD            746
 STAR              -

 AND               -
 OR                -
 XOR               -

 ADD              25
 ADDCY             -
 SUB              53
 SUBCY             -

 TEST              -
 TESTCY            -
 COMPARE          46
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK          10

 INPUT            14
 OUTPUT          196
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           -
 ENABLE            1
 RETURNI           1

 JUMP             52
 JUMP@             -
 CALL            211
 CALL@             -
 RETURN           33
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
