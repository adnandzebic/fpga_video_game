KCPSM6 Assembler log file for program 'C:\Users\hpm\Desktop\fpga_video_game\latest_fpga_video_game\software\software.psm'.
Generated by KCPSM6 version v2.51
Ken Chapman - Xilinx Ltd - 29th May 2013

Assembly datestamp: 02 Dec 2015
Assembly timestamp: 19:26:22

Contents
  Assembly listing
  List of PSM files
  List of CONSTANTs
  List of TABLEs
  List of STRINGs
  List of line labels
  Instruction usage statistics


Last occupied address: 7FF hex
Nominal program memory size: 2K (2048)   address(10:0)
Actual memory size: 4096
  (Default memory size)
Occupied memory locations: 1185
Memory locations available: 2911


Assembly listing

 Addr Code                            Instruction

 000                                  ;;============================================================================
 000                                  ;; File: software.psm
 000                                  ;; This is the PicoBlaze program for EE178 Lab #8.
 000                                  ;;============================================================================
 000                                  ;;============================================================================
 000                                  ;; Port address declarations.
 000                                  ;;============================================================================
 000                                  CONSTANT stax, 00                     ; port for 8-bit start-x
 000                                  CONSTANT stay, 01                     ; port for 8-bit start-y
 000                                  CONSTANT endx, 02                     ; port for 8-bit end-x
 000                                  CONSTANT endy, 03                     ; port for 8-bit end-y
 000                                  CONSTANT busy, 04                     ; port for 8-bit busy
 000                                  CONSTANT beam, 05                     ; port for 8-bit beam
 000                                  CONSTANT mode, 06                     ; port for 8-bit mode
 000                                  CONSTANT prng, 07                     ; port for 8-bit prng
 000                                  CONSTANT leds_lo, 08                  ; port for 8-bit led data out
 000                                  CONSTANT leds_hi, 09                  ; port for 8-bit led data out
 000                                  CONSTANT qssd_lo, 0A                  ; port for 8-bit qssd data out
 000                                  CONSTANT qssd_hi, 0B                  ; port for 8-bit qssd data out
 000                                  CONSTANT qssd_dp, 0C                  ; port for 8-bit qssd data out
 000                                  CONSTANT switches_lo, 0D              ; port for 8-bit switch input
 000                                  CONSTANT switches_hi, 0E              ; port for 8-bit switch input
 000                                  CONSTANT buttons, 0F                  ; port for 8-bit button input
 000                                  CONSTANT red, 10                      ; port for 8-bit red value
 000                                  CONSTANT green, 11                    ; port for 8-bit green value
 000                                  CONSTANT blue, 11                     ; port for 8-bit green value
 000                                  CONSTANT zero, 00                     ; zero
 000                                  CONSTANT one, 01                      ; one
 000                                  CONSTANT busy_go, 01                  ; go command and busy status
 000                                  CONSTANT beam_hi, 0F                  ; beam high intensity
 000                                  CONSTANT beam_md, 07                  ; beam med intensity
 000                                  CONSTANT beam_lo, 03                  ; beam low intensity
 000                                  CONSTANT mode_hld, 00                 ; mode hold framebuffer
 000                                  CONSTANT mode_clr, 01                 ; mode clear framebuffer
 000                                  CONSTANT mode_lin, 02                 ; mode linear decay
 000                                  CONSTANT mode_exp, 03                 ; mode exponential decay
 000                                  CONSTANT buttons_ct, 10               ; center
 000                                  CONSTANT buttons_up, 08               ; up
 000                                  CONSTANT buttons_dn, 04               ; down
 000                                  CONSTANT buttons_lf, 02               ; left
 000                                  CONSTANT buttons_rt, 01               ; right
 000                                  CONSTANT start_menu_1, 00             ;
 000                                  CONSTANT start_menu_2, 3C             ;
 000                                  CONSTANT start_menu_3, 78             ;
 000                                  ;;============================================================================
 000                                  ;; Macro State declarations
 000                                  ;;============================================================================
 000                                  CONSTANT START_STATE, 00              ; start screen state
 000                                  CONSTANT PLAY_STATE, 01               ; play state
 000                                  CONSTANT GAMEOVER_STATE, 02           ; game over screen state
 000                                  CONSTANT CREDITS_STATE, 03            ; credits screen state (not used for now)
 000                                  ;;============================================================================
 000                                  ;; Boot.
 000                                  ;;============================================================================
 000  01000                     boot: LOAD s0, 00[zero]                     ; initialize
 001  01100                           LOAD s1, 00[zero]                     ; initialize
 002  01200                           LOAD s2, 00[zero]                     ; initialize
 003  01300                           LOAD s3, 00[zero]                     ; initialize
 004  01400                           LOAD s4, 00[zero]                     ; initialize
 005  01900                           LOAD s9, 00[START_STATE]              ; initial state is to enter start screen
 006  01A00                           LOAD sA, 00                           ; initial distance (score)
 007  01B00                           LOAD sB, 00                           ; initial distance (score)
 008  01C80                           LOAD sC, 80                           ; starting helicopter position
 009  01D05                           LOAD sD, 05                           ; initialize (needed later)
 00A  01EFF                           LOAD sE, FF                           ; load 255 into sE (horizontal coordinate of block)
 00B  01F62                           LOAD sF, 62                           ; load 108 into sF (vertical coordinate of block)
 00C  01503                           LOAD s5, 03[mode_exp]                 ; load desired mode
 00D  2D506                           OUTPUT s5, 06[mode]                   ; set desired mode
 00E  0150F                           LOAD s5, 0F[beam_hi]                  ; load desired beam
 00F  2D505                           OUTPUT s5, 05[beam]                   ; set desired beam
 010  015FF                           LOAD s5, FF                           ; load FF into s5 (red value)
 011  2D510                           OUTPUT s5, 10[red]                    ; set desired red
 012  28001                           ENABLE INTERRUPT                      ; enable interrupts
 013                                  ;;============================================================================
 013                                  ;; Main.
 013                                  ;;============================================================================
 013                            main: 
 013  22013                           JUMP 013[main]                        ; go back and repeat
 014                                  ;;============================================================================
 014                                  ;; Interrupt - Service Routine.
 014                                  ;;============================================================================
 014                             isr: 
 014  1D900                           COMPARE s9, 00[START_STATE]           ; check if in the start state
 015  3001D                           CALL Z, 01D[start]                    ; call the start screen state
 016  1D901                           COMPARE s9, 01[PLAY_STATE]            ; check if in the play state
 017  30063                           CALL Z, 063[play]                     ; call play subroutine
 018  1D902                           COMPARE s9, 02[GAMEOVER_STATE]        ; check if in the gameover state
 019  30048                           CALL Z, 048[gameover]                 ; call the gameover subroutine
 01A  1D903                           COMPARE s9, 03[CREDITS_STATE]         ; check if in the credits state
 01B  30039                           CALL Z, 039[credits]                  ; call credits subroutine
 01C  29001                           RETURNI ENABLE                        ; done with isr
 01D                                  ;;============================================================================
 01D                                  ;; Start - Start Subroutine
 01D                                  ;;============================================================================
 01D  37000                    start: REGBANK A                             ;
 01E  0950F                           INPUT s5, 0F[buttons]                 ; get center button values
 01F  20078                           CALL 078[start_screen]                ; draw the map using map subroutine
 020  0950F                           INPUT s5, 0F[buttons]                 ; get button values
 021  1D510                           COMPARE s5, 10[buttons_ct]            ; check if center button is pressed
 022  3202D                           JUMP Z, 02D[enter_play_state]         ; jump to enter_play_state
 023  37001                           REGBANK B                             ;
 024  11001                           ADD s0, 01[one]                       ; counter for determining jump between credit/start
 025  1D0F0                           COMPARE s0, F0                        ; check if 120 seconds
 026  32043                           JUMP Z, 043[enter_credit_state]       ; if 2 seconds or 120 frames, jump to credit
 027  36037                           JUMP NZ, 037[stay_in_start_state]     ; if not 2 seconds or 120 frames, stay in start
 028  37001                           REGBANK B                             ;
 029  11001                           ADD s0, 01[one]                       ; counter for determining jump between credit/start
 02A  1D078                           COMPARE s0, 78                        ; check if 120 seconds
 02B  32043                           JUMP Z, 043[enter_credit_state]       ; if 2 seconds or 120 frames, jump to credit
 02C  36037                           JUMP NZ, 037[stay_in_start_state]     ; if not 2 seconds or 120 frames, stay in start
 02D                enter_play_state: 
 02D  37001                           REGBANK B                             ;
 02E  01000                           LOAD s0, 00[zero]                     ;
 02F  37000                           REGBANK A                             ;
 030  01901                           LOAD s9, 01[PLAY_STATE]               ; load play_state and enter play mode
 031  25000                           RETURN                                ; return from start subroutine
 032                enter_start_menu: 
 032  37001                           REGBANK B                             ;
 033  01000                           LOAD s0, 00[zero]                     ; clear counter regbank
 034  37000                           REGBANK A                             ;
 035  01900                           LOAD s9, 00[START_STATE]              ; load start state
 036  25000                           RETURN                                ; return to isr
 037             stay_in_start_state: 
 037  37000                           REGBANK A                             ; declare REGBANK A
 038  25000                           RETURN                                ; return from start subroutine
 039                                  ;;============================================================================
 039                                  ;; Credits - Credit Subroutine
 039                                  ;;============================================================================
 039                         credits: 
 039  37000                           REGBANK A                             ;
 03A  2028C                           CALL 28C[draw_credits]                ; draw the credits screen
 03B  0950F                           INPUT s5, 0F[buttons]                 ; get button values
 03C  1D510                           COMPARE s5, 10[buttons_ct]            ; check if center button is pressed
 03D  3202D                           JUMP Z, 02D[enter_play_state]         ; jump to enter_play_state
 03E  37001                           REGBANK B                             ; Utilize REGBANK B for counter
 03F  11001                           ADD s0, 01[one]                       ; counter for determining when to jump between credit/start
 040  1D0F0                           COMPARE s0, F0                        ; 2 seconds / 120 frames -> jump back to start
 041  32032                           JUMP Z, 032[enter_start_menu]         ; if 120 frames, jump back to start
 042  36047                           JUMP NZ, 047[stay_in_credit_state]    ;
 043              enter_credit_state: 
 043  01000                           LOAD s0, 00[zero]                     ; if entering credit state, clear REGBANK B s0
 044  37000                           REGBANK A                             ;
 045  01903                           LOAD s9, 03[CREDITS_STATE]            ; set to credits state
 046  25000                           RETURN                                ;
 047            stay_in_credit_state: 
 047  25000                           RETURN                                ;
 048                                  ;;============================================================================
 048                                  ;; Game Over - Game Over Subroutine
 048                                  ;;============================================================================
 048                        gameover: 
 048  2006D                           CALL 06D[map]                         ; draw the map using map subroutine
 049  20328                           CALL 328[draw_helicopter]             ; draw the helicopter
 04A  2032C                           CALL 32C[draw_block]                  ; draw the obstacle (block)
 04B  201E6                           CALL 1E6[draw_gameover]               ; draw gameover message
 04C  01564                           LOAD s5, 64                           ; collision point (horizontal)
 04D  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 04E  2DC01                           OUTPUT sC, 01[stay]                   ; set desired stay
 04F  09807                           INPUT s8, 07[prng]                    ; load random endx
 050  2D802                           OUTPUT s8, 02[endx]                   ; set random endx
 051  09807                           INPUT s8, 07[prng]                    ; load random endy
 052  2D803                           OUTPUT s8, 03[endy]                   ; set random endy
 053  2041D                           CALL 41D[old_draw_line]               ; draw random line
 054                                  ;    INPUT s5, buttons                   ; get button values
 054                                  ;COMPARE s5, buttons_dn              ; check if down button is pressed
 054                                  ;JUMP Z, enter_start_menu      ; jump to enter_start_state
 054  0950F                           INPUT s5, 0F[buttons]                 ; get button values
 055  1D508                           COMPARE s5, 08[buttons_up]            ; check if up button is pressed
 056  32058                           JUMP Z, 058[enter_play_state2]        ; jump to enter_play_state2
 057  36062                           JUMP NZ, 062[stay_in_gameover_state]  ; remain in current state with a jump to stay_in_gameover_state
 058               enter_play_state2: 
 058  01901                           LOAD s9, 01[PLAY_STATE]               ; load play_state and enter play mode
 059                                  ;; RESET EVERYTHING BEFORE RETURNING
 059  01A00                           LOAD sA, 00                           ; initial distance (score)
 05A  01B00                           LOAD sB, 00                           ; initial distance (score)
 05B  2DB0A                           OUTPUT sB, 0A[qssd_lo]                ; reset qssd_lo
 05C  2DA0B                           OUTPUT sA, 0B[qssd_hi]                ; reset qssd_hi
 05D  01C80                           LOAD sC, 80                           ; starting helicopter position
 05E  01D05                           LOAD sD, 05                           ; initialize (needed later)
 05F  01EFF                           LOAD sE, FF                           ; load 255 into sE (horizontal coordinate of block)
 060  01F62                           LOAD sF, 62                           ; load 108 into sF (vertical coordinate of block)
 061  25000                           RETURN                                ; return from start subroutine
 062          stay_in_gameover_state: 
 062  25000                           RETURN                                ; return from start subroutine
 063                                  ;;============================================================================
 063                                  ;; Play - Play Subroutine
 063                                  ;;============================================================================
 063  0950F                     play: INPUT s5, 0F[buttons]                 ; get center button values
 064  2006D                           CALL 06D[map]                         ; draw the map using map subroutine
 065  0950F                           INPUT s5, 0F[buttons]                 ; get button values
 066  1D510                           COMPARE s5, 10[buttons_ct]            ; check if center button is pressed
 067  30367                           CALL Z, 367[move_heli_up]             ; call subroutine that moves the helicopter up
 068  20328                           CALL 328[draw_helicopter]             ; draw the helicopter
 069  20359                           CALL 359[random_block_location]       ; determines a random place for the block (y direction only)
 06A  2032C                           CALL 32C[draw_block]                  ; draw the block using draw_block subroutine
 06B  20423                           CALL 423[check_collision]             ; check if any collisions happen
 06C  25000                           RETURN                                ; finished with play subroutine
 06D                                  ;;============================================================================
 06D                                  ;; Map - Draw Map Subroutine
 06D                                  ;;============================================================================
 06D                             map: 
 06D                                  ;;============================================================================
 06D                                  ;; Draws Top Line of Map (Line 1)
 06D                                  ;;============================================================================
 06D  01000                           LOAD s0, 00                           ; load 00 into s0
 06E  0110F                           LOAD s1, 0F                           ; load 0F into s1
 06F  012FF                           LOAD s2, FF                           ; load FF into s2
 070  0130F                           LOAD s3, 0F                           ; load 0F into s3
 071  20413                           CALL 413[draw_line]                   ; draws the line
 072                                  ;;============================================================================
 072                                  ;; Draws Bottom Line of Map (Line 2)
 072                                  ;;============================================================================
 072  01000                           LOAD s0, 00                           ; load 00 into s0
 073  011F0                           LOAD s1, F0                           ; load 0F into s1
 074  012FF                           LOAD s2, FF                           ; load FF into s2
 075  013F0                           LOAD s3, F0                           ; load F0 into s3
 076  20413                           CALL 413[draw_line]                   ; draws the line
 077  25000                           RETURN                                ; go back from drawing map
 078                                  ;;============================================================================
 078                                  ;; Start Screen - Draw Start Screen Subroutine
 078                                  ;;============================================================================
 078                    start_screen: 
 078                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 078                                  ;; Code for PRESS START [START MENU] ;;
 078                                  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 078                                  ;;;;;;;;;;;;;;;
 078                                  ;;BEGIN PRESS;;
 078                                  ;;;;;;;;;;;;;;;
 078                                  ;; LINE 1 (LEFT) FOR P
 078  01041                           LOAD s0, 41                           ; stax 65
 079  011C8                           LOAD s1, C8                           ; stay 200
 07A  01241                           LOAD s2, 41                           ; endx 65
 07B  013D2                           LOAD s3, D2                           ; endy 210
 07C  20413                           CALL 413[draw_line]                   ;
 07D                                  ;; LINE 2 (TOP) FOR P
 07D  01041                           LOAD s0, 41                           ; stax 65
 07E  011C8                           LOAD s1, C8                           ; stay 200
 07F  01246                           LOAD s2, 46                           ; endx 70
 080  013C8                           LOAD s3, C8                           ; endy 200
 081  20413                           CALL 413[draw_line]                   ;
 082                                  ;; LINE 3 (RIGHT) FOR P
 082  01046                           LOAD s0, 46                           ; stax 70
 083  011C8                           LOAD s1, C8                           ; stay 200
 084  01246                           LOAD s2, 46                           ; endx 70
 085  013CD                           LOAD s3, CD                           ; endy 205
 086  20413                           CALL 413[draw_line]                   ;
 087                                  ;; LINE 4 (MIDDLE) FOR P
 087  01041                           LOAD s0, 41                           ; stax 65
 088  011CD                           LOAD s1, CD                           ; stay 205
 089  01246                           LOAD s2, 46                           ; endx 70
 08A  013CD                           LOAD s3, CD                           ; endy 205
 08B  20413                           CALL 413[draw_line]                   ;
 08C                                  ;; LINE 1 (LEFT) FOR R
 08C  0104B                           LOAD s0, 4B                           ; stax 75
 08D  011C8                           LOAD s1, C8                           ; stay 200
 08E  0124B                           LOAD s2, 4B                           ; endx 75
 08F  013D2                           LOAD s3, D2                           ; endy 210
 090  20413                           CALL 413[draw_line]                   ;
 091                                  ;; LINE 2 (TOP) FOR R
 091  0104B                           LOAD s0, 4B                           ; stax 75
 092  011C8                           LOAD s1, C8                           ; stay 200
 093  01250                           LOAD s2, 50                           ; endx 80
 094  013C8                           LOAD s3, C8                           ; endy 200
 095  20413                           CALL 413[draw_line]                   ;
 096                                  ;; LINE 3 (RIGHT) FOR R
 096  01050                           LOAD s0, 50                           ; stax 80
 097  011C8                           LOAD s1, C8                           ; stay 200
 098  01250                           LOAD s2, 50                           ; endx 80
 099  013CD                           LOAD s3, CD                           ; endy 205
 09A  20413                           CALL 413[draw_line]                   ;
 09B                                  ;; LINE 4 (MIDDLE) FOR R
 09B  0104B                           LOAD s0, 4B                           ; stax 75
 09C  011CD                           LOAD s1, CD                           ; stay 205
 09D  01250                           LOAD s2, 50                           ; endx 80
 09E  013CD                           LOAD s3, CD                           ; endy 205
 09F  20413                           CALL 413[draw_line]                   ;
 0A0                                  ;; LINE 5 (ANGLED) FOR R
 0A0  0104B                           LOAD s0, 4B                           ; stax 75
 0A1  011CD                           LOAD s1, CD                           ; stay 205
 0A2  01250                           LOAD s2, 50                           ; endx 80
 0A3  013D2                           LOAD s3, D2                           ; endy 210
 0A4  20413                           CALL 413[draw_line]                   ;
 0A5                                  ;; LINE 6 (ANGLED2) FOR R
 0A5  0104B                           LOAD s0, 4B                           ; stax 75
 0A6  011CE                           LOAD s1, CE                           ; stay 204
 0A7  0124F                           LOAD s2, 4F                           ; endx 79
 0A8  013D2                           LOAD s3, D2                           ; endy 210
 0A9  20413                           CALL 413[draw_line]                   ;
 0AA                                  ;; LINE 1 (LEFT) FOR E
 0AA  01055                           LOAD s0, 55                           ; stax 85
 0AB  011C8                           LOAD s1, C8                           ; stay 200
 0AC  01255                           LOAD s2, 55                           ; endx 85
 0AD  013D2                           LOAD s3, D2                           ; endy 210
 0AE  20413                           CALL 413[draw_line]                   ;
 0AF                                  ;; LINE 2 (TOP) FOR E
 0AF  01055                           LOAD s0, 55                           ; stax 85
 0B0  011C8                           LOAD s1, C8                           ; stay 200
 0B1  0125A                           LOAD s2, 5A                           ; endx 90
 0B2  013C8                           LOAD s3, C8                           ; endy 200
 0B3  20413                           CALL 413[draw_line]                   ;
 0B4                                  ;; LINE 3 (MIDDLE) FOR E
 0B4  01055                           LOAD s0, 55                           ; stax 85
 0B5  011CD                           LOAD s1, CD                           ; stay 205
 0B6  0125A                           LOAD s2, 5A                           ; endx 90
 0B7  013CD                           LOAD s3, CD                           ; endy 205
 0B8  20413                           CALL 413[draw_line]                   ;
 0B9                                  ;; LINE 4 (BOTTOM) FOR E
 0B9  01055                           LOAD s0, 55                           ; stax 85
 0BA  011D2                           LOAD s1, D2                           ; stay 210
 0BB  0125A                           LOAD s2, 5A                           ; endx 90
 0BC  013D2                           LOAD s3, D2                           ; endy 210
 0BD  20413                           CALL 413[draw_line]                   ;
 0BE                                  ;; LINE 1 (TOP) FOR S1
 0BE  0105F                           LOAD s0, 5F                           ; stax 95
 0BF  011C8                           LOAD s1, C8                           ; stay 200
 0C0  01264                           LOAD s2, 64                           ; endx 100
 0C1  013C8                           LOAD s3, C8                           ; endy 200
 0C2  20413                           CALL 413[draw_line]                   ;
 0C3                                  ;; LINE 2 (TOPLEFT) FOR S1
 0C3  0105F                           LOAD s0, 5F                           ; stax 95
 0C4  011C8                           LOAD s1, C8                           ; stay 200
 0C5  0125F                           LOAD s2, 5F                           ; endx 95
 0C6  013CD                           LOAD s3, CD                           ; endy 205
 0C7  20413                           CALL 413[draw_line]                   ;
 0C8                                  ;; LINE 3 (MIDDLE) FOR S1
 0C8  0105F                           LOAD s0, 5F                           ; stax 95
 0C9  011CD                           LOAD s1, CD                           ; stay 205
 0CA  01264                           LOAD s2, 64                           ; endx 100
 0CB  013CD                           LOAD s3, CD                           ; endy 205
 0CC  20413                           CALL 413[draw_line]                   ;
 0CD                                  ;; LINE 4 (BOTTOMRIGHT) FOR S1
 0CD  01064                           LOAD s0, 64                           ; stax 100
 0CE  011CD                           LOAD s1, CD                           ; stay 205
 0CF  01264                           LOAD s2, 64                           ; endx 100
 0D0  013D2                           LOAD s3, D2                           ; endy 210
 0D1  20413                           CALL 413[draw_line]                   ;
 0D2                                  ;; LINE 5 (BOTTOM) FOR S1
 0D2  0105F                           LOAD s0, 5F                           ; stax 95
 0D3  011D2                           LOAD s1, D2                           ; stay 210
 0D4  01264                           LOAD s2, 64                           ; endx 100
 0D5  013D2                           LOAD s3, D2                           ; endy 210
 0D6  20413                           CALL 413[draw_line]                   ;
 0D7                                  ;; LINE 1 (TOP) FOR S2
 0D7  01069                           LOAD s0, 69                           ; stax 105
 0D8  011C8                           LOAD s1, C8                           ; stay 200
 0D9  0126E                           LOAD s2, 6E                           ; endx 110
 0DA  013C8                           LOAD s3, C8                           ; endy 200
 0DB  20413                           CALL 413[draw_line]                   ;
 0DC                                  ;; LINE 2 (TOPLEFT) FOR S2
 0DC  01069                           LOAD s0, 69                           ; stax 105
 0DD  011C8                           LOAD s1, C8                           ; stay 200
 0DE  01269                           LOAD s2, 69                           ; endx 105
 0DF  013CD                           LOAD s3, CD                           ; endy 205
 0E0  20413                           CALL 413[draw_line]                   ;
 0E1                                  ;; LINE 3 (MIDDLE) FOR S2
 0E1  01069                           LOAD s0, 69                           ; stax 105
 0E2  011CD                           LOAD s1, CD                           ; stay 205
 0E3  0126E                           LOAD s2, 6E                           ; endx 110
 0E4  013CD                           LOAD s3, CD                           ; endy 205
 0E5  20413                           CALL 413[draw_line]                   ;
 0E6                                  ;; LINE 4 (BOTTOMRIGHT) FOR S2
 0E6  0106E                           LOAD s0, 6E                           ; stax 110
 0E7  011CD                           LOAD s1, CD                           ; stay 205
 0E8  0126E                           LOAD s2, 6E                           ; endx 110
 0E9  013D2                           LOAD s3, D2                           ; endy 210
 0EA  20413                           CALL 413[draw_line]                   ;
 0EB                                  ;; LINE 5 (BOTTOM) FOR S2
 0EB  01069                           LOAD s0, 69                           ; stax 105
 0EC  011D2                           LOAD s1, D2                           ; stay 210
 0ED  0126E                           LOAD s2, 6E                           ; endx 110
 0EE  013D2                           LOAD s3, D2                           ; endy 210
 0EF  20413                           CALL 413[draw_line]                   ;
 0F0                                  ;;;;;;;;;;;;;;;
 0F0                                  ;;BEGIN START;;
 0F0                                  ;;;;;;;;;;;;;;;
 0F0                                  ;; LINE 1 (TOP) FOR S
 0F0  01082                           LOAD s0, 82                           ; stax 130
 0F1  011C8                           LOAD s1, C8                           ; stay 200
 0F2  01288                           LOAD s2, 88                           ; endx 135
 0F3  013C8                           LOAD s3, C8                           ; endy 200
 0F4  20413                           CALL 413[draw_line]                   ;
 0F5                                  ;; LINE 2 (TOPLEFT) FOR S
 0F5  01082                           LOAD s0, 82                           ; stax 130
 0F6  011C8                           LOAD s1, C8                           ; stay 200
 0F7  01282                           LOAD s2, 82                           ; endx 130
 0F8  013CD                           LOAD s3, CD                           ; endy 205
 0F9  20413                           CALL 413[draw_line]                   ;
 0FA                                  ;; LINE 3 (MIDDLE) FOR S
 0FA  01082                           LOAD s0, 82                           ; stax 130
 0FB  011CD                           LOAD s1, CD                           ; stay 205
 0FC  01287                           LOAD s2, 87                           ; endx 135
 0FD  013CD                           LOAD s3, CD                           ; endy 205
 0FE  20413                           CALL 413[draw_line]                   ;
 0FF                                  ;; LINE 4 (BOTTOMRIGHT) FOR S
 0FF  01087                           LOAD s0, 87                           ; stax 135
 100  011CD                           LOAD s1, CD                           ; stay 205
 101  01287                           LOAD s2, 87                           ; endx 135
 102  013D2                           LOAD s3, D2                           ; endy 210
 103  20413                           CALL 413[draw_line]                   ;
 104                                  ;; LINE 5 (BOTTOM) FOR S
 104  01082                           LOAD s0, 82                           ; stax 130
 105  011D2                           LOAD s1, D2                           ; stay 210
 106  01287                           LOAD s2, 87                           ; endx 135
 107  013D2                           LOAD s3, D2                           ; endy 210
 108  20413                           CALL 413[draw_line]                   ;
 109                                  ;; LINE 1 (TOP) FOR T1
 109  0108C                           LOAD s0, 8C                           ; stax 140
 10A  011C8                           LOAD s1, C8                           ; stay 200
 10B  01293                           LOAD s2, 93                           ; endx 147
 10C  013C8                           LOAD s3, C8                           ; endy 200
 10D  20413                           CALL 413[draw_line]                   ;
 10E                                  ;; LINE 2 (MIDDLE) FOR T1
 10E  0108F                           LOAD s0, 8F                           ; stax 143
 10F  011C8                           LOAD s1, C8                           ; stay 200
 110  0128F                           LOAD s2, 8F                           ; endx 143
 111  013D2                           LOAD s3, D2                           ; endy 210
 112  20413                           CALL 413[draw_line]                   ;
 113                                  ;; LINE 1 (LEFT) FOR A
 113  01096                           LOAD s0, 96                           ; stax 150
 114  011C8                           LOAD s1, C8                           ; stay 200
 115  01296                           LOAD s2, 96                           ; endx 150
 116  013D2                           LOAD s3, D2                           ; endy 210
 117  20413                           CALL 413[draw_line]                   ;
 118                                  ;; LINE 2 (TOP) FOR A
 118  01096                           LOAD s0, 96                           ; stax 150
 119  011C8                           LOAD s1, C8                           ; stay 200
 11A  0129B                           LOAD s2, 9B                           ; endx 155
 11B  013C8                           LOAD s3, C8                           ; endy 200
 11C  20413                           CALL 413[draw_line]                   ;
 11D                                  ;; LINE 3 (MIDDLE) FOR A
 11D  01096                           LOAD s0, 96                           ; stax 150
 11E  011CD                           LOAD s1, CD                           ; stay 205
 11F  0129B                           LOAD s2, 9B                           ; endx 155
 120  013CD                           LOAD s3, CD                           ; endy 205
 121  20413                           CALL 413[draw_line]                   ;
 122                                  ;; LINE 4 (RIGHT) FOR A
 122  0109B                           LOAD s0, 9B                           ; stax 155
 123  011C8                           LOAD s1, C8                           ; stay 200
 124  0129B                           LOAD s2, 9B                           ; endx 155
 125  013D2                           LOAD s3, D2                           ; endy 210
 126  20413                           CALL 413[draw_line]                   ;
 127                                  ;; LINE 1 (LEFT) FOR R
 127  010A0                           LOAD s0, A0                           ; stax 160
 128  011C8                           LOAD s1, C8                           ; stay 200
 129  012A0                           LOAD s2, A0                           ; endx 160
 12A  013D2                           LOAD s3, D2                           ; endy 210
 12B  20413                           CALL 413[draw_line]                   ;
 12C                                  ;; LINE 2 (TOP) FOR R
 12C  010A0                           LOAD s0, A0                           ; stax 160
 12D  011C8                           LOAD s1, C8                           ; stay 200
 12E  012A5                           LOAD s2, A5                           ; endx 165
 12F  013C8                           LOAD s3, C8                           ; endy 200
 130  20413                           CALL 413[draw_line]                   ;
 131                                  ;; LINE 3 (RIGHT) FOR R
 131  010A5                           LOAD s0, A5                           ; stax 165
 132  011C8                           LOAD s1, C8                           ; stay 200
 133  012A5                           LOAD s2, A5                           ; endx 165
 134  013CD                           LOAD s3, CD                           ; endy 205
 135  20413                           CALL 413[draw_line]                   ;
 136                                  ;; LINE 4 (MIDDLE) FOR R
 136  010A0                           LOAD s0, A0                           ; stax 160
 137  011CD                           LOAD s1, CD                           ; stay 205
 138  012A5                           LOAD s2, A5                           ; endx 165
 139  013CD                           LOAD s3, CD                           ; endy 205
 13A  20413                           CALL 413[draw_line]                   ;
 13B                                  ;; LINE 5 (ANGLED) FOR R
 13B  010A0                           LOAD s0, A0                           ; stax 160
 13C  011CD                           LOAD s1, CD                           ; stay 205
 13D  012A5                           LOAD s2, A5                           ; endx 165
 13E  013D2                           LOAD s3, D2                           ; endy 210
 13F  20413                           CALL 413[draw_line]                   ;
 140                                  ;; LINE 6 (ANGLED2) FOR R
 140  010A0                           LOAD s0, A0                           ; stax 160
 141  011CE                           LOAD s1, CE                           ; stay 206
 142  012A4                           LOAD s2, A4                           ; endx 164
 143  013D2                           LOAD s3, D2                           ; endy 210
 144  20413                           CALL 413[draw_line]                   ;
 145                                  ;; LINE 1 (TOP) FOR T2
 145  010AA                           LOAD s0, AA                           ; stax 170
 146  011C8                           LOAD s1, C8                           ; stay 200
 147  012B1                           LOAD s2, B1                           ; endx 177
 148  013C8                           LOAD s3, C8                           ; endy 200
 149  20413                           CALL 413[draw_line]                   ;
 14A                                  ;; LINE 2 (MIDDLE) FOR T2
 14A  010AD                           LOAD s0, AD                           ; stax 173
 14B  011C8                           LOAD s1, C8                           ; stay 200
 14C  012AD                           LOAD s2, AD                           ; endx 173
 14D  013D2                           LOAD s3, D2                           ; endy 210
 14E  20413                           CALL 413[draw_line]                   ;
 14F                                  ;;============================================================================
 14F                                  ;; Draws Decoration (Line 1a)
 14F                                  ;;============================================================================
 14F  01000                           LOAD s0, 00                           ; load 00 into s0
 150  0110A                           LOAD s1, 0A                           ; load 0A into s1
 151  012FF                           LOAD s2, FF                           ; load FF into s2
 152  0130A                           LOAD s3, 0A                           ; load 0A into s3
 153  20413                           CALL 413[draw_line]                   ; draws the line
 154                                  ;;===========================================================================
 154                                  ;; Draws Decoration (Line 2a)
 154                                  ;;============================================================================
 154  01000                           LOAD s0, 00                           ; load 00 into s0
 155  0110C                           LOAD s1, 0C                           ; load 0C into s1
 156  012FF                           LOAD s2, FF                           ; load FF into s2
 157  0130C                           LOAD s3, 0C                           ; load 0C into s3
 158  20413                           CALL 413[draw_line]                   ; draws the line
 159                                  ;;===========================================================================
 159                                  ;; Draws Decoration (Line 3a)
 159                                  ;;============================================================================
 159  01000                           LOAD s0, 00                           ; load 00 into s0
 15A  0110E                           LOAD s1, 0E                           ; load 0E into s1
 15B  012FF                           LOAD s2, FF                           ; load FF into s2
 15C  0130E                           LOAD s3, 0E                           ; load 0E into s3
 15D  20413                           CALL 413[draw_line]                   ; draws the line
 15E                                  ;;============================================================================
 15E                                  ;; Draws Decoration (Line 1b)
 15E                                  ;;============================================================================
 15E  01000                           LOAD s0, 00                           ; load 00 into s0
 15F  01188                           LOAD s1, 88                           ; load 88 into s1
 160  012FF                           LOAD s2, FF                           ; load FF into s2
 161  01388                           LOAD s3, 88                           ; load 88 into s3
 162  20413                           CALL 413[draw_line]                   ; draws the line
 163                                  ;;===========================================================================
 163                                  ;; Draws Decoration (Line 2b)
 163                                  ;;============================================================================
 163  01000                           LOAD s0, 00                           ; load 00 into s0
 164  0118A                           LOAD s1, 8A                           ; load 8A into s1
 165  012FF                           LOAD s2, FF                           ; load FF into s2
 166  0138A                           LOAD s3, 8A                           ; load 8A into s3
 167  20413                           CALL 413[draw_line]                   ; draws the line
 168                                  ;;===========================================================================
 168                                  ;; Draws Decoration (Line 3b)
 168                                  ;;============================================================================
 168  01000                           LOAD s0, 00                           ; load 00 into s0
 169  0118C                           LOAD s1, 8C                           ; load 8A into s1
 16A  012FF                           LOAD s2, FF                           ; load FF into s2
 16B  0138C                           LOAD s3, 8C                           ; load 8C into s3
 16C  20413                           CALL 413[draw_line]                   ; draws the line
 16D                                  ;;============================================================================
 16D                                  ;; NEW LINE STARTS HERE (HELICOPTER)
 16D                                  ;;============================================================================
 16D                                  ;;============================================================================
 16D                                  ;; Draws the letter H (Line 1)
 16D                                  ;;============================================================================
 16D  01000                           LOAD s0, 00                           ; 10
 16E  01130                           LOAD s1, 30                           ; 30
 16F  01200                           LOAD s2, 00                           ; 10
 170  0133C                           LOAD s3, 3C                           ; 60
 171  20413                           CALL 413[draw_line]                   ; draws the line
 172                                  ;;============================================================================
 172                                  ;; Draws the letter H (Line 2)
 172                                  ;;============================================================================
 172  01000                           LOAD s0, 00                           ; 35
 173  01130                           LOAD s1, 30                           ; 30
 174  01200                           LOAD s2, 00                           ; 35
 175  0133C                           LOAD s3, 3C                           ; 60
 176  20413                           CALL 413[draw_line]                   ; draws the line
 177                                  ;;============================================================================
 177                                  ;; Draws the letter H (Line 3)
 177                                  ;;============================================================================
 177  01000                           LOAD s0, 00                           ; 15
 178  0112D                           LOAD s1, 2D                           ; 30
 179  01200                           LOAD s2, 00                           ; 35
 17A  0132D                           LOAD s3, 2D                           ; 60
 17B  20413                           CALL 413[draw_line]                   ; draws the line
 17C                                  ;;============================================================================
 17C                                  ;; Draws the letter E (Line 1)
 17C                                  ;;============================================================================
 17C  01000                           LOAD s0, 00                           ; 40
 17D  0111E                           LOAD s1, 1E                           ; 30
 17E  01200                           LOAD s2, 00                           ; 40
 17F  0132D                           LOAD s3, 2D                           ; 60
 180  20413                           CALL 413[draw_line]                   ; draws the line
 181                                  ;;============================================================================
 181                                  ;; Draws the letter E (Line 2)
 181                                  ;;============================================================================
 181  01000                           LOAD s0, 00                           ; 40
 182  0111E                           LOAD s1, 1E                           ; 30
 183  01200                           LOAD s2, 00                           ; 60
 184  0131E                           LOAD s3, 1E                           ; 30
 185  20413                           CALL 413[draw_line]                   ; draws the line
 186                                  ;;============================================================================
 186                                  ;; Draws the letter E (Line 3)
 186                                  ;;============================================================================
 186  01000                           LOAD s0, 00                           ; 40
 187  0111E                           LOAD s1, 1E                           ; 45
 188  01200                           LOAD s2, 00                           ; 60
 189  0131E                           LOAD s3, 1E                           ; 45
 18A  20413                           CALL 413[draw_line]                   ; draws the line
 18B                                  ;;============================================================================
 18B                                  ;; Draws the letter E (Line 4)
 18B                                  ;;============================================================================
 18B  01000                           LOAD s0, 00                           ; 40
 18C  0111E                           LOAD s1, 1E                           ; 60
 18D  01200                           LOAD s2, 00                           ; 60
 18E  0131E                           LOAD s3, 1E                           ; 60
 18F  20413                           CALL 413[draw_line]                   ; draws the line
 190                                  ;;============================================================================
 190                                  ;; NEW LINE STARTS HERE (GAME)
 190                                  ;;============================================================================
 190                                  ;;============================================================================
 190                                  ;; Draws the letter G (Line 1)
 190                                  ;;============================================================================
 190  01046                           LOAD s0, 46                           ; load 70 into s0
 191  0115A                           LOAD s1, 5A                           ; load 90 into s1
 192  0125A                           LOAD s2, 5A                           ; load 90 into s2
 193  0135A                           LOAD s3, 5A                           ; load 90 to s3
 194  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 195                                  ;;============================================================================
 195                                  ;; Draws the letter G (Line 2)
 195                                  ;;============================================================================
 195  01046                           LOAD s0, 46                           ; load 70 into s0
 196  0115A                           LOAD s1, 5A                           ; load 90 into s1
 197  01246                           LOAD s2, 46                           ; load 90 into s2
 198  01378                           LOAD s3, 78                           ; load 90 to s3
 199  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 19A                                  ;;============================================================================
 19A                                  ;; Draws the letter G (Line 3)
 19A                                  ;;============================================================================
 19A  01046                           LOAD s0, 46                           ; load 70 into s0
 19B  01178                           LOAD s1, 78                           ; load 90 into s1
 19C  0125A                           LOAD s2, 5A                           ; load 90 into s2
 19D  01378                           LOAD s3, 78                           ; load 90 to s3
 19E  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 19F                                  ;;============================================================================
 19F                                  ;; Draws the letter G (Line 4)
 19F                                  ;;============================================================================
 19F  0105A                           LOAD s0, 5A                           ; load 70 into s0
 1A0  01169                           LOAD s1, 69                           ; load 90 into s1
 1A1  0125A                           LOAD s2, 5A                           ; load 90 into s2
 1A2  01378                           LOAD s3, 78                           ; load 90 to s3
 1A3  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 1A4                                  ;;============================================================================
 1A4                                  ;; Draws the letter G (Line 5)
 1A4                                  ;;============================================================================
 1A4  0105A                           LOAD s0, 5A                           ; load 70 into s0
 1A5  01169                           LOAD s1, 69                           ; load 90 into s1
 1A6  01250                           LOAD s2, 50                           ; load 90 into s2
 1A7  01369                           LOAD s3, 69                           ; load 90 to s3
 1A8  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 1A9                                  ;;============================================================================
 1A9                                  ;; Draws the letter A (Line 1)
 1A9                                  ;;============================================================================
 1A9  01064                           LOAD s0, 64                           ; 100
 1AA  0115A                           LOAD s1, 5A                           ; 90
 1AB  01278                           LOAD s2, 78                           ; 120
 1AC  0135A                           LOAD s3, 5A                           ; 90
 1AD  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 1AE                                  ;;============================================================================
 1AE                                  ;; Draws the letter A (Line 2)
 1AE                                  ;;============================================================================
 1AE  01064                           LOAD s0, 64                           ; 100
 1AF  01169                           LOAD s1, 69                           ; 105
 1B0  01278                           LOAD s2, 78                           ; 120
 1B1  01369                           LOAD s3, 69                           ; 105
 1B2  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 1B3                                  ;;============================================================================
 1B3                                  ;; Draws the letter A (Line 3)
 1B3                                  ;;============================================================================
 1B3  01064                           LOAD s0, 64                           ; 100
 1B4  0115A                           LOAD s1, 5A                           ; 90
 1B5  01264                           LOAD s2, 64                           ; 100
 1B6  01378                           LOAD s3, 78                           ; 120
 1B7  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 1B8                                  ;;============================================================================
 1B8                                  ;; Draws the letter A (Line 4)
 1B8                                  ;;============================================================================
 1B8  01078                           LOAD s0, 78                           ; 120
 1B9  0115A                           LOAD s1, 5A                           ; 90
 1BA  01278                           LOAD s2, 78                           ; 120
 1BB  01378                           LOAD s3, 78                           ; 120
 1BC  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 1BD                                  ;;============================================================================
 1BD                                  ;; Draws the letter M (Line 1)
 1BD                                  ;;============================================================================
 1BD  01082                           LOAD s0, 82                           ; 130
 1BE  0115A                           LOAD s1, 5A                           ; 90
 1BF  01282                           LOAD s2, 82                           ; 130
 1C0  01378                           LOAD s3, 78                           ; 120
 1C1  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 1C2                                  ;;============================================================================
 1C2                                  ;; Draws the letter M (Line 2)
 1C2                                  ;;============================================================================
 1C2  01096                           LOAD s0, 96                           ; 150
 1C3  0115A                           LOAD s1, 5A                           ; 90
 1C4  01296                           LOAD s2, 96                           ; 150
 1C5  01378                           LOAD s3, 78                           ; 120
 1C6  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 1C7                                  ;;============================================================================
 1C7                                  ;; Draws the letter M (Line 3)
 1C7                                  ;;============================================================================
 1C7  01096                           LOAD s0, 96                           ; 150
 1C8  0115A                           LOAD s1, 5A                           ; 90
 1C9  0128C                           LOAD s2, 8C                           ; 140
 1CA  01369                           LOAD s3, 69                           ; 105
 1CB  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 1CC                                  ;;============================================================================
 1CC                                  ;; Draws the letter M (Line 4)
 1CC                                  ;;============================================================================
 1CC  01082                           LOAD s0, 82                           ; 130
 1CD  0115A                           LOAD s1, 5A                           ; 90
 1CE  0128C                           LOAD s2, 8C                           ; 140
 1CF  01369                           LOAD s3, 69                           ; 105
 1D0  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 1D1                                  ;;============================================================================
 1D1                                  ;; Draws the letter E (Line 1)
 1D1                                  ;;============================================================================
 1D1  010A0                           LOAD s0, A0                           ; 160
 1D2  0115A                           LOAD s1, 5A                           ; 90
 1D3  012A0                           LOAD s2, A0                           ; 160
 1D4  01378                           LOAD s3, 78                           ; 120
 1D5  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 1D6                                  ;;============================================================================
 1D6                                  ;; Draws the letter E (Line 2)
 1D6                                  ;;============================================================================
 1D6  010A0                           LOAD s0, A0                           ; 160
 1D7  0115A                           LOAD s1, 5A                           ; 90
 1D8  012B4                           LOAD s2, B4                           ; 180
 1D9  0135A                           LOAD s3, 5A                           ; 90
 1DA  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 1DB                                  ;;============================================================================
 1DB                                  ;; Draws the letter E (Line 3)
 1DB                                  ;;============================================================================
 1DB  010A0                           LOAD s0, A0                           ; 160
 1DC  01169                           LOAD s1, 69                           ; 105
 1DD  012B4                           LOAD s2, B4                           ; 180
 1DE  01369                           LOAD s3, 69                           ; 105
 1DF  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 1E0                                  ;;============================================================================
 1E0                                  ;; Draws the letter E (Line 4)
 1E0                                  ;;============================================================================
 1E0  010A0                           LOAD s0, A0                           ; 160
 1E1  01178                           LOAD s1, 78                           ; 120
 1E2  012B4                           LOAD s2, B4                           ; 180
 1E3  01378                           LOAD s3, 78                           ; 120
 1E4  20413                           CALL 413[draw_line]                   ; call the draw_line subroutine
 1E5  25000                           RETURN                                ; leave start_screen subroutine
 1E6                                  ;;============================================================================
 1E6                                  ;; Game Over - Draw Game Over Screen Subroutine
 1E6                                  ;;============================================================================
 1E6                   draw_gameover: 
 1E6                                  ;;;;;;;;;;;;;;;;;;;;;;;;
 1E6                                  ;; Code for Game Over ;;
 1E6                                  ;;;;;;;;;;;;;;;;;;;;;;;;
 1E6                                  ;;;;;;;;;;;;;;;
 1E6                                  ;;BEGIN GAME;;
 1E6                                  ;;;;;;;;;;;;;;;
 1E6                                  ;; LINE 1 (TOP) FOR G
 1E6  0100A                           LOAD s0, 0A                           ; stax 10
 1E7  0111E                           LOAD s1, 1E                           ; stay 30
 1E8  0121E                           LOAD s2, 1E                           ; endx 30
 1E9  0131E                           LOAD s3, 1E                           ; endy 30
 1EA  20413                           CALL 413[draw_line]                   ;
 1EB                                  ;; LINE 2 (LEFT) FOR G
 1EB  0100A                           LOAD s0, 0A                           ; stax 10
 1EC  0111E                           LOAD s1, 1E                           ; stay 30
 1ED  0120A                           LOAD s2, 0A                           ; endx 10
 1EE  0133C                           LOAD s3, 3C                           ; endy 60
 1EF  20413                           CALL 413[draw_line]                   ;
 1F0                                  ;; LINE 3 (BOTTOM) FOR G
 1F0  0100A                           LOAD s0, 0A                           ; stax 10
 1F1  0113C                           LOAD s1, 3C                           ; stay 60
 1F2  0121E                           LOAD s2, 1E                           ; endx 30
 1F3  0133C                           LOAD s3, 3C                           ; endy 60
 1F4  20413                           CALL 413[draw_line]                   ;
 1F5                                  ;; LINE 4 (RIGHT) FOR G
 1F5  0101E                           LOAD s0, 1E                           ; stax 30
 1F6  01132                           LOAD s1, 32                           ; stay 50
 1F7  0121E                           LOAD s2, 1E                           ; endx 30
 1F8  0133C                           LOAD s3, 3C                           ; endy 60
 1F9  20413                           CALL 413[draw_line]                   ;
 1FA                                  ;; LINE 5 (INNER MIDDLE) FOR G
 1FA  01014                           LOAD s0, 14                           ; stax 20
 1FB  01132                           LOAD s1, 32                           ; stay 50
 1FC  0121E                           LOAD s2, 1E                           ; endx 30
 1FD  01332                           LOAD s3, 32                           ; endy 50
 1FE  20413                           CALL 413[draw_line]                   ;
 1FF                                  ;; LINE 1 (LEFT) FOR A
 1FF  01028                           LOAD s0, 28                           ; stax 40
 200  0111E                           LOAD s1, 1E                           ; stay 30
 201  01228                           LOAD s2, 28                           ; endx 40
 202  0133C                           LOAD s3, 3C                           ; endy 60
 203  20413                           CALL 413[draw_line]                   ;
 204                                  ;; LINE 2 (TOP) FOR A
 204  01028                           LOAD s0, 28                           ; stax 40
 205  0111E                           LOAD s1, 1E                           ; stay 30
 206  0123C                           LOAD s2, 3C                           ; endx 60
 207  0131E                           LOAD s3, 1E                           ; endy 30
 208  20413                           CALL 413[draw_line]                   ;
 209                                  ;; LINE 3 (MIDDLE) FOR A
 209  01028                           LOAD s0, 28                           ; stax 40
 20A  0112D                           LOAD s1, 2D                           ; stay 45
 20B  0123C                           LOAD s2, 3C                           ; endx 60
 20C  0132D                           LOAD s3, 2D                           ; endy 45
 20D  20413                           CALL 413[draw_line]                   ;
 20E                                  ;; LINE 4 (RIGHT) FOR A
 20E  0103C                           LOAD s0, 3C                           ; stax 60
 20F  0111E                           LOAD s1, 1E                           ; stay 30
 210  0123C                           LOAD s2, 3C                           ; endx 60
 211  0133C                           LOAD s3, 3C                           ; endy 60
 212  20413                           CALL 413[draw_line]                   ;
 213                                  ;; LINE 1 (LEFT) FOR M
 213  01046                           LOAD s0, 46                           ; stax 70
 214  0111E                           LOAD s1, 1E                           ; stay 30
 215  01246                           LOAD s2, 46                           ; endx 70
 216  0133C                           LOAD s3, 3C                           ; endy 60
 217  20413                           CALL 413[draw_line]                   ;
 218                                  ;; LINE 2 (LEFT ANGLED) FOR M
 218  01046                           LOAD s0, 46                           ; stax 70
 219  0111E                           LOAD s1, 1E                           ; stay 30
 21A  01250                           LOAD s2, 50                           ; endx 80
 21B  01332                           LOAD s3, 32                           ; endy 50
 21C  20413                           CALL 413[draw_line]                   ;
 21D                                  ;; LINE 3 (RIGHT ANGLED) FOR M
 21D  0105A                           LOAD s0, 5A                           ; stax 90
 21E  0111E                           LOAD s1, 1E                           ; stay 30
 21F  01250                           LOAD s2, 50                           ; endx 80
 220  01332                           LOAD s3, 32                           ; endy 50
 221  20413                           CALL 413[draw_line]                   ;
 222                                  ;; LINE 4 (RIGHT) FOR M
 222  0105A                           LOAD s0, 5A                           ; stax 90
 223  0111E                           LOAD s1, 1E                           ; stay 30
 224  0125A                           LOAD s2, 5A                           ; endx 90
 225  0133C                           LOAD s3, 3C                           ; endy 60
 226  20413                           CALL 413[draw_line]                   ;
 227                                  ;; LINE 1 (LEFT) FOR E1
 227  01064                           LOAD s0, 64                           ; stax 100
 228  0111E                           LOAD s1, 1E                           ; stay 30
 229  01264                           LOAD s2, 64                           ; endx 100
 22A  0133C                           LOAD s3, 3C                           ; endy 60
 22B  20413                           CALL 413[draw_line]                   ;
 22C                                  ;; LINE 2 (TOP) FOR E1
 22C  01064                           LOAD s0, 64                           ; stax 100
 22D  0111E                           LOAD s1, 1E                           ; stay 30
 22E  01278                           LOAD s2, 78                           ; endx 120
 22F  0131E                           LOAD s3, 1E                           ; endy 30
 230  20413                           CALL 413[draw_line]                   ;
 231                                  ;; LINE 3 (MIDDLE) FOR E1
 231  01064                           LOAD s0, 64                           ; stax 100
 232  0112D                           LOAD s1, 2D                           ; stay 45
 233  01278                           LOAD s2, 78                           ; endx 120
 234  0132D                           LOAD s3, 2D                           ; endy 45
 235  20413                           CALL 413[draw_line]                   ;
 236                                  ;; LINE 4 (BOTTOM) FOR E1
 236  01064                           LOAD s0, 64                           ; stax 100
 237  0113C                           LOAD s1, 3C                           ; stay 60
 238  01278                           LOAD s2, 78                           ; endx 120
 239  0133C                           LOAD s3, 3C                           ; endy 60
 23A  20413                           CALL 413[draw_line]                   ;
 23B                                  ;; LINE 1 (LEFT) FOR O
 23B  01082                           LOAD s0, 82                           ; stax 130
 23C  0111E                           LOAD s1, 1E                           ; stay 30
 23D  01282                           LOAD s2, 82                           ; endx 130
 23E  0133C                           LOAD s3, 3C                           ; endy 60
 23F  20413                           CALL 413[draw_line]                   ;
 240                                  ;; LINE 2 (TOP) FOR O
 240  01082                           LOAD s0, 82                           ; stax 130
 241  0111E                           LOAD s1, 1E                           ; stay 30
 242  01296                           LOAD s2, 96                           ; endx 150
 243  0131E                           LOAD s3, 1E                           ; endy 30
 244  20413                           CALL 413[draw_line]                   ;
 245                                  ;; LINE 3 (RIGHT) FOR O
 245  01096                           LOAD s0, 96                           ; stax 150
 246  0111E                           LOAD s1, 1E                           ; stay 30
 247  01296                           LOAD s2, 96                           ; endx 150
 248  0133C                           LOAD s3, 3C                           ; endy 60
 249  20413                           CALL 413[draw_line]                   ;
 24A                                  ;; LINE 4 (BOTTOM) FOR O
 24A  01082                           LOAD s0, 82                           ; stax 130
 24B  0113C                           LOAD s1, 3C                           ; stay 60
 24C  01296                           LOAD s2, 96                           ; endx 150
 24D  0133C                           LOAD s3, 3C                           ; endy 60
 24E  20413                           CALL 413[draw_line]                   ;
 24F                                  ;; LINE 1 (LEFTANGLE) FOR V
 24F  010A0                           LOAD s0, A0                           ; stax 160
 250  0111E                           LOAD s1, 1E                           ; stay 30
 251  012AA                           LOAD s2, AA                           ; endx 170
 252  0133C                           LOAD s3, 3C                           ; endy 60
 253  20413                           CALL 413[draw_line]                   ;
 254                                  ;; LINE 2 (RIGHTANGLE) FOR V
 254  010B4                           LOAD s0, B4                           ; stax 180
 255  0111E                           LOAD s1, 1E                           ; stay 30
 256  012AA                           LOAD s2, AA                           ; endx 170
 257  0133C                           LOAD s3, 3C                           ; endy 60
 258  20413                           CALL 413[draw_line]                   ;
 259                                  ;; LINE 1 (LEFT) FOR E
 259  010BE                           LOAD s0, BE                           ; stax 190
 25A  0111E                           LOAD s1, 1E                           ; stay 30
 25B  012BE                           LOAD s2, BE                           ; endx 190
 25C  0133C                           LOAD s3, 3C                           ; endy 60
 25D  20413                           CALL 413[draw_line]                   ;
 25E                                  ;; LINE 2 (TOP) FOR E
 25E  010BE                           LOAD s0, BE                           ; stax 190
 25F  0111E                           LOAD s1, 1E                           ; stay 30
 260  012D2                           LOAD s2, D2                           ; endx 210
 261  0131E                           LOAD s3, 1E                           ; endy 30
 262  20413                           CALL 413[draw_line]                   ;
 263                                  ;; LINE 3 (MIDDLE) FOR E
 263  010BE                           LOAD s0, BE                           ; stax 190
 264  0112D                           LOAD s1, 2D                           ; stay 45
 265  012D2                           LOAD s2, D2                           ; endx 210
 266  0132D                           LOAD s3, 2D                           ; endy 45
 267  20413                           CALL 413[draw_line]                   ;
 268                                  ;; LINE 4 (BOTTOM) FOR E
 268  010BE                           LOAD s0, BE                           ; stax 190
 269  0113C                           LOAD s1, 3C                           ; stay 60
 26A  012D2                           LOAD s2, D2                           ; endx 210
 26B  0133C                           LOAD s3, 3C                           ; endy 60
 26C  20413                           CALL 413[draw_line]                   ;
 26D                                  ;; LINE 1 (LEFT) FOR R
 26D  010DC                           LOAD s0, DC                           ; stax 220
 26E  0111E                           LOAD s1, 1E                           ; stay 30
 26F  012DC                           LOAD s2, DC                           ; endx 220
 270  0133C                           LOAD s3, 3C                           ; endy 60
 271  20413                           CALL 413[draw_line]                   ;
 272                                  ;; LINE 2 (TOP) FOR R
 272  010DC                           LOAD s0, DC                           ; stax 220
 273  0111E                           LOAD s1, 1E                           ; stay 30
 274  012F0                           LOAD s2, F0                           ; endx 240
 275  0131E                           LOAD s3, 1E                           ; endy 30
 276  20413                           CALL 413[draw_line]                   ;
 277                                  ;; LINE 3 (RIGHT) FOR R
 277  010F0                           LOAD s0, F0                           ; stax 240
 278  0111E                           LOAD s1, 1E                           ; stay 30
 279  012F0                           LOAD s2, F0                           ; endx 240
 27A  0132D                           LOAD s3, 2D                           ; endy 45
 27B  20413                           CALL 413[draw_line]                   ;
 27C                                  ;; LINE 4 (MIDDLE) FOR R
 27C  010DC                           LOAD s0, DC                           ; stax 220
 27D  0112D                           LOAD s1, 2D                           ; stay 45
 27E  012F0                           LOAD s2, F0                           ; endx 240
 27F  0132D                           LOAD s3, 2D                           ; endy 45
 280  20413                           CALL 413[draw_line]                   ;
 281                                  ;; LINE 5 (ANGLED1) FOR R
 281  010DC                           LOAD s0, DC                           ; stax 220
 282  0112D                           LOAD s1, 2D                           ; stay 45
 283  012F0                           LOAD s2, F0                           ; endx 240
 284  0133C                           LOAD s3, 3C                           ; endy 60
 285  20413                           CALL 413[draw_line]                   ;
 286                                  ;; LINE 6 (ANGLED2) FOR R
 286  010DC                           LOAD s0, DC                           ; stax 220
 287  0112E                           LOAD s1, 2E                           ; stay 46
 288  012EF                           LOAD s2, EF                           ; endx 239
 289  0133C                           LOAD s3, 3C                           ; endy 60
 28A  20413                           CALL 413[draw_line]                   ;
 28B  25000                           RETURN                                ;
 28C                                  ;;============================================================================
 28C                                  ;; Credits - Draw Credits Screen Subroutine
 28C                                  ;;============================================================================
 28C                    draw_credits: 
 28C                                  ;; LINE 1 (TOP) FOR C
 28C  01023                           LOAD s0, 23                           ; stax 35
 28D  0111E                           LOAD s1, 1E                           ; stay 30
 28E  0122D                           LOAD s2, 2D                           ; endx 45
 28F  0131E                           LOAD s3, 1E                           ; endy 30
 290  20413                           CALL 413[draw_line]                   ;
 291                                  ;; LINE 2 (TOPLEFT ANGLED) FOR C
 291  01023                           LOAD s0, 23                           ; stax 35
 292  0111E                           LOAD s1, 1E                           ; stay 30
 293  01219                           LOAD s2, 19                           ; endx 25
 294  01328                           LOAD s3, 28                           ; endy 40
 295  20413                           CALL 413[draw_line]                   ;
 296                                  ;; LINE 3 (LEFT) FOR C
 296  01019                           LOAD s0, 19                           ; stax 25
 297  01128                           LOAD s1, 28                           ; stay 40
 298  01219                           LOAD s2, 19                           ; endx 25
 299  01332                           LOAD s3, 32                           ; endy 50
 29A  20413                           CALL 413[draw_line]                   ;
 29B                                  ;; LINE 4 (BOTTOMLEFT ANGLED) FOR C
 29B  01019                           LOAD s0, 19                           ; stax 25
 29C  01132                           LOAD s1, 32                           ; stay 50
 29D  01223                           LOAD s2, 23                           ; endx 35
 29E  0133C                           LOAD s3, 3C                           ; endy 60
 29F  20413                           CALL 413[draw_line]                   ;
 2A0                                  ;; LINE 5 (BOTTOM) FOR C
 2A0  01023                           LOAD s0, 23                           ; stax 35
 2A1  0113C                           LOAD s1, 3C                           ; stay 60
 2A2  0122D                           LOAD s2, 2D                           ; endx 45
 2A3  0133C                           LOAD s3, 3C                           ; endy 60
 2A4  20413                           CALL 413[draw_line]                   ;
 2A5                                  ;; LINE 1 (LEFT) FOR R
 2A5  01037                           LOAD s0, 37                           ; stax 55
 2A6  0111E                           LOAD s1, 1E                           ; stay 30
 2A7  01237                           LOAD s2, 37                           ; endx 55
 2A8  0133C                           LOAD s3, 3C                           ; endy 60
 2A9  20413                           CALL 413[draw_line]                   ;
 2AA                                  ;; LINE 2 (TOP) FOR R
 2AA  01037                           LOAD s0, 37                           ; stax 55
 2AB  0111E                           LOAD s1, 1E                           ; stay 30
 2AC  0124B                           LOAD s2, 4B                           ; endx 75
 2AD  0131E                           LOAD s3, 1E                           ; endy 30
 2AE  20413                           CALL 413[draw_line]                   ;
 2AF                                  ;; LINE 3 (RIGHT) FOR R
 2AF  0104B                           LOAD s0, 4B                           ; stax 75
 2B0  0111E                           LOAD s1, 1E                           ; stay 30
 2B1  0124B                           LOAD s2, 4B                           ; endx 75
 2B2  0132D                           LOAD s3, 2D                           ; endy 45
 2B3  20413                           CALL 413[draw_line]                   ;
 2B4                                  ;; LINE 4 (MIDDLE) FOR R
 2B4  01037                           LOAD s0, 37                           ; stax 55
 2B5  0112D                           LOAD s1, 2D                           ; stay 45
 2B6  0124B                           LOAD s2, 4B                           ; endx 75
 2B7  0132D                           LOAD s3, 2D                           ; endy 45
 2B8  20413                           CALL 413[draw_line]                   ;
 2B9                                  ;; LINE 5 (ANGLED) FOR R
 2B9  01037                           LOAD s0, 37                           ; stax 55
 2BA  0112D                           LOAD s1, 2D                           ; stay 45
 2BB  0124B                           LOAD s2, 4B                           ; endx 75
 2BC  0133C                           LOAD s3, 3C                           ; endy 60
 2BD  20413                           CALL 413[draw_line]                   ;
 2BE                                  ;; LINE 6 (ANGLED2) FOR R
 2BE  01037                           LOAD s0, 37                           ; stax 55
 2BF  0112E                           LOAD s1, 2E                           ; stay 46
 2C0  0124A                           LOAD s2, 4A                           ; endx 74
 2C1  0133C                           LOAD s3, 3C                           ; endy 60
 2C2  20413                           CALL 413[draw_line]                   ;
 2C3                                  ;; LINE 1 (LEFT) FOR E
 2C3  01055                           LOAD s0, 55                           ; stax 85
 2C4  0111E                           LOAD s1, 1E                           ; stay 30
 2C5  01255                           LOAD s2, 55                           ; endx 85
 2C6  0133C                           LOAD s3, 3C                           ; endy 60
 2C7  20413                           CALL 413[draw_line]                   ;
 2C8                                  ;; LINE 2 (TOP) FOR E
 2C8  01055                           LOAD s0, 55                           ; stax 85
 2C9  0111E                           LOAD s1, 1E                           ; stay 30
 2CA  01269                           LOAD s2, 69                           ; endx 105
 2CB  0131E                           LOAD s3, 1E                           ; endy 30
 2CC  20413                           CALL 413[draw_line]                   ;
 2CD                                  ;; LINE 3 (MIDDLE) FOR E
 2CD  01055                           LOAD s0, 55                           ; stax 85
 2CE  0112D                           LOAD s1, 2D                           ; stay 45
 2CF  01269                           LOAD s2, 69                           ; endx 105
 2D0  0132D                           LOAD s3, 2D                           ; endy 45
 2D1  20413                           CALL 413[draw_line]                   ;
 2D2                                  ;; LINE 4 (BOTTOM) FOR E
 2D2  01055                           LOAD s0, 55                           ; stax 85
 2D3  0113C                           LOAD s1, 3C                           ; stay 60
 2D4  01269                           LOAD s2, 69                           ; endx 105
 2D5  0133C                           LOAD s3, 3C                           ; endy 60
 2D6  20413                           CALL 413[draw_line]                   ;
 2D7                                  ;; LINE 1 (LEFT) FOR D
 2D7  01073                           LOAD s0, 73                           ; stax 115
 2D8  0111E                           LOAD s1, 1E                           ; stay 30
 2D9  01273                           LOAD s2, 73                           ; endx 115
 2DA  0133C                           LOAD s3, 3C                           ; endy 60
 2DB  20413                           CALL 413[draw_line]                   ;
 2DC                                  ;; LINE 2 (TOP) FOR D
 2DC  01073                           LOAD s0, 73                           ; stax 115
 2DD  0111E                           LOAD s1, 1E                           ; stay 30
 2DE  01282                           LOAD s2, 82                           ; endx 130
 2DF  0131E                           LOAD s3, 1E                           ; endy 30
 2E0  20413                           CALL 413[draw_line]                   ;
 2E1                                  ;; LINE 3 (TOPRIGHT ANGLED) FOR D
 2E1  01082                           LOAD s0, 82                           ; stax 130
 2E2  0111E                           LOAD s1, 1E                           ; stay 30
 2E3  01287                           LOAD s2, 87                           ; endx 135
 2E4  01323                           LOAD s3, 23                           ; endy 35
 2E5  20413                           CALL 413[draw_line]                   ;
 2E6                                  ;; LINE 4 (RIGHT) FOR D
 2E6  01087                           LOAD s0, 87                           ; stax 135
 2E7  01123                           LOAD s1, 23                           ; stay 35
 2E8  01287                           LOAD s2, 87                           ; endx 135
 2E9  01337                           LOAD s3, 37                           ; endy 55
 2EA  20413                           CALL 413[draw_line]                   ;
 2EB                                  ;; LINE 5 (BOTTOMRIGHT ANGLED) FOR D
 2EB  01087                           LOAD s0, 87                           ; stax 135
 2EC  01137                           LOAD s1, 37                           ; stay 55
 2ED  01282                           LOAD s2, 82                           ; endx 130
 2EE  0133C                           LOAD s3, 3C                           ; endy 60
 2EF  20413                           CALL 413[draw_line]                   ;
 2F0                                  ;; LINE 6 (BOTTOM) FOR D
 2F0  01073                           LOAD s0, 73                           ; stax 115
 2F1  0113C                           LOAD s1, 3C                           ; stay 60
 2F2  01282                           LOAD s2, 82                           ; endx 130
 2F3  0133C                           LOAD s3, 3C                           ; endy 60
 2F4  20413                           CALL 413[draw_line]                   ;
 2F5                                  ;; LINE 1 (TOP) FOR I
 2F5  01091                           LOAD s0, 91                           ; stax 145
 2F6  0111E                           LOAD s1, 1E                           ; stay 30
 2F7  012A5                           LOAD s2, A5                           ; endx 165
 2F8  0131E                           LOAD s3, 1E                           ; endy 30
 2F9  20413                           CALL 413[draw_line]                   ;
 2FA                                  ;; LINE 2 (MIDDLE) FOR I
 2FA  0109B                           LOAD s0, 9B                           ; stax 155
 2FB  0111E                           LOAD s1, 1E                           ; stay 30
 2FC  0129B                           LOAD s2, 9B                           ; endx 155
 2FD  0133C                           LOAD s3, 3C                           ; endy 60
 2FE  20413                           CALL 413[draw_line]                   ;
 2FF                                  ;; LINE 3 (BOTTOM) FOR I
 2FF  01091                           LOAD s0, 91                           ; stax 145
 300  0113C                           LOAD s1, 3C                           ; stay 60
 301  012A5                           LOAD s2, A5                           ; endx 165
 302  0133C                           LOAD s3, 3C                           ; endy 60
 303  20413                           CALL 413[draw_line]                   ;
 304                                  ;; LINE 1 (TOP) FOR T
 304  010AF                           LOAD s0, AF                           ; stax 175
 305  0111E                           LOAD s1, 1E                           ; stay 30
 306  012C3                           LOAD s2, C3                           ; endx 195
 307  0131E                           LOAD s3, 1E                           ; endy 30
 308  20413                           CALL 413[draw_line]                   ;
 309                                  ;; LINE 2 (MIDDLE) FOR T
 309  010B9                           LOAD s0, B9                           ; stax 185
 30A  0111E                           LOAD s1, 1E                           ; stay 30
 30B  012B9                           LOAD s2, B9                           ; endx 185
 30C  0133C                           LOAD s3, 3C                           ; endy 60
 30D  20413                           CALL 413[draw_line]                   ;
 30E                                  ;; LINE 1 (TOP) FOR S
 30E  010CD                           LOAD s0, CD                           ; stax 205
 30F  0111E                           LOAD s1, 1E                           ; stay 30
 310  012E1                           LOAD s2, E1                           ; endx 225
 311  0131E                           LOAD s3, 1E                           ; endy 30
 312  20413                           CALL 413[draw_line]                   ;
 313                                  ;; LINE 2 (LEFT) FOR S
 313  010CD                           LOAD s0, CD                           ; stax 205
 314  0111E                           LOAD s1, 1E                           ; stay 30
 315  012CD                           LOAD s2, CD                           ; endx 205
 316  0132D                           LOAD s3, 2D                           ; endy 45
 317  20413                           CALL 413[draw_line]                   ;
 318                                  ;; LINE 3 (MIDDLE) FOR S
 318  010CD                           LOAD s0, CD                           ; stax 205
 319  0112D                           LOAD s1, 2D                           ; stay 45
 31A  012E1                           LOAD s2, E1                           ; endx 225
 31B  0132D                           LOAD s3, 2D                           ; endy 45
 31C  20413                           CALL 413[draw_line]                   ;
 31D                                  ;; LINE 4 (RIGHT) FOR S
 31D  010E1                           LOAD s0, E1                           ; stax 225
 31E  0112D                           LOAD s1, 2D                           ; stay 45
 31F  012E1                           LOAD s2, E1                           ; endx 225
 320  0133C                           LOAD s3, 3C                           ; endy 60
 321  20413                           CALL 413[draw_line]                   ;
 322                                  ;; LINE 5 (BOTTOM) FOR S
 322  010CD                           LOAD s0, CD                           ; stax 205
 323  0113C                           LOAD s1, 3C                           ; stay 60
 324  012E1                           LOAD s2, E1                           ; endx 225
 325  0133C                           LOAD s3, 3C                           ; endy 60
 326  20413                           CALL 413[draw_line]                   ;
 327  25000                           RETURN                                ;
 328                                  ;;============================================================================
 328                                  ;; Draw Helicopter - Draw Helicopter Subroutine
 328                                  ;;============================================================================
 328                 draw_helicopter: 
 328  2036D                           CALL 36D[draw_helicopter_cockpit]     ; call the subroutine to draw the cockpit
 329  203E1                           CALL 3E1[draw_helicopter_blades]      ; call the subroutine to draw the blades
 32A  203AC                           CALL 3AC[draw_helicopter_tail]        ; call the subroutine to draw the tail
 32B                                  ;CALL draw_helicopter_smoke         ; call the subroutine to draw the smoke
 32B  25000                           RETURN                                ; go back from drawing helicopter
 32C                                  ;;============================================================================
 32C                                  ;; Draw Block - Draw Block Subroutine
 32C                                  ;;============================================================================
 32C                      draw_block: 
 32C                                  ;;============================================================================
 32C                                  ;; Draws Top Line of Block
 32C                                  ;;============================================================================
 32C  005E0                           LOAD s5, sE                           ; load 255 into s5 (horizontal center of block)
 32D  016E1                           LOAD s6, E1                           ; load 245 into s6
 32E  1C650                           COMPARE s6, s5                        ; checking if the block is done "peaking out" from the right (initial compare: 245 ? 255)
 32F  3A335                           JUMP C, 335[right_edge]               ; jump to right_edge
 330  0160A                           LOAD s6, 0A                           ; load 10 into s6
 331  1C560                           COMPARE s5, s6                        ; comparing s5 and s6
 332  3A339                           JUMP C, 339[left_edge]                ; jump to left_edge
 333  32339                           JUMP Z, 339[left_edge]                ; jump to left_edge
 334  2233D                           JUMP 33D[in_middle]                   ; jump to in_middle
 335  2D500               right_edge: OUTPUT s5, 00[stax]                   ; set desired stax
 336  1950A                           SUB s5, 0A                            ;
 337  2D502                           OUTPUT s5, 02[endx]                   ; set desired stax
 338  22340                           JUMP 340[finished1]                   ; jump to draw_ys
 339  2D500                left_edge: OUTPUT s5, 00[stax]                   ; set desired stax
 33A  01600                           LOAD s6, 00                           ; put 255 into s5
 33B  2D602                           OUTPUT s6, 02[endx]                   ; set desired stax
 33C  22340                           JUMP 340[finished1]                   ; jump to draw_ys
 33D                       in_middle: 
 33D  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 33E  1950A                           SUB s5, 0A                            ; subtract the width of block to get the other x coordinate
 33F  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 340  2DF01                finished1: OUTPUT sF, 01[stay]                   ; set desired stay
 341  2DF03                           OUTPUT sF, 03[endy]                   ; set desired endy
 342  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 343                                  ;;============================================================================
 343                                  ;; Draws Bottom Line of Block
 343                                  ;;============================================================================
 343  005F0                           LOAD s5, sF                           ; load sF into s5
 344  1153C                           ADD s5, 3C                            ; add 40 to s5
 345  2D501                           OUTPUT s5, 01[stay]                   ; set desired stay
 346  2D503                           OUTPUT s5, 03[endy]                   ; set desired endy
 347  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 348                                  ;;============================================================================
 348                                  ;; Draws Right Vertical Line of Block
 348                                  ;;============================================================================
 348  2DE00                           OUTPUT sE, 00[stax]                   ; set desired stax
 349  2DE02                           OUTPUT sE, 02[endx]                   ; set desired endx
 34A  2DF01                           OUTPUT sF, 01[stay]                   ; set desired stay
 34B  005F0                           LOAD s5, sF                           ; load sF into s5
 34C  1153C                           ADD s5, 3C                            ; add 60 to y coordinate
 34D  2D503                           OUTPUT s5, 03[endy]                   ; set desired endy
 34E  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 34F                                  ;;============================================================================
 34F                                  ;; Draws Left Vertical Line of Block
 34F                                  ;;============================================================================
 34F  005E0                           LOAD s5, sE                           ; load sE into s5
 350  1950A                           SUB s5, 0A                            ; subtract 10 from s5
 351  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 352  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 353  2DF01                           OUTPUT sF, 01[stay]                   ; set desired stay
 354  005F0                           LOAD s5, sF                           ; load sF into s5
 355  1153C                           ADD s5, 3C                            ; add 60 to y coordinate
 356  2D503                           OUTPUT s5, 03[endy]                   ; set desired endy
 357  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 358  25000                           RETURN                                ; finished with draw_block subroutine
 359                                  ;;============================================================================
 359                                  ;; Random Block Location - Random Block Location Subroutine
 359                                  ;;============================================================================
 359           random_block_location: 
 359  1DE00                           COMPARE sE, 00                        ; is it time to create a new variable?
 35A  3235F                           JUMP Z, 35F[new_random]               ; jump to new random creator
 35B  1DEFF                           COMPARE sE, FF                        ; is it time to create a new variable?
 35C  3235F                           JUMP Z, 35F[new_random]               ; jump to new random creator
 35D  3635E                           JUMP NZ, 35E[skip_everything]         ; goes back
 35E  25000          skip_everything: RETURN                                ; returns back (no new rand. number)
 35F  09507               new_random: INPUT s5, 07[prng]                    ; create to new random number
 360  1D50F                           COMPARE s5, 0F                        ; check if it's in range
 361  3E363                           JUMP NC, 363[check_other_bound_range] ; check lower bound of map
 362  3A35F                           JUMP C, 35F[new_random]               ; get new variable
 363         check_other_bound_range: 
 363  1D5B4                           COMPARE s5, B4                        ; compare s5 to 180
 364  3E35F                           JUMP NC, 35F[new_random]              ; get a new random number
 365  00F50                           LOAD sF, s5                           ; a new y coordinate generated
 366  25000                           RETURN                                ; get out of subroutine
 367                                  ;;============================================================================
 367                                  ;; Move Helicopter Up - Move Helicopter Up Subroutine
 367                                  ;;============================================================================
 367                    move_heli_up: 
 367  1DC15                           COMPARE sC, 15                        ; check if the helicopter is colliding with top wall
 368  3636B                           JUMP NZ, 36B[decrement]               ; if not colliding, then move helicopter appropriately
 369  3E36B                           JUMP NC, 36B[decrement]               ; necessary as well
 36A  25000                           RETURN                                ; do not increment if colliding with top wall
 36B                       decrement: 
 36B  19C04                           SUB sC, 04                            ; move the helicopter up
 36C  25000                           RETURN                                ; get out of subroutine
 36D                                  ;;============================================================================
 36D                                  ;; Draw Helicopter Cockpit - Draw Helicopter Cockpit Subroutine
 36D                                  ;;============================================================================
 36D         draw_helicopter_cockpit: 
 36D                                  ;;============================================================================
 36D                                  ;; Draws Cockpit of Helicopter (Line 1a)
 36D                                  ;;============================================================================
 36D                                  ;; STARTING POINT
 36D  01564                           LOAD s5, 64                           ; load 100 into s5
 36E  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 36F  006C0                           LOAD s6, sC                           ; load sC into s5
 370  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 371                                  ;; ENDING POINT
 371  19501                           SUB s5, 01                            ; subtract 7 from s5
 372  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 373  19603                           SUB s6, 03                            ; go up by 5
 374  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 375  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 376                                  ;;============================================================================
 376                                  ;; Draws Cockpit of Helicopter (Line 1b)
 376                                  ;;============================================================================
 376                                  ;; STARTING POINT
 376  01564                           LOAD s5, 64                           ; load 100 into s5
 377  19501                           SUB s5, 01                            ; subtract 7 from s5
 378  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 379  006C0                           LOAD s6, sC                           ; load sC into s5
 37A  19603                           SUB s6, 03                            ; go up by 5
 37B  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 37C                                  ;; ENDING POINT
 37C  19504                           SUB s5, 04                            ; subtract 7 from s5
 37D  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 37E  19602                           SUB s6, 02                            ; go up by 5
 37F  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 380  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 381                                  ;;============================================================================
 381                                  ;; Draws Cockpit of Helicopter (Line 2a)
 381                                  ;;============================================================================
 381                                  ;; STARTING POINT
 381  01564                           LOAD s5, 64                           ; load 100 into s5
 382  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 383  006C0                           LOAD s6, sC                           ; load sC into s5
 384  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 385                                  ;; ENDING POINT
 385  19501                           SUB s5, 01                            ; subtract 1 from s5
 386  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 387  11603                           ADD s6, 03                            ; go down by 3
 388  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 389  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 38A                                  ;;============================================================================
 38A                                  ;; Draws Cockpit of Helicopter (Line 2b)
 38A                                  ;;============================================================================
 38A                                  ;; STARTING POINT
 38A  01564                           LOAD s5, 64                           ; load 100 into s5
 38B  19501                           SUB s5, 01                            ; subtract 1 from s5
 38C  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 38D  006C0                           LOAD s6, sC                           ; load sC into s5
 38E  11603                           ADD s6, 03                            ; go down by 3
 38F  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 390                                  ;; ENDING POINT
 390  19504                           SUB s5, 04                            ; subtract 7 from s5
 391  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 392  11602                           ADD s6, 02                            ; go down by 5
 393  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 394  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 395                                  ;;============================================================================
 395                                  ;; Draws Cockpit of Helicopter (Line 3)
 395                                  ;;============================================================================
 395                                  ;; STARTING POINT
 395  01564                           LOAD s5, 64                           ; load 100 into s5
 396  19505                           SUB s5, 05                            ; load 7 into s5
 397  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 398  006C0                           LOAD s6, sC                           ; load sC into s5
 399  19605                           SUB s6, 05                            ; go up by 5 using subtraction
 39A  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 39B                                  ;; ENDING POINT
 39B  19507                           SUB s5, 07                            ; subtract 5 from s5
 39C  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 39D  11605                           ADD s6, 05                            ; go down by 5
 39E  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 39F  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 3A0                                  ;;============================================================================
 3A0                                  ;; Draws Cockpit of Helicopter (Line 4)
 3A0                                  ;;============================================================================
 3A0                                  ;; STARTING POINT
 3A0  01564                           LOAD s5, 64                           ; load 100 into s5
 3A1  19505                           SUB s5, 05                            ; load 7 into s5
 3A2  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 3A3  006C0                           LOAD s6, sC                           ; load sC into s5
 3A4  11605                           ADD s6, 05                            ; go down by 5 using addition
 3A5  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 3A6                                  ;; ENDING POINT
 3A6  19507                           SUB s5, 07                            ; subtract 5 from s5
 3A7  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 3A8  19605                           SUB s6, 05                            ; go back up by 5
 3A9  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 3AA  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 3AB  25000                           RETURN                                ; go back from subroutine
 3AC                                  ;;============================================================================
 3AC                                  ;; Draw Helicopter Tail - Draw Helicopter Tail Subroutine
 3AC                                  ;;============================================================================
 3AC            draw_helicopter_tail: 
 3AC                                  ;;============================================================================
 3AC                                  ;; Draws Tail of Helicopter (Line 1)
 3AC                                  ;;============================================================================
 3AC                                  ;; STARTING POINT
 3AC  01564                           LOAD s5, 64                           ; load 100 into s5
 3AD  1950A                           SUB s5, 0A                            ; subtract 0xA from s5
 3AE  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 3AF  006C0                           LOAD s6, sC                           ; load sC into s5
 3B0  19602                           SUB s6, 02                            ; subtract 2 from s6
 3B1  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 3B2                                  ;; ENDING POINT
 3B2  19507                           SUB s5, 07                            ; subtract 7 from s5
 3B3  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 3B4  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 3B5  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 3B6                                  ;;============================================================================
 3B6                                  ;; Draws Tail of Helicopter (Line 2)
 3B6                                  ;;============================================================================
 3B6                                  ;; STARTING POINT
 3B6  01564                           LOAD s5, 64                           ; load 100 into s5
 3B7  1950C                           SUB s5, 0C                            ; subtract 0xC from s5
 3B8  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 3B9  006C0                           LOAD s6, sC                           ; load sC into s5
 3BA  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 3BB                                  ;; ENDING POINT
 3BB  19508                           SUB s5, 08                            ; subtract 7 from s5
 3BC  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 3BD  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 3BE  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 3BF                                  ;;============================================================================
 3BF                                  ;; Draws Tail of Helicopter (Line 3)
 3BF                                  ;;============================================================================
 3BF                                  ;; STARTING POINT
 3BF  01564                           LOAD s5, 64                           ; load 100 into s5
 3C0  1950A                           SUB s5, 0A                            ; subtract 0x0A from s5
 3C1  19508                           SUB s5, 08                            ; subtract 0x10 from s5
 3C2  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 3C3  006C0                           LOAD s6, sC                           ; load sC into s5
 3C4  19602                           SUB s6, 02                            ; subtract 2 from s6
 3C5  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 3C6                                  ;; ENDING POINT
 3C6  19502                           SUB s5, 02                            ; subtract 2 from s5
 3C7  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 3C8  19602                           SUB s6, 02                            ; subtract 2 from s6
 3C9  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 3CA  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 3CB                                  ;;============================================================================
 3CB                                  ;; Draws Tail of Helicopter (Line 4)
 3CB                                  ;;============================================================================
 3CB                                  ;; STARTING POINT
 3CB  01564                           LOAD s5, 64                           ; load 100 into s5
 3CC  1950C                           SUB s5, 0C                            ; subtract 0x0C from s5
 3CD  19509                           SUB s5, 09                            ; subtract 0x09 from s5
 3CE  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 3CF  006C0                           LOAD s6, sC                           ; load sC into s5
 3D0  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 3D1                                  ;; ENDING POINT
 3D1                                  ;SUB s5, 01                          ; subtract 2 from s5
 3D1  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 3D2  11601                           ADD s6, 01                            ; add 1 to s6
 3D3  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 3D4  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 3D5                                  ;;============================================================================
 3D5                                  ;; Draws Tail of Helicopter (Line 5)
 3D5                                  ;;============================================================================
 3D5                                  ;; STARTING POINT
 3D5  01564                           LOAD s5, 64                           ; load 100 into s5
 3D6  1950A                           SUB s5, 0A                            ; subtract 0x0A from s5
 3D7  1950A                           SUB s5, 0A                            ; subtract 0x0A from s5
 3D8  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 3D9  006C0                           LOAD s6, sC                           ; load sC into s5
 3DA  19604                           SUB s6, 04                            ; subtract 4 from s6
 3DB  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 3DC                                  ;; ENDING POINT
 3DC  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 3DD  11605                           ADD s6, 05                            ; add 1 to s6
 3DE  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 3DF  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 3E0  25000                           RETURN                                ; go back from subroutine
 3E1                                  ;;============================================================================
 3E1                                  ;; Draw Helicopter Blades - Draw Helicopter Blades Subroutine
 3E1                                  ;;============================================================================
 3E1          draw_helicopter_blades: 
 3E1                                  ;;============================================================================
 3E1                                  ;; Draws Blades of Helicopter (Line 1)
 3E1                                  ;;============================================================================
 3E1                                  ;; STARTING POINT
 3E1  01564                           LOAD s5, 64                           ; load 100 into s5
 3E2  19505                           SUB s5, 05                            ; subtract 0xA from s5
 3E3  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 3E4  006C0                           LOAD s6, sC                           ; load sC into s5
 3E5  19605                           SUB s6, 05                            ; subtract 2 from s6
 3E6  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 3E7                                  ;; ENDING POINT
 3E7  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 3E8  19602                           SUB s6, 02                            ; subtract 2 from s6
 3E9  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 3EA  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 3EB                                  ;;============================================================================
 3EB                                  ;; Draws Blades of Helicopter (Line 2)
 3EB                                  ;;============================================================================
 3EB                                  ;; STARTING POINT
 3EB  01564                           LOAD s5, 64                           ; load 100 into s5
 3EC  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 3ED  006C0                           LOAD s6, sC                           ; load sC into s5
 3EE  19607                           SUB s6, 07                            ; subtract 2 from s6
 3EF  2D601                           OUTPUT s6, 01[stay]                   ; set desired stay
 3F0                                  ;; ENDING POINT
 3F0  1950A                           SUB s5, 0A                            ; subtract 10 from s5
 3F1  2D502                           OUTPUT s5, 02[endx]                   ; set desired endx
 3F2  2D603                           OUTPUT s6, 03[endy]                   ; set desired endy
 3F3  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 3F4  25000                           RETURN                                ; go back from subroutine
 3F5                                  ;;============================================================================
 3F5                                  ;; Draw Helicopter Smoke - Draw Helicopter Smoke Subroutine
 3F5                                  ;;============================================================================
 3F5           draw_helicopter_smoke: 
 3F5                                  ;;============================================================================
 3F5                                  ;; Draws Smoke of Helicopter (Line 1)
 3F5                                  ;;============================================================================
 3F5                                  ;; Start Point
 3F5  01564                           LOAD s5, 64                           ; load 100 into s5
 3F6  19528                           SUB s5, 28                            ; position starting smoke right point of line 1
 3F7  2D500                           OUTPUT s5, 00[stax]                   ; output to starting x position of line 1
 3F8  006C0                           LOAD s6, sC                           ; load helicopter smoke vertical position for line 1
 3F9  2D601                           OUTPUT s6, 01[stay]                   ; output to starting y position of line 1
 3FA                                  ;;
 3FA                                  ;; End Point
 3FA  19504                           SUB s5, 04                            ; position starting smoke left point of line 1
 3FB  2D502                           OUTPUT s5, 02[endx]                   ; output to starting y position of line 1
 3FC  2D603                           OUTPUT s6, 03[endy]                   ; output to ending y position of line 1, matching helicopter
 3FD  2041D                           CALL 41D[old_draw_line]               ;draws a line (careful: this subroutine overwrites s5)
 3FE                                  ;;
 3FE                                  ;;============================================================================
 3FE                                  ;; Draws Smoke of Helicopter (Line 2)
 3FE                                  ;;============================================================================
 3FE                                  ;; Start Point
 3FE  01564                           LOAD s5, 64                           ; load 100 into s5
 3FF  19534                           SUB s5, 34                            ; position starting smoke right point of line 2
 400  2D500                           OUTPUT s5, 00[stax]                   ; output to starting x position of line 2
 401  006C0                           LOAD s6, sC                           ; load starting smoke vertical position for line 2
 402  11604                           ADD s6, 04                            ; add 4 to s6 (shift down by 4)
 403  2D601                           OUTPUT s6, 01[stay]                   ; output to starting y position of line 2
 404                                  ;;
 404                                  ;; End Point
 404  19504                           SUB s5, 04                            ; subtract s5 by 4 for length of line
 405  2D502                           OUTPUT s5, 02[endx]                   ; output to endx
 406  2D603                           OUTPUT s6, 03[endy]                   ; outputs vertical locaton of smoke line 2
 407  2041D                           CALL 41D[old_draw_line]               ;draws a line (careful: this subroutine overwrites s5)
 408                                  ;;
 408                                  ;;============================================================================
 408                                  ;; Draws Smoke of Helicopter (Line 3)
 408                                  ;;============================================================================
 408                                  ;; Start Point
 408  01564                           LOAD s5, 64                           ; load 100 into s5
 409  19540                           SUB s5, 40                            ; position starting smoke right point of line 3
 40A  2D500                           OUTPUT s5, 00[stax]                   ; output to starting x position of line 3
 40B  006C0                           LOAD s6, sC                           ; load starting smoke vertical position for line 3
 40C  19604                           SUB s6, 04                            ; add 4 to s6 (shift down by 4)
 40D  2D601                           OUTPUT s6, 01[stay]                   ; output to starting y position of line 3
 40E                                  ;;
 40E                                  ;; End Point
 40E  19504                           SUB s5, 04                            ; subtract s5 by 4 for length of line
 40F  2D502                           OUTPUT s5, 02[endx]                   ; output to endx
 410  2D603                           OUTPUT s6, 03[endy]                   ; output same y position of line 3
 411  2041D                           CALL 41D[old_draw_line]               ; draws a line (careful: this subroutine overwrites s5)
 412                                  ;;
 412  25000                           RETURN                                ; go back to subroutine
 413                                  ;;============================================================================
 413                                  ;; Draw Line - Draw Line Subroutine
 413                                  ;;============================================================================
 413  2D000                draw_line: OUTPUT s0, 00[stax]                   ; write stax
 414  2D101                           OUTPUT s1, 01[stay]                   ; write stay
 415  2D202                           OUTPUT s2, 02[endx]                   ; write endx
 416  2D303                           OUTPUT s3, 03[endy]                   ; write endy
 417  01501                           LOAD s5, 01[busy_go]                  ; load go command
 418  2D504                           OUTPUT s5, 04[busy]                   ; send go command
 419  09504                     wait: INPUT s5, 04[busy]                    ; read busy status
 41A  1D501                           COMPARE s5, 01[busy_go]               ; check busy status
 41B  32419                           JUMP Z, 419[wait]                     ; if busy, wait more
 41C  25000                           RETURN                                ; leave line drawing subroutine
 41D                                  ;;============================================================================
 41D                                  ;; Old Draw Line - Old Draw Line Subroutine (WILL DELETE LATER)
 41D                                  ;;============================================================================
 41D                   old_draw_line: 
 41D  01501                           LOAD s5, 01[busy_go]                  ; load go command
 41E  2D504                           OUTPUT s5, 04[busy]                   ; send go command
 41F  09504                    wait0: INPUT s5, 04[busy]                    ; read busy status
 420  1D501                           COMPARE s5, 01[busy_go]               ; check busy status
 421  3241F                           JUMP Z, 41F[wait0]                    ; if busy, wait more
 422  25000                           RETURN                                ; leave line drawing subroutine
 423                                  ;;============================================================================
 423                                  ;; Check Collisions - Check Collisions Subroutine
 423                                  ;;============================================================================
 423                 check_collision: 
 423                                  ;;============================================================================
 423                                  ;; Check Collisions with Map (top wall)
 423                                  ;;============================================================================
 423  01560                           LOAD s5, 60                           ; position of heli/wall collision
 424  0180F                           LOAD s8, 0F                           ; top wall vertical coordinate (15)
 425  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 426  1960A                           SUB s6, 0A                            ; the helicopter's blades 10 pixels higher
 427  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 428  1C860                           COMPARE s8, s6                        ; check if the two intersect
 429  3248D                           JUMP Z, 48D[collision_occurred]       ; jump to collision occurred
 42A  3E48D                           JUMP NC, 48D[collision_occurred]      ; jump to collision occurred (necessary)
 42B                                  ;;============================================================================
 42B                                  ;; Check Collisions with Map (bottom wall)
 42B                                  ;;============================================================================
 42B  018F0                           LOAD s8, F0                           ; bottom wall vertical coordinate (240)
 42C  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 42D  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 42E  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 42F  1C860                           COMPARE s8, s6                        ; check if the two intersect
 430  3248D                           JUMP Z, 48D[collision_occurred]       ; jump to collision occurred
 431  018F1                           LOAD s8, F1                           ; bottom wall vertical coordinate (241)
 432  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 433  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 434  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 435  1C860                           COMPARE s8, s6                        ; check if the two intersect
 436  3248D                           JUMP Z, 48D[collision_occurred]       ; jump to collision occurred
 437  018F2                           LOAD s8, F2                           ; bottom wall vertical coordinate (242)
 438  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 439  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 43A  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 43B  1C860                           COMPARE s8, s6                        ; check if the two intersect
 43C  3248D                           JUMP Z, 48D[collision_occurred]       ; jump to collision occurred
 43D  018F3                           LOAD s8, F3                           ; bottom wall vertical coordinate (243)
 43E  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 43F  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 440  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 441  1C860                           COMPARE s8, s6                        ; check if the two intersect
 442  3248D                           JUMP Z, 48D[collision_occurred]       ; jump to collision occurred
 443  018F4                           LOAD s8, F4                           ; bottom wall vertical coordinate (244)
 444  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 445  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 446  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 447  1C860                           COMPARE s8, s6                        ; check if the two intersect
 448  3248D                           JUMP Z, 48D[collision_occurred]       ; jump to collision occurred
 449  018F5                           LOAD s8, F5                           ; bottom wall vertical coordinate (245)
 44A  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 44B  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 44C  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 44D  1C860                           COMPARE s8, s6                        ; check if the two intersect
 44E  3248D                           JUMP Z, 48D[collision_occurred]       ; jump to collision occurred
 44F  018F6                           LOAD s8, F6                           ; bottom wall vertical coordinate (246)
 450  006C0                           LOAD s6, sC                           ; get vertical position of helicopter
 451  11605                           ADD s6, 05                            ; the helicopter's bottom is 5 pixels below
 452  00760                           LOAD s7, s6                           ; used later for drawing the "spark"
 453  1C860                           COMPARE s8, s6                        ; check if the two intersect
 454  3248D                           JUMP Z, 48D[collision_occurred]       ; jump to collision occurred
 455                                  ;;============================================================================
 455                                  ;; Check Collisions with Block
 455                                  ;;============================================================================
 455  005E0                           LOAD s5, sE                           ; get current horizontal position of block
 456  1950A                           SUB s5, 0A                            ; actual block is 10 pixels back
 457  1D564                           COMPARE s5, 64                        ; check if s5 coincides with heli (horizontal check)
 458  3246E                           JUMP Z, 46E[check_vertical]           ; jump to check vertical positioning
 459  1D563                           COMPARE s5, 63                        ; check if s5 coincides with heli (horizontal check)
 45A  3246E                           JUMP Z, 46E[check_vertical]           ; jump to check vertical positioning
 45B  1D562                           COMPARE s5, 62                        ; check if s5 coincides with heli (horizontal check)
 45C  3246E                           JUMP Z, 46E[check_vertical]           ; jump to check vertical positioning
 45D  1D561                           COMPARE s5, 61                        ; check if s5 coincides with heli (horizontal check)
 45E  3246E                           JUMP Z, 46E[check_vertical]           ; jump to check vertical positioning
 45F  1D560                           COMPARE s5, 60                        ; check if s5 coincides with heli (horizontal check)
 460  3246E                           JUMP Z, 46E[check_vertical]           ; jump to check vertical positioning
 461  1D559                           COMPARE s5, 59                        ; check if s5 coincides with heli (horizontal check)
 462  3246E                           JUMP Z, 46E[check_vertical]           ; jump to check vertical positioning
 463  1D558                           COMPARE s5, 58                        ; check if s5 coincides with heli (horizontal check)
 464  3246E                           JUMP Z, 46E[check_vertical]           ; jump to check vertical positioning
 465  1D557                           COMPARE s5, 57                        ; check if s5 coincides with heli (horizontal check)
 466  3246E                           JUMP Z, 46E[check_vertical]           ; jump to check vertical positioning
 467  1D556                           COMPARE s5, 56                        ; check if s5 coincides with heli (horizontal check)
 468  3246E                           JUMP Z, 46E[check_vertical]           ; jump to check vertical positioning
 469  1D555                           COMPARE s5, 55                        ; check if s5 coincides with heli (horizontal check)
 46A  3246E                           JUMP Z, 46E[check_vertical]           ; jump to check vertical positioning
 46B  1D554                           COMPARE s5, 54                        ; check if s5 coincides with heli (horizontal check)
 46C  3246E                           JUMP Z, 46E[check_vertical]           ; jump to check vertical positioning
 46D  36478                           JUMP NZ, 478[no_collision]            ; jump to no_collision routine
 46E                  check_vertical: 
 46E  006F0                           LOAD s6, sF                           ; get current vertical position of block
 46F  007C0                           LOAD s7, sC                           ; load helicopter front position
 470  1C760                     loop: COMPARE s7, s6                        ; compare s7 and s6
 471  3248D                           JUMP Z, 48D[collision_occurred]       ; jump to collision_occured
 472  11601                           ADD s6, 01                            ; add one to s6
 473  008F0                           LOAD s8, sF                           ; load original value for reference only
 474  1183C                           ADD s8, 3C                            ; add 60 to s8
 475  1C680                           COMPARE s6, s8                        ; compare s6 to bottom of block (s8)
 476  32478                           JUMP Z, 478[no_collision]             ; jump to no_collision routine
 477  36470                           JUMP NZ, 470[loop]                    ; keep looping
 478  19E01             no_collision: SUB sE, 01                            ; move block forwards
 479  1DA01                           COMPARE sA, 01                        ; check if score is above 500
 47A  3C47E                           CALL NC, 47E[stage2_check]            ; call second stage check
 47B  11C02                           ADD sC, 02                            ; increment sC
 47C  20496                           CALL 496[distance]                    ; used for keeping the score (increments distance)
 47D  25000                           RETURN                                ; leave, since no collisions occurred
 47E                    stage2_check: 
 47E  19E01                           SUB sE, 01                            ; subtract 1 from sE
 47F  1DA05                           COMPARE sA, 05                        ; check if score is above 1000
 480  3C483                           CALL NC, 483[stage3_check]            ; call speed2
 481  25000                           RETURN                                ; leave routine
 482                          speed2: 
 482                                  ;SUB sE, 01                          ; decrement by 2
 482  25000                           RETURN                                ; go back
 483                    stage3_check: 
 483  19E01                           SUB sE, 01                            ; decrement by 3
 484  1DA08                           COMPARE sA, 08                        ; check if score is above 1000
 485  3C487                           CALL NC, 487[stage4_check]            ; call speed2
 486  25000                           RETURN                                ; go back
 487                    stage4_check: 
 487  19E01                           SUB sE, 01                            ; decrement by 3
 488  1DA10                           COMPARE sA, 10                        ; check if score is above 1000
 489  3C48B                           CALL NC, 48B[stage5_check]            ; call speed2
 48A  25000                           RETURN 
 48B                    stage5_check: 
 48B  19E01                           SUB sE, 01                            ; decrement by 3
 48C  25000                           RETURN 
 48D              collision_occurred: 
 48D  2D500                           OUTPUT s5, 00[stax]                   ; set desired stax
 48E  2D701                           OUTPUT s7, 01[stay]                   ; set desired stay
 48F  09807                           INPUT s8, 07[prng]                    ; load random endx
 490  2D802                           OUTPUT s8, 02[endx]                   ; set random endx
 491  09807                           INPUT s8, 07[prng]                    ; load random endy
 492  2D803                           OUTPUT s8, 03[endy]                   ; set random endy
 493  20413                           CALL 413[draw_line]                   ; draw random line
 494  01902                           LOAD s9, 02[GAMEOVER_STATE]           ; should go to gameover state instead
 495  25000                           RETURN                                ; return from routine without any increments
 496                                  ;;============================================================================
 496                                  ;; Distance - Distance Subroutine
 496                                  ;;============================================================================
 496  2DB0A                 distance: OUTPUT sB, 0A[qssd_lo]                ; put distance value to qssd
 497  1DBFF                           COMPARE sB, FF                        ; check if max (FF) was reached
 498  3249B                           JUMP Z, 49B[distance2]                ; jump to distance2
 499  11B01                           ADD sB, 01[one]                       ; increment distance value
 49A  25000                           RETURN                                ; finished with distance subroutine
 49B  11A01                distance2: ADD sA, 01[one]                       ; add one to the next degree
 49C  01B00                           LOAD sB, 00[zero]                     ; reset sB
 49D  2DB0A                           OUTPUT sB, 0A[qssd_lo]                ; put distance value to qssd
 49E  2DA0B                           OUTPUT sA, 0B[qssd_hi]                ; put distance value to qssd
 49F  25000                           RETURN                                ; finished with distance subroutine
 4A0                                  ;;============================================================================
 4A0                                  ;; Interrupt - Vector.
 4A0                                  ;;============================================================================
 7FF                                  ADDRESS 7FF                           ; must be located here
 7FF  22014               isr_vector: JUMP 014[isr]                         ; always jump to isr
 800                                  ;;============================================================================
 800                                  ;;
 800                                  ;;============================================================================



List of PSM files that have been assembled

C:\Users\hpm\Desktop\fpga_video_game\latest_fpga_video_game\software\software.psm



List of defined constants

 CONSTANT name     Value        Source PSM File

 timestamp_hours   19'd         
 timestamp_minutes 26'd         
 timestamp_seconds 22'd         
 datestamp_year    15'd         
 datestamp_month   12'd         
 datestamp_day     02'd         
 NUL               00           
 BEL               07           
 BS                08           
 HT                09           
 LF                0A           
 VT                0B           
 CR                0D           
 ESC               1B           
 DEL               7F           
 DCS               90           
 ST                9C           
 stax              00           software.psm
 stay              01           software.psm
 endx              02           software.psm
 endy              03           software.psm
 busy              04           software.psm
 beam              05           software.psm
 mode              06           software.psm
 prng              07           software.psm
 leds_lo           08           software.psm
 leds_hi           09           software.psm
 qssd_lo           0A           software.psm
 qssd_hi           0B           software.psm
 qssd_dp           0C           software.psm
 switches_lo       0D           software.psm
 switches_hi       0E           software.psm
 buttons           0F           software.psm
 red               10           software.psm
 green             11           software.psm
 blue              11           software.psm
 zero              00           software.psm
 one               01           software.psm
 busy_go           01           software.psm
 beam_hi           0F           software.psm
 beam_md           07           software.psm
 beam_lo           03           software.psm
 mode_hld          00           software.psm
 mode_clr          01           software.psm
 mode_lin          02           software.psm
 mode_exp          03           software.psm
 buttons_ct        10           software.psm
 buttons_up        08           software.psm
 buttons_dn        04           software.psm
 buttons_lf        02           software.psm
 buttons_rt        01           software.psm
 start_menu_1      00           software.psm
 start_menu_2      3C           software.psm
 start_menu_3      78           software.psm
 START_STATE       00           software.psm
 PLAY_STATE        01           software.psm
 GAMEOVER_STATE    02           software.psm
 CREDITS_STATE     03           software.psm



No TABLEs defined



List of text strings

 STRING name       String         Source PSM File

 KCPSM6_version$   "v2.51"        
 datestamp$        "02 Dec 2015"  
 timestamp$        "19:26:22"     



List of line labels

   Label                     Addr  Source PSM File

 * boot                      000   software.psm
   main                      013   software.psm
   isr                       014   software.psm
   start                     01D   software.psm
   enter_play_state          02D   software.psm
   enter_start_menu          032   software.psm
   stay_in_start_state       037   software.psm
   credits                   039   software.psm
   enter_credit_state        043   software.psm
   stay_in_credit_state      047   software.psm
   gameover                  048   software.psm
   enter_play_state2         058   software.psm
   stay_in_gameover_state    062   software.psm
   play                      063   software.psm
   map                       06D   software.psm
   start_screen              078   software.psm
   draw_gameover             1E6   software.psm
   draw_credits              28C   software.psm
   draw_helicopter           328   software.psm
   draw_block                32C   software.psm
   right_edge                335   software.psm
   left_edge                 339   software.psm
   in_middle                 33D   software.psm
   finished1                 340   software.psm
   random_block_location     359   software.psm
   skip_everything           35E   software.psm
   new_random                35F   software.psm
   check_other_bound_range   363   software.psm
   move_heli_up              367   software.psm
   decrement                 36B   software.psm
   draw_helicopter_cockpit   36D   software.psm
   draw_helicopter_tail      3AC   software.psm
   draw_helicopter_blades    3E1   software.psm
 * draw_helicopter_smoke     3F5   software.psm
   draw_line                 413   software.psm
   wait                      419   software.psm
   old_draw_line             41D   software.psm
   wait0                     41F   software.psm
   check_collision           423   software.psm
   check_vertical            46E   software.psm
   loop                      470   software.psm
   no_collision              478   software.psm
   stage2_check              47E   software.psm
 * speed2                    482   software.psm
   stage3_check              483   software.psm
   stage4_check              487   software.psm
   stage5_check              48B   software.psm
   collision_occurred        48D   software.psm
   distance                  496   software.psm
   distance2                 49B   software.psm
 * isr_vector                7FF   software.psm

      * Line label has not been referenced in any instructions.
        Hint - This may indicate unused code that could be
               removed to reduce the size of this program.



Instruction usage statistics

 Instruction    Instances

 LOAD            659
 STAR              -

 AND               -
 OR                -
 XOR               -

 ADD              26
 ADDCY             -
 SUB              53
 SUBCY             -

 TEST              -
 TESTCY            -
 COMPARE          46
 COMPARECY         -

 SL0               -
 SL1               -
 SLX               -
 SLA               -
 RL                -
 SR0               -
 SR1               -
 SRX               -
 SRA               -
 RR                -

 REGBANK          11

 INPUT            13
 OUTPUT          104
 OUTPUTK           -

 STORE             -
 FETCH             -

 DISABLE           -
 ENABLE            1
 RETURNI           1

 JUMP             53
 JUMP@             -
 CALL            185
 CALL@             -
 RETURN           33
 LOAD&RETURN       -

 HWBUILD           -



End of KCPSM6 log file.
